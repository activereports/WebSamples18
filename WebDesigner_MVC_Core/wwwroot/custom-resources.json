[
  {
    "ns": "adorners",
    "lng": "en",
    "resources": {
      "table": {
        "newGroupLabel": "<New Group>",
        "detailsGroupLabel": "<Details Group>",
        "groupsLabel": "Groups"
      },
      "bandedList": {
        "detailsLabel": "<Details>",
        "groupsLabel": "Groups"
      },
      "bullet": {
        "value": "Value",
        "targetValue": "Target value"
      },
      "common": {
        "dropFieldsAndValues": "Drop fields and values here"
      },
      "chart": {
        "dataFields": "Data Fields",
        "categoryFields": "Category Fields",
        "encodingFields": "Encodings",
        "valueEncoding": {
          "fieldStub": "Value {{index}}"
        },
        "detailEncoding": {
          "fieldStub": "Details {{index}}",
          "title": "Details"
        },
        "categoryEncoding": {
          "fieldStub": "Category {{index}}"
        },
        "colorEncoding": {
          "fieldStub": "Color {{index}}",
          "title": "Color"
        },
        "shapeEncoding": {
          "fieldStub": "Shape {{index}}",
          "title": "Shape"
        },
        "sizeEncoding": {
          "fieldStub": "Size {{index}}",
          "title": "Size"
        },
        "multiValueField": "{{firstFieldValue}}, ...",
        "textEncoding": {
          "title": "Text"
        },
        "gaugePointer": {
          "fieldStub": "Pointer {{index}}"
        },
        "gaugeLabel": {
          "fieldStub": "Label {{index}}"
        },
        "gaugeRanges": "Gauge Ranges",
        "labels": "Labels"
      },
      "formattedText": {
        "previewError": "XHTML parsing error occurred. Please verify Html property value and Merge Fields values."
      },
      "shapeRoundingTip": {
        "multiCornerMode": "Press \"Alt\" key to switch to \"Single Corner\" mode",
        "singleCornerMode": "Press \"Alt\" key to switch to \"Multi-Corner\" mode"
      },
      "sparkline": {
        "seriesValue": "Series Value",
        "groupingExpressions": "Grouping Expressions"
      },
      "tableOfContents": {
        "addItem": "Add item"
      }
    }
  },
  {
    "ns": "captions",
    "lng": "en",
    "resources": {
      "barcodeUnsupportedSymbology": "[{{symbology}}] '{{itemName}}' preview is limited in design-time.",
      "dvchartAxis": {
        "category": "Category",
        "value": "Value"
      },
      "dvchartChartTitle": "Chart Title",
      "dvchartDetails": "Details [{{index}}]",
      "dvchartColor": "Color [{{index}}]",
      "dvchartShape": "Shape [{{index}}]",
      "basicSupportReportItemInfo": "{{itemLabel}} '{{itemName}}' has limited support in design-time.",
      "overflowPlaceholder": "{{overflowedItemName}} Overflow Placeholder"
    }
  },
  {
    "ns": "chartWizard",
    "lng": "en",
    "resources": {
      "buttons": {
        "btnNext": "Next",
        "btnBack": "Back",
        "btnFinish": "Finish",
        "btnCancel": "Cancel"
      },
      "titleSelectType": "Select Data and Chart type",
      "titleSettings": "Settings",
      "titlePreview": "Preview",
      "titleChartWizard": "Chart Wizard",
      "textTypeStep": "Data and Type",
      "textPreviewStep": "Preview",
      "templates": {
        "types": {
          "column": "Column",
          "bar": "Bar",
          "line": "Line",
          "area": "Area",
          "pie": "Pie",
          "doughnut": "Doughnut",
          "polarColumn": "Spiral",
          "polarBar": "Polar",
          "radarArea": "Radar Area",
          "radarBubble": "Radar Bubble",
          "radarScatter": "Radar Scatter",
          "radarLine": "Radar Line",
          "pyramid": "Pyramid",
          "funnel": "Funnel",
          "bubble": "Bubble",
          "scatter": "Scatter",
          "gantt": "Gantt",
          "candlestick": "Candlestick",
          "highLowClose": "High Low Close",
          "highLowOpenClose": "High Low Open Close",
          "rangeArea": "Range Area",
          "rangeColumn": "Range Column",
          "rangeBar": "Range Bar",
          "gauge": "Gauge"
        }
      },
      "labelSelectPalette": "Select chart palette",
      "textCustom": "Custom",
      "textAdvancedCustomization": "Advanced Customization",
      "customization": {
        "labels": {
          "area": "Area",
          "header": "Header",
          "axisX": "X axis",
          "axisY": "Y axis",
          "legend": "Legend",
          "plot": "Plot Settings",
          "footer": "Footer"
        }
      },
      "textEmpty": "Empty",
      "labelSelectDataSet": "Select Data Set",
      "settings": {
        "categories": {
          "values": "Data values",
          "category": "Data categories",
          "subcategory": "Data subcategories"
        },
        "labels": {
          "fields": "Fields",
          "gaugeRanges": "Gauge Ranges",
          "field": "Field",
          "sortDirection": "Sort Direction",
          "group": "Break-down method",
          "fieldX": "X Field",
          "fieldY": "Y Field",
          "fieldSize": "Size Field",
          "fieldStart": "Start Field",
          "fieldEnd": "End Field",
          "fieldHigh": "High Field",
          "fieldLow": "Low Field",
          "fieldOpen": "Open Field",
          "fieldClose": "Close Field",
          "lower": "Lower",
          "upper": "Upper",
          "pointer": "Gauge Pointer",
          "gaugeLabel": "Gauge Label",
          "aggregate": "Aggregate"
        }
      }
    }
  },
  {
    "ns": "common",
    "lng": "en",
    "resources": {
      "units": {
        "cm": {
          "textShortName": "cm",
          "textFullName": "Centimeters"
        },
        "in": {
          "textShortName": "in",
          "textFullName": "Inches"
        }
      },
      "textExpand": "Expand",
      "textCollapse": "Collapse",
      "textDelete": "Delete",
      "btnOk": "OK",
      "btnCancel": "Cancel",
      "btnSave": "Save",
      "textOpen": "Open..."
    }
  },
  {
    "ns": "components-RPX",
    "lng": "en",
    "resources": {
      "appBar": {
        "btnScript": "Script"
      },
      "dataTab": {
        "titleDeleteDataSource": "Delete Data Source",
        "titleEditDataSource": "Edit Data Source...",
        "titleMoveParameterDown": "Move Down",
        "titleMoveParameterUp": "Move Up"
      },
      "menu": {
        "btnReportExplorer": "Explorer"
      },
      "propertyGrid": {
        "textMultipleTypes": "<Multiple Types>",
        "textSort": "Sort",
        "textCategorized": "Categorized",
        "textAlphabetical": "Alphabetical",
        "placeholderSearchBox": "enter property name here..."
      },
      "stylesTab": {
        "titleDeleteStyle": "Delete Style",
        "titleAddStyle": "Add Style Based on \"{{parentName}}\"",
        "textBasedOn": "Based on \"{{parentName}}\"",
        "textRootStyle": "No Parent Style"
      },
      "toolbar": {
        "home": {
          "fontFamily": "Font Family",
          "fontSize": "Font Size",
          "fontWeight": "Font Weight Bold",
          "fontStyle": "Font Style Italic",
          "textDecoration": "Text Decoration Underline",
          "foreColor": "Fore Color",
          "backColor": "Back Color",
          "titleAlignLeft": "Text Align Left",
          "titleAlignCenter": "Text Align Center",
          "titleAlignRight": "Text Align Right",
          "titleAlignJustify": "Text Align Justify",
          "verticalAlignTop": "Vertical Align Top",
          "verticalAlignMiddle": "Vertical Align Middle",
          "verticalAlignBottom": "Vertical Align Bottom"
        },
        "script": {
          "events": {
            "report": {
              "textReportStart": "ReportStart",
              "textReportEnd": "ReportEnd",
              "textPageStart": "PageStart",
              "textPageEnd": "PageEnd",
              "textDataInitialize": "DataInitialize",
              "textFetchData": "FetchData",
              "textNoData": "NoData"
            },
            "section": {
              "textFormat": "Format",
              "textBeforePrint": "BeforePrint",
              "textAfterPrint": "AfterPrint"
            }
          },
          "titleObject": "Object",
          "textObject": "Object",
          "titleEvent": "Event",
          "textEvent": "Event"
        }
      },
      "scriptEditor": {
        "placeholder": "Enter {{ScriptLanguage}} code"
      }
    }
  },
  {
    "ns": "components",
    "lng": "en",
    "resources": {
      "dataPanel": {
        "commonValues": {
          "currentDateTime": "Current Date and Time",
          "pageNM": "Page N of M",
          "pageNMCumulative": "Page N of M (Cumulative)",
          "pageNMSection": "Page N of M (Section)",
          "pageNofMLabel": "\"Page \" & {{pageNumber}} & \" of \" & {{totalPages}}",
          "pageNumber": "Page Number",
          "pageNumberCumulative": "Page Number (Cumulative)",
          "pageNumberSection": "Page Number (Section)",
          "reportFolder": "Report Folder",
          "reportName": "Report Name",
          "totalPages": "Total Pages",
          "totalPagesCumulative": "Total Pages (Cumulative)",
          "totalPagesSection": "Total Pages (Section)",
          "userContext": "User Context",
          "userId": "User ID",
          "userLanguage": "User Language"
        },
        "titleMore": "More...",
        "textFieldsCount": "{{count}} field",
        "textFieldsCount_plural": "{{count}} fields",
        "textBasedOnDataSource": "based on {{dataSourceName}}",
        "titleEditDataSet": "Edit Data Set...",
        "titleSelectFields": "Select Fields...",
        "dataSets": {
          "placeholderEnterFieldName": "enter field name here...",
          "textNoMatchingFieldsFound": "No matching fields found",
          "semantic": {
            "loading": "Loading...",
            "editDataSet": "Edit Data Set...",
            "searchPlaceholder": "enter attribute or relation name here...",
            "noMatchingAttributesRelationsFound": "No matching attributes or relations found"
          }
        },
        "textSharedReference": "Shared Reference",
        "titleEditDataSource": "Edit Data Source...",
        "titleAddDataSet": "Add Data Set...",
        "fieldVariations": {
          "DateTime": [
            {
              "format": "=Year({fieldExpression})",
              "label": "Year"
            },
            {
              "format": "=Year({fieldExpression}) & \" Q\" & DatePart(\"q\", {fieldExpression})",
              "label": "Year-Quarter"
            },
            {
              "format": "=Year({fieldExpression}) & \" \" & MonthName(Month({fieldExpression}))",
              "label": "Year-Month"
            },
            {
              "format": "=Year({fieldExpression}) & \" \" & MonthName(Month({fieldExpression})) & \" \" & Day({fieldExpression})",
              "label": "Year-Month-Day"
            },
            {
              "format": "=Year({fieldExpression}) & \" W\" & DatePart(\"ww\", {fieldExpression})",
              "label": "Year-Week"
            },
            {
              "format": "=DatePart(\"q\", {fieldExpression})",
              "label": "Quarter"
            },
            {
              "format": "=Month({fieldExpression})",
              "label": "Month"
            },
            {
              "format": "=MonthName(Month({fieldExpression}))",
              "label": "MonthName"
            },
            {
              "format": "=DatePart(\"ww\", {fieldExpression})",
              "label": "Week"
            },
            {
              "format": "=Day({fieldExpression})",
              "label": "Day"
            },
            {
              "format": "=WeekdayName(Weekday({fieldExpression}))",
              "label": "DayOfWeek"
            }
          ],
          "Date": [
            {
              "format": "=Year({fieldExpression})",
              "label": "Year"
            },
            {
              "format": "=Year({fieldExpression}) & \" Q\" & DatePart(\"q\", {fieldExpression})",
              "label": "Year-Quarter"
            },
            {
              "format": "=Year({fieldExpression}) & \" \" & MonthName(Month({fieldExpression}))",
              "label": "Year-Month"
            },
            {
              "format": "=Year({fieldExpression}) & \" \" & MonthName(Month({fieldExpression})) & \" \" & Day({fieldExpression})",
              "label": "Year-Month-Day"
            },
            {
              "format": "=Year({fieldExpression}) & \" W\" & DatePart(\"ww\", {fieldExpression})",
              "label": "Year-Week"
            },
            {
              "format": "=DatePart(\"q\", {fieldExpression})",
              "label": "Quarter"
            },
            {
              "format": "=Month({fieldExpression})",
              "label": "Month"
            },
            {
              "format": "=MonthName(Month({fieldExpression}))",
              "label": "MonthName"
            },
            {
              "format": "=DatePart(\"ww\", {fieldExpression})",
              "label": "Week"
            },
            {
              "format": "=Day({fieldExpression})",
              "label": "Day"
            },
            {
              "format": "=WeekdayName(Weekday({fieldExpression}))",
              "label": "DayOfWeek"
            }
          ]
        },
        "titleMoveParameterDown": "Move Down",
        "titleMoveParameterUp": "Move Up",
        "semantic": {
          "textAttributesCount": "{{count}} attribute",
          "textAttributesCount_plural": "{{count}} attributes",
          "textRelationsCount": "{{count}} relation",
          "textRelationsCount_plural": "{{count}} relations",
          "textNoAttributes": "no attributes",
          "textNoRelations": "no relations"
        },
        "textModelVersion": "Version: {{version}}",
        "headingEditParameter": "Edit Parameter"
      },
      "chartPaletteDropdown": {
        "headingStandardPalettes": "Standard Palettes",
        "headingExtraPalettes": "Theme Palettes"
      },
      "appBar": {
        "titleUndo": "Undo",
        "titleRedo": "Redo",
        "titleNew": "New",
        "titleOpen": "Open",
        "titleSave": "Save",
        "btnSaveAs": "Save As",
        "btnPreview": "Preview",
        "btnFile": "File",
        "btnHome": "Home",
        "btnInsert": "Insert",
        "textUnsavedChanges": "Unsaved Changes",
        "btnParameters": "Parameters"
      },
      "menu": {
        "btnBack": "Back",
        "titleBack": "Back",
        "btnClose": "Close",
        "titlePin": "Pin",
        "btnLayerList": "Layers",
        "btnLibrariesList": "Libraries",
        "btnGroupEditor": "Group Editor",
        "btnReportExplorer": "Explorer"
      },
      "statusBar": {
        "btnShowAdvancedProperties": "Show Advanced Properties",
        "btnShowBasicProperties": "Show Basic Properties",
        "btnPropertiesMode": "Properties Mode",
        "common": {
          "textEnabled": "Enabled",
          "textDisabled": "Disabled"
        },
        "snapSettings": {
          "labelGridSize": "Grid Size",
          "labelSnapToGrid": "Snap To Grid",
          "labelSnapToGuides": "Snap To Guides",
          "titleSnapEnabled": "Snap Enabled",
          "titleSnapDisabled": "Snap Disabled"
        },
        "titleHideGrid": "Hide Grid",
        "titleShowGrid": "Show Grid",
        "titleHideRulers": "Hide Rulers",
        "titleShowRulers": "Show Rulers",
        "themePicker": {
          "titleTheme": "Theme",
          "themes": {
            "system": "System Theme",
            "default": "Default",
            "defaultDark": "Default Dark",
            "darkOled": "OLED Dark",
            "highContrast": "High Contrast",
            "highContrastDark": "High Contrast Dark",
            "activeReports": "ActiveReports",
            "activeReportsDark": "ActiveReports Dark"
          }
        },
        "titleZoomOut": "Zoom Out",
        "titleZoomIn": "Zoom In"
      },
      "notifications": {
        "btnDismissAll": "Dismiss All",
        "btnDismiss": "Dismiss",
        "titleNotifications": "Notifications",
        "headingError": "Error",
        "headingError_plural": "Errors",
        "headingWarning": "Warning",
        "headingWarning_plural": "Warnings",
        "headingNotification": "Notification",
        "headingNotification_plural": "Notifications"
      },
      "toolbar": {
        "titleExpand": "Expand",
        "home": {
          "textExpressionCompact": "<𝑓>",
          "textExpression": "<Expression>",
          "titleFontFamily": "Font Family",
          "titleFontSize": "Font Size",
          "titleFontWeight": "Font Weight",
          "titleFontStyle": "Font Style",
          "titleTextDecoration": "Text Decoration Underline",
          "titleTextColor": "Text Color",
          "titleBackgroundColor": "Background Color",
          "titleAlignLeft": "Text Align Left",
          "titleAlignCenter": "Text Align Center",
          "titleAlignRight": "Text Align Right",
          "titleAlignJustify": "Text Align Justify",
          "titleVerticalAlignTop": "Text Vertical Align Top",
          "titleVerticalAlignMiddle": "Text Vertical Align Middle",
          "titleVerticalAlignBottom": "Text Vertical Align Bottom",
          "titleCut": "Cut",
          "titleCopy": "Copy",
          "titlePaste": "Paste"
        }
      },
      "title": {
        "textUntitled": "Untitled"
      },
      "layerList": {
        "titleHideLayer": "Hide Layer",
        "titleShowLayer": "Show Layer",
        "titleUnlockLayer": "Unlock Layer",
        "titleLockLayer": "Lock Layer",
        "titleEditLayer": "Edit Layer",
        "titleDefaultLayerCannotBeDeleted": "Default layer can't be deleted",
        "titleDeleteLayer": "Delete layer",
        "btnAddLayer": "Add Layer"
      },
      "fieldPicker": {
        "placeholderEnterFieldName": "enter field name here..."
      },
      "propertyGrid": {
        "textReportItems": "<Report Items>",
        "textMultipleTypes": "<Multiple Types>",
        "options": {
          "showAdvancedProperty": "Show Advanced Properties",
          "hideAdvancedProperty": "Hide Advanced Properties",
          "categories": "Categories",
          "collapse": "Collapse All",
          "expand": "Expand All"
        },
        "placeholderSearchBox": "enter property name here..."
      },
      "libraries": {
        "textNoLibraries": "No available libraries",
        "textError": "Error",
        "textEmpty": "Empty",
        "textNoReportParts": "Library contains no report parts"
      },
      "tabs": {
        "textPage": "Page",
        "btnAddPage": "Add Page",
        "btnAddSection": "Add Section",
        "actions": {
          "textMoveLeft": "Move Left",
          "textMoveRight": "Move Right",
          "textInsert": "Insert",
          "textDuplicate": "Duplicate",
          "textShow": "Show",
          "textHide": "Hide",
          "textMDelete": "Delete"
        }
      },
      "themeEditor": {
        "labelNone": "<None>"
      },
      "dataFieldPickerDropdown": {
        "semantic": {
          "noMatchingAttributesRelationsFound": "No matching items found",
          "searchPlaceholder": "enter item name here..."
        }
      }
    }
  },
  {
    "ns": "contextActions-RPX",
    "lng": "en",
    "resources": {
      "labels": {
        "cut": "Cut",
        "copy": "Copy",
        "paste": "Paste",
        "delete": "Delete",
        "layout": {
          "alignToGrid": "Align to Grid",
          "sizeToGrid": "Size to Grid",
          "separator": {
            "sortControls": "Sort Controls",
            "corelateControlSizing": "Correlate Control Sizes",
            "horizontalAlignment": "Horizontal Alignment",
            "verticalAlignment": "Vertical Alignment",
            "horizontalSpacing": "Horizontal Spacing",
            "verticalSpacing": "Vertical Spacing"
          },
          "bringToFront": "Bring to Front",
          "sendToBack": "Send to Back",
          "makeSameWidth": "Make Same Width",
          "makeSameHeight": "Make Same Height",
          "makeSameSize": "Make Same Size",
          "alignToLefts": "Align to Lefts",
          "alignToCenters": "Align to Centers",
          "alignToRights": "Align to Rights",
          "alignToTops": "Align to Tops",
          "alignToMiddles": "Align to Middles",
          "alignToBottoms": "Align to Bottoms",
          "horizontal": {
            "makeSpacingEqual": "Make Horizontal Spacing Equal",
            "increaseSpacing": "Increase Horizontal Spacing",
            "decreaseSpacing": "Decrease Horizontal Spacing",
            "removeSpacing": "Remove Horizontal Spacing"
          },
          "vertical": {
            "makeSpacingEqual": "Make Vertical Spacing Equal",
            "increaseSpacing": "Increase Vertical Spacing",
            "decreaseSpacing": "Decrease Vertical Spacing",
            "removeSpacing": "Remove Vertical Spacing"
          },
          "title": "Layout"
        },
        "report": "Report",
        "addReportHeaderFooter": "Add Report Header/Footer",
        "deleteReportHeaderFooter": "Delete Report Header/Footer",
        "addPageHeaderFooter": "Add Page Header/Footer",
        "deletePageHeaderFooter": "Delete Page Header/Footer",
        "addGroupHeaderFooter": "Add Group Header/Footer",
        "reportHeader": "ReportHeader",
        "reportFooter": "ReportFooter",
        "pageHeader": "PageHeader",
        "pageFooter": "PageFooter"
      }
    }
  },
  {
    "ns": "contextActions",
    "lng": "en",
    "resources": {
      "dvchart": {
        "presetGroups": {
          "area": "Area",
          "bar": "Bar",
          "column": "Column",
          "line": "Line",
          "misc": "Miscellaneous",
          "pie": "Pie",
          "polarBar": "Polar",
          "polarColumn": "Spiral",
          "radar": "Radar",
          "range": "Range"
        },
        "presets": {
          "area": "Area",
          "areaPercentStacked": "Area Percent Stacked",
          "areaStacked": "Area Stacked",
          "bar": "Bar",
          "barPercentStacked": "Bar Percent Stacked",
          "barStacked": "Bar Stacked",
          "bubble": "Bubble",
          "candlestick": "Candlestick",
          "column": "Column",
          "columnPercentStacked": "Column Percent Stacked",
          "columnStacked": "Column Stacked",
          "doughnut": "Doughnut",
          "funnel": "Funnel",
          "gantt": "Gantt",
          "gauge": "Gauge",
          "highLowClose": "High Low Close",
          "highLowOpenClose": "High Low Open Close",
          "line": "Line",
          "lineSmooth": "Line Smooth",
          "pie": "Pie",
          "polarBar": "Polar",
          "polarBarPercentStacked": "Polar Percent Stacked",
          "polarBarStacked": "Polar Stacked",
          "polarColumn": "Spiral",
          "polarColumnPercentStacked": "Spiral Percent Stacked",
          "polarColumnStacked": "Spiral Stacked",
          "pyramid": "Pyramid",
          "radarArea": "Radar Area",
          "radarBubble": "Radar Bubble",
          "radarLine": "Radar Line",
          "radarScatter": "Radar Scatter",
          "scatter": "Scatter",
          "rangeArea": "Range Area",
          "rangeBar": "Range Bar",
          "rangeColumn": "Range Column",
          "title": "Set Plot Template"
        },
        "palette": "Set Chart Palette"
      },
      "bandedList": {
        "removeHeader": "Remove Header",
        "addHeader": "Add Header",
        "removeFooter": "Remove Footer",
        "addFooter": "Add Footer",
        "removeGroupHeader": "Remove Group Header",
        "addGroupHeader": "Add Group Header",
        "removeGroupFooter": "Remove Group Footer",
        "addGroupFooter": "Add Group Footer",
        "title": "Banded List",
        "groupTitle": "Group",
        "insertGroup": "Insert Group",
        "deleteGroup": "Delete Group"
      },
      "container": {
        "delete": "Delete",
        "expression": "Expression"
      },
      "chart": "Chart",
      "report": {
        "reportParts": {
          "title": "Report Parts",
          "titleCreateReportPart": "Create Report Part"
        },
        "layout": {
          "alignToGrid": "Align to Grid",
          "sizeToGrid": "Size to Grid",
          "separator": {
            "sortControls": "Sort Controls",
            "corelateControlSizing": "Correlate Control Sizes",
            "horizontalSpacing": "Horizontal Spacing",
            "verticalSpacing": "Vertical Spacing"
          },
          "bringToFront": "Bring to Front",
          "sendToBack": "Send to Back",
          "makeSameWidth": "Make Same Width",
          "makeSameHeight": "Make Same Height",
          "makeSameSize": "Make Same Size",
          "horizontalAlignment": "Horizontal alignment",
          "alignToLefts": "Align to Lefts",
          "alignToCenters": "Align to Centers",
          "alignToRights": "Align to Rights",
          "verticalAlignment": "Vertical alignment",
          "alignToTops": "Align to Tops",
          "alignToMiddles": "Align to Middles",
          "alignToBottoms": "Align to Bottoms",
          "horizontal": {
            "makeSpacingEqual": "Make Horizontal Spacing Equal",
            "increaseSpacing": "Increase Horizontal Spacing",
            "decreaseSpacing": "Decrease Horizontal Spacing",
            "removeSpacing": "Remove Horizontal Spacing"
          },
          "vertical": {
            "makeSpacingEqual": "Make Vertical Spacing Equal",
            "increaseSpacing": "Increase Vertical Spacing",
            "decreaseSpacing": "Decrease Vertical Spacing",
            "removeSpacing": "Remove Vertical Spacing"
          },
          "title": "Layout"
        },
        "insertSection": "Insert Section",
        "movePageBackward": "Move Page Left",
        "movePageForward": "Move Page Right",
        "deletePage": "Delete Page",
        "insertPage": "Insert Page",
        "duplicatePage": "Duplicate Page",
        "hidePage": "Hide Page",
        "showPage": "Show Page",
        "pages": "Pages",
        "moveSectionLeft": "Move Section Left",
        "moveSectionRight": "Move Section Right",
        "duplicateSection": "Duplicate Section",
        "showSection": "Show Section",
        "hideSection": "Hide Section",
        "removeSection": "Delete Section",
        "addContinuousSection": "Add Continuous Section",
        "addFixedPageSection": "Add Fixed Page Section",
        "convertToMasterReport": "Convert to Master Report",
        "changeMasterReport": "Change Master Report",
        "setMasterReport": "Set Master Report",
        "switchTheme": "Switch Theme",
        "title": "Report"
      },
      "dashboard": {
        "moveSectionLeft": "Move Section Left",
        "moveSectionRight": "Move Section Right",
        "duplicateSection": "Duplicate Section",
        "showSection": "Show Section",
        "hideSection": "Hide Section",
        "removeSection": "Delete Section",
        "switchTheme": "Switch Theme",
        "title": "Dashboard"
      },
      "reportSection": {
        "removeHeader": "Remove Header",
        "addHeader": "Add Header",
        "removeFooter": "Remove Footer",
        "addFooter": "Add Footer",
        "title": "Section"
      },
      "table": {
        "removeGroupHeader": "Remove Group Header",
        "addGroupHeader": "Add Group Header",
        "removeGroupFooter": "Remove Group Footer",
        "addGroupFooter": "Add Group Footer",
        "deleteGroup": "Delete Group",
        "groupTitle": "Group",
        "insertGroup": "Insert Group",
        "expression": "Cell Expression",
        "cellsTitle": "Cells",
        "mergeCells": "Merge Cells",
        "splitCells": "Split Cells",
        "rowTitle": "Row",
        "insertRowTitle": "Insert Row",
        "insertRow": {
          "above": "Above",
          "below": "Below"
        },
        "more": "More...",
        "deleteRow": "Delete Row",
        "insertColumn": {
          "left": "Left",
          "right": "Right"
        },
        "columnTitle": "Column",
        "insertColumnTitle": "Insert Column",
        "deleteColumn": "Delete Column",
        "removeHeader": "Remove Header",
        "addHeader": "Add Header",
        "removeDetails": "Remove Details",
        "addDetails": "Add Details",
        "removeFooter": "Remove Footer",
        "addFooter": "Add Footer",
        "title": "Table"
      },
      "tablix": {
        "mergeCells": "Merge Cells",
        "splitCells": "Split Cells",
        "cellsTitle": "Cells",
        "insertColumnTitle": "Insert Column",
        "delete": "Delete",
        "columnTitle": "Column",
        "insertRowTitle": "Insert Row",
        "rowTitle": "Row",
        "insertRow": {
          "above": "Above",
          "below": "Below",
          "insideGroupAbove": "Inside Group - Above",
          "insideGroupBelow": "Inside Group - Below",
          "outsideGroupAbove": "Outside Group - Above",
          "outsideGroupBelow": "Outside Group - Below"
        },
        "insertColumn": {
          "left": "Left",
          "right": "Right",
          "insideGroupLeft": "Inside Group - Left",
          "insideGroupRight": "Inside Group - Right",
          "outsideGroupLeft": "Outside Group - Left",
          "outsideGroupRight": "Outside Group - Right"
        },
        "more": "More...",
        "addGroup": {
          "parent": "Parent",
          "child": "Child",
          "adjacentBefore": "Adjacent Before",
          "adjacentAfter": "Adjacent After"
        },
        "enableGroup": "Enable Group",
        "addGroupTitle": "Add Group",
        "columnGroup": "Column Group",
        "disableGroup": "Disable Group",
        "rowGroup": "Row Group",
        "addTotal": {
          "contextMenuAfter": "Add Total After",
          "contextMenuBefore": "Add Total Before"
        },
        "totalTitle": "Total",
        "expression": "Cell Expression",
        "deleteRow": "Delete Row",
        "deleteColumn": "Delete Column"
      }
    }
  },
  {
    "ns": "defaults",
    "lng": "en",
    "resources": {
      "chart": {
        "innerRadius": 0.5,
        "startAngle": 0
      }
    }
  },
  {
    "ns": "dialogs",
    "lng": "en",
    "resources": {
      "common": {
        "textCancel": "Cancel"
      },
      "headingInsertRows": "Insert Rows",
      "headingInsertColumns": "Insert Columns",
      "btnInsert": "Insert",
      "btnCancel": "Cancel",
      "labelCount": "Count",
      "labelPosition": "Position",
      "expressionEditor": {
        "subtitle": "Expression Editor",
        "infoPanel": {
          "labelSyntax": "Syntax:",
          "labelDescription": "Description:",
          "labelExample": "Example:",
          "labelName": "Name:",
          "labelConstant": "Constant:"
        },
        "headingFunctions": "Functions",
        "headingInfo": "Info",
        "search": {
          "textStartTyping": "start typing to see results",
          "textNoResults": "no results for \"{{query}}\"",
          "placeholderSearch": "search..."
        },
        "headingValues": "Values",
        "placeholderExpression": "expression",
        "headingExpression": "Expression"
      },
      "dataVisualizer": {
        "title": "Data Visualizer"
      }
    }
  },
  {
    "ns": "documentItems-RPX",
    "lng": "en",
    "resources": {
      "Barcode": "Barcode",
      "CheckBox": "CheckBox",
      "CrossSectionBox": "CrossSectionBox",
      "CrossSectionLine": "CrossSectionLine",
      "Unknown": "Unknown",
      "InputFieldCheckBox": "InputFieldCheckBox",
      "InputFieldText": "InputFieldText",
      "Label": "Label",
      "Line": "Line",
      "PageBreak": "PageBreak",
      "Picture": "Picture",
      "Report": "Report",
      "ReportInfo": "ReportInfo",
      "RichTextBox": "RichTextBox",
      "Detail": "Detail",
      "PageHeader": "Page Header",
      "PageFooter": "Page Footer",
      "GroupHeader": "Group Header",
      "GroupFooter": "Group Footer",
      "ReportHeader": "Report Header",
      "ReportFooter": "Report Footer",
      "Shape": "Shape",
      "SubReport": "SubReport",
      "TextBox": "TextBox",
      "captions": {
        "basicSupportReportItemInfo": "{{itemLabel}} '{{itemName}}' has limited support in design-time."
      }
    }
  },
  {
    "ns": "documentsAPI",
    "lng": "en",
    "resources": {
      "textOpenDocumentWarnings": "Document opened with warnings",
      "romLabels": {
        "chart": "Chart",
        "dvchart": "DV.Chart",
        "matrix": "Matrix",
        "table": "Table",
        "tablix": "Tablix"
      },
      "transform": {
        "textError": "– [{{ErrorType}}] {{Message}}",
        "helpLink": "Please find more information on report items transformation at {{link}}.",
        "textReportItem": "✔ {{SourceType}} \"{{Name}}\" has been transformed to {{ResultType}}.",
        "textBadReportItem": "✘ {{SourceType}} \"{{Name}}\" couldn't have been transformed to {{ResultType}} due to internal issues:",
        "textReport": "The report \"{{reportName}}\" has been transformed."
      },
      "textReportConversion": "There have been issues while opening this report"
    }
  },
  {
    "ns": "enums-RPX",
    "lng": "en",
    "resources": {
      "mime_type": {
        "image/bmp": "image/bmp",
        "image/jpeg": "image/jpeg",
        "image/gif": "image/gif",
        "image/png": "image/png",
        "image/x-emf": "image/x-emf",
        "image/x-wmf": "image/x-wmf"
      },
      "barcode_style": {
        "None": "None",
        "Ansi39": "Ansi39",
        "Ansi39x": "Ansi39x",
        "Code_2_of_5": "Code_2_of_5",
        "Code25intlv": "Code25intlv",
        "Code25mat": "Code25mat",
        "Matrix_2_of_5": "Matrix_2_of_5",
        "Code39": "Code39",
        "Code39x": "Code39x",
        "Code_128_A": "Code_128_A",
        "Code_128_B": "Code_128_B",
        "Code_128_C": "Code_128_C",
        "Code_128auto": "Code_128auto",
        "Code_93": "Code_93",
        "Code93x": "Code93x",
        "MSI": "MSI",
        "PostNet": "PostNet",
        "Codabar": "Codabar",
        "EAN_8": "EAN_8",
        "EAN_13": "EAN_13",
        "UPC_A": "UPC_A",
        "UPC_E0": "UPC_E0",
        "UPC_E1": "UPC_E1",
        "RM4SCC": "RM4SCC",
        "UCCEAN128": "UCCEAN128",
        "QRCode": "QRCode",
        "Code49": "Code49",
        "JapanesePostal": "JapanesePostal",
        "Pdf417": "Pdf417",
        "EAN128FNC1": "EAN128FNC1",
        "RSS14": "RSS14",
        "RSS14Truncated": "RSS14Truncated",
        "RSS14Stacked": "RSS14Stacked",
        "RSS14StackedOmnidirectional": "RSS14StackedOmnidirectional",
        "RSSExpanded": "RSSExpanded",
        "RSSExpandedStacked": "RSSExpandedStacked",
        "RSSLimited": "RSSLimited",
        "DataMatrix": "DataMatrix",
        "MicroPDF417": "MicroPDF417",
        "MicroQRCode": "MicroQRCode",
        "MaxiCode": "MaxiCode",
        "GS1QRCode": "GS1QRCode",
        "GS1DataMatrix": "GS1DataMatrix",
        "Aztec": "Aztec",
        "IntelligentMail": "IntelligentMail",
        "ITF14": "ITF14",
        "Code_11": "Code_11",
        "SSCC_18": "SSCC_18",
        "Telepen": "Telepen",
        "Pharmacode": "Pharmacode",
        "PZN": "PZN",
        "HIBCCode128": "HIBCCode128",
        "HIBCCode39": "HIBCCode39",
        "ISBN": "ISBN",
        "ISSN": "ISSN",
        "ISMN": "ISMN",
        "IATA_2_of_5": "IATA_2_of_5",
        "BC412": "BC412",
        "Plessey": "Plessey",
        "IntelligentMailPackage": "IntelligentMailPackage"
      },
      "barcode_caption_position": {
        "None": "None",
        "Above": "Above",
        "Below": "Below"
      },
      "barcode_rotation": {
        "None": "None",
        "Rotate90Degrees": "Rotate90Degrees",
        "Rotate180Degrees": "Rotate180Degrees",
        "Rotate270Degrees": "Rotate270Degrees"
      },
      "border_style_inputfield": {
        "None": "None",
        "Solid": "Solid",
        "Dashed": "Dashed",
        "Inset": "Inset"
      },
      "check_style": {
        "Check": "Check",
        "Circle": "Circle",
        "Cross": "Cross",
        "Diamond": "Diamond",
        "Square": "Square",
        "Star": "Star"
      },
      "column_direction": {
        "DownAcross": "DownAcross",
        "AcrossDown": "AcrossDown"
      },
      "group_keep_together": {
        "None": "None",
        "FirstDetail": "FirstDetail",
        "All": "All"
      },
      "repeat_style": {
        "None": "None",
        "OnPage": "OnPage",
        "OnColumn": "OnColumn",
        "All": "All",
        "OnPageIncludeNoDetail": "OnPageIncludeNoDetail"
      },
      "new_page": {
        "None": "None",
        "Before": "Before",
        "After": "After",
        "BeforeAfter": "BeforeAfter"
      },
      "new_column": {
        "None": "None",
        "Before": "Before",
        "After": "After",
        "BeforeAfter": "BeforeAfter"
      },
      "script_language": {
        "C#": "C#",
        "VBNET": "VB.NET"
      },
      "compatibility_mode": {
        "GDI": "GDI",
        "CrossPlatform": "CrossPlatform"
      },
      "field_type": {
        "None": "None",
        "String": "String",
        "Date": "Date",
        "Int32": "Int32",
        "Integer": "Integer",
        "Float": "Float",
        "Double": "Double",
        "Boolean": "Boolean"
      },
      "calculated_field_type": {
        "None": "None",
        "String": "String",
        "Date": "Date",
        "Int32": "Int32",
        "Float": "Float",
        "Double": "Double",
        "Boolean": "Boolean"
      },
      "parameter_type": {
        "String": "String",
        "Date": "Date",
        "Boolean": "Boolean"
      },
      "collate": {
        "Default": "Default",
        "Collate": "Collate",
        "DontCollate": "DontCollate"
      },
      "duplex": {
        "Default": "Default",
        "Simplex": "Simplex",
        "Vertical": "Vertical",
        "Horizontal": "Horizontal"
      },
      "page_orientation": {
        "Default": "Default",
        "Portrait": "Portrait",
        "Landscape": "Landscape"
      },
      "paper_source_kind": {
        "Upper": "Upper",
        "Lower": "Lower",
        "Middle": "Middle",
        "Manual": "Manual",
        "Envelope": "Envelope",
        "ManualFeed": "ManualFeed",
        "AutomaticFeed": "AutomaticFeed",
        "TractorFeed": "TractorFeed",
        "SmallFormat": "SmallFormat",
        "LargeFormat": "LargeFormat",
        "LargeCapacity": "LargeCapacity",
        "Cassette": "Cassette",
        "FormSource": "FormSource",
        "Custom": "Custom"
      },
      "paper_kind": {
        "Custom": "Custom",
        "Letter": "Letter",
        "LetterSmall": "LetterSmall",
        "Tabloid": "Tabloid",
        "Ledger": "Ledger",
        "Legal": "Legal",
        "Statement": "Statement",
        "Executive": "Executive",
        "A3": "A3",
        "A4": "A4",
        "A4Small": "A4Small",
        "A5": "A5",
        "B4": "B4",
        "B5": "B5",
        "Folio": "Folio",
        "Quarto": "Quarto",
        "Standard10x14": "Standard10x14",
        "Standard11x17": "Standard11x17",
        "Note": "Note",
        "Number9Envelope": "Number9Envelope",
        "Number10Envelope": "Number10Envelope",
        "Number11Envelope": "Number11Envelope",
        "Number12Envelope": "Number12Envelope",
        "Number14Envelope": "Number14Envelope",
        "CSheet": "CSheet",
        "DSheet": "DSheet",
        "ESheet": "ESheet",
        "DLEnvelope": "DLEnvelope",
        "C5Envelope": "C5Envelope",
        "C3Envelope": "C3Envelope",
        "C4Envelope": "C4Envelope",
        "C6Envelope": "C6Envelope",
        "C65Envelope": "C65Envelope",
        "B4Envelope": "B4Envelope",
        "B5Envelope": "B5Envelope",
        "B6Envelope": "B6Envelope",
        "ItalyEnvelope": "ItalyEnvelope",
        "MonarchEnvelope": "MonarchEnvelope",
        "PersonalEnvelope": "PersonalEnvelope",
        "USStandardFanfold": "USStandardFanfold",
        "GermanStandardFanfold": "GermanStandardFanfold",
        "GermanLegalFanfold": "GermanLegalFanfold",
        "IsoB4": "IsoB4",
        "JapanesePostcard": "JapanesePostcard",
        "Standard9x11": "Standard9x11",
        "Standard10x11": "Standard10x11",
        "Standard15x11": "Standard15x11",
        "InviteEnvelope": "InviteEnvelope",
        "LetterExtra": "LetterExtra",
        "LegalExtra": "LegalExtra",
        "TabloidExtra": "TabloidExtra",
        "A4Extra": "A4Extra",
        "LetterTransverse": "LetterTransverse",
        "A4Transverse": "A4Transverse",
        "LetterExtraTransverse": "LetterExtraTransverse",
        "APlus": "APlus",
        "BPlus": "BPlus",
        "LetterPlus": "LetterPlus",
        "A4Plus": "A4Plus",
        "A5Transverse": "A5Transverse",
        "B5Transverse": "B5Transverse",
        "A3Extra": "A3Extra",
        "A5Extra": "A5Extra",
        "B5Extra": "B5Extra",
        "A2": "A2",
        "A3Transverse": "A3Transverse",
        "A3ExtraTransverse": "A3ExtraTransverse",
        "JapaneseDoublePostcard": "JapaneseDoublePostcard",
        "A6": "A6",
        "JapaneseEnvelopeKakuNumber2": "JapaneseEnvelopeKakuNumber2",
        "JapaneseEnvelopeKakuNumber3": "JapaneseEnvelopeKakuNumber3",
        "JapaneseEnvelopeChouNumber3": "JapaneseEnvelopeChouNumber3",
        "JapaneseEnvelopeChouNumber4": "JapaneseEnvelopeChouNumber4",
        "LetterRotated": "LetterRotated",
        "A3Rotated": "A3Rotated",
        "A4Rotated": "A4Rotated",
        "A5Rotated": "A5Rotated",
        "B4JisRotated": "B4JisRotated",
        "B5JisRotated": "B5JisRotated",
        "JapanesePostcardRotated": "JapanesePostcardRotated",
        "JapaneseDoublePostcardRotated": "JapaneseDoublePostcardRotated",
        "A6Rotated": "A6Rotated",
        "JapaneseEnvelopeKakuNumber2Rotated": "JapaneseEnvelopeKakuNumber2Rotated",
        "JapaneseEnvelopeKakuNumber3Rotated": "JapaneseEnvelopeKakuNumber3Rotated",
        "JapaneseEnvelopeChouNumber3Rotated": "JapaneseEnvelopeChouNumber3Rotated",
        "JapaneseEnvelopeChouNumber4Rotated": "JapaneseEnvelopeChouNumber4Rotated",
        "B6Jis": "B6Jis",
        "B6JisRotated": "B6JisRotated",
        "Standard12x11": "Standard12x11",
        "JapaneseEnvelopeYouNumber4": "JapaneseEnvelopeYouNumber4",
        "JapaneseEnvelopeYouNumber4Rotated": "JapaneseEnvelopeYouNumber4Rotated",
        "Prc16K": "Prc16K",
        "Prc32K": "Prc32K",
        "Prc32KBig": "Prc32KBig",
        "PrcEnvelopeNumber1": "PrcEnvelopeNumber1",
        "PrcEnvelopeNumber2": "PrcEnvelopeNumber2",
        "PrcEnvelopeNumber3": "PrcEnvelopeNumber3",
        "PrcEnvelopeNumber4": "PrcEnvelopeNumber4",
        "PrcEnvelopeNumber5": "PrcEnvelopeNumber5",
        "PrcEnvelopeNumber6": "PrcEnvelopeNumber6",
        "PrcEnvelopeNumber7": "PrcEnvelopeNumber7",
        "PrcEnvelopeNumber8": "PrcEnvelopeNumber8",
        "PrcEnvelopeNumber9": "PrcEnvelopeNumber9",
        "PrcEnvelopeNumber10": "PrcEnvelopeNumber10",
        "Prc16KRotated": "Prc16KRotated",
        "Prc32KRotated": "Prc32KRotated",
        "Prc32KBigRotated": "Prc32KBigRotated",
        "PrcEnvelopeNumber1Rotated": "PrcEnvelopeNumber1Rotated",
        "PrcEnvelopeNumber2Rotated": "PrcEnvelopeNumber2Rotated",
        "PrcEnvelopeNumber3Rotated": "PrcEnvelopeNumber3Rotated",
        "PrcEnvelopeNumber4Rotated": "PrcEnvelopeNumber4Rotated",
        "PrcEnvelopeNumber5Rotated": "PrcEnvelopeNumber5Rotated",
        "PrcEnvelopeNumber6Rotated": "PrcEnvelopeNumber6Rotated",
        "PrcEnvelopeNumber7Rotated": "PrcEnvelopeNumber7Rotated",
        "PrcEnvelopeNumber8Rotated": "PrcEnvelopeNumber8Rotated",
        "PrcEnvelopeNumber9Rotated": "PrcEnvelopeNumber9Rotated",
        "PrcEnvelopeNumber10Rotated": "PrcEnvelopeNumber10Rotated"
      },
      "string_alignment": {
        "Near": "Near",
        "Center": "Center",
        "Far": "Far"
      },
      "string_alignment_inputfield": {
        "Left": "Left",
        "Center": "Center",
        "Right": "Right"
      },
      "content_alignment": {
        "TopLeft": "TopLeft",
        "TopCenter": "TopCenter",
        "TopRight": "TopRight",
        "MiddleLeft": "MiddleLeft",
        "MiddleCenter": "MiddleCenter",
        "MiddleRight": "MiddleRight",
        "BottomLeft": "BottomLeft",
        "BottomCenter": "BottomCenter",
        "BottomRight": "BottomRight"
      },
      "line_style": {
        "Transparent": "Transparent",
        "Solid": "Solid",
        "Dash": "Dash",
        "Dot": "Dot",
        "DashDot": "DashDot",
        "DashDotDot": "DashDotDot",
        "Double": "Double"
      },
      "size_mode": {
        "Clip": "Clip",
        "Stretch": "Stretch",
        "Zoom": "Zoom"
      },
      "picture_alignment": {
        "TopLeft": "TopLeft",
        "TopRight": "TopRight",
        "Center": "Center",
        "BottomLeft": "BottomLeft",
        "BottomRight": "BottomRight"
      },
      "shape_style": {
        "Rectangle": "Rectangle",
        "Ellipse": "Ellipse",
        "RoundRect": "RoundRect"
      },
      "background_style": {
        "Solid": "Solid",
        "Gradient": "Gradient",
        "Pattern": "Pattern"
      },
      "gradient_style": {
        "Horizontal": "Horizontal",
        "Vertical": "Vertical",
        "DiagonalUp": "DiagonalUp",
        "DiagonalDown": "DiagonalDown",
        "FromCenter": "FromCenter",
        "FromCorner": "FromCorner"
      },
      "hatch_style": {
        "Horizontal": "Horizontal",
        "Vertical": "Vertical",
        "ForwardDiagonal": "ForwardDiagonal",
        "BackwardDiagonal": "BackwardDiagonal",
        "LargeGrid": "LargeGrid",
        "DiagonalCross": "DiagonalCross",
        "Percent05": "Percent05",
        "Percent10": "Percent10",
        "Percent20": "Percent20",
        "Percent25": "Percent25",
        "Percent30": "Percent30",
        "Percent40": "Percent40",
        "Percent50": "Percent50",
        "Percent60": "Percent60",
        "Percent70": "Percent70",
        "Percent75": "Percent75",
        "Percent80": "Percent80",
        "Percent90": "Percent90",
        "LightDownwardDiagonal": "LightDownwardDiagonal",
        "LightUpwardDiagonal": "LightUpwardDiagonal",
        "DarkDownwardDiagonal": "DarkDownwardDiagonal",
        "DarkUpwardDiagonal": "DarkUpwardDiagonal",
        "WideDownwardDiagonal": "WideDownwardDiagonal",
        "WideUpwardDiagonal": "WideUpwardDiagonal",
        "LightVertical": "LightVertical",
        "LightHorizontal": "LightHorizontal",
        "NarrowVertical": "NarrowVertical",
        "NarrowHorizontal": "NarrowHorizontal",
        "DarkVertical": "DarkVertical",
        "DarkHorizontal": "DarkHorizontal",
        "DashedDownwardDiagonal": "DashedDownwardDiagonal",
        "DashedUpwardDiagonal": "DashedUpwardDiagonal",
        "DashedHorizontal": "DashedHorizontal",
        "DashedVertical": "DashedVertical",
        "SmallConfetti": "SmallConfetti",
        "LargeConfetti": "LargeConfetti",
        "ZigZag": "ZigZag",
        "Wave": "Wave",
        "DiagonalBrick": "DiagonalBrick",
        "HorizontalBrick": "HorizontalBrick",
        "Weave": "Weave",
        "Plaid": "Plaid",
        "Divot": "Divot",
        "DottedGrid": "DottedGrid",
        "DottedDiamond": "DottedDiamond",
        "Shingle": "Shingle",
        "Trellis": "Trellis",
        "Sphere": "Sphere",
        "SmallGrid": "SmallGrid",
        "SmallCheckerBoard": "SmallCheckerBoard",
        "LargeCheckerBoard": "LargeCheckerBoard",
        "OutlinedDiamond": "OutlinedDiamond",
        "SolidDiamond": "SolidDiamond"
      },
      "summary_type": {
        "None": "None",
        "GrandTotal": "GrandTotal",
        "PageTotal": "PageTotal",
        "SubTotal": "SubTotal",
        "PageCount": "PageCount"
      },
      "summary_func": {
        "Sum": "Sum",
        "Avg": "Avg",
        "Count": "Count",
        "Min": "Min",
        "Max": "Max",
        "Var": "Var",
        "VarP": "VarP",
        "StdDev": "StdDev",
        "StdDevP": "StdDevP",
        "DSum": "DSum",
        "DAvg": "DAvg",
        "DCount": "DCount",
        "DVar": "DVar",
        "DVarP": "DVarP",
        "DStdDev": "DStdDev",
        "DStdDevP": "DStdDevP"
      },
      "summary_running": {
        "None": "None",
        "Group": "Group",
        "All": "All"
      },
      "richrext_rendering_type": {
        "RTF": "RTF",
        "Metafile": "Metafile",
        "PNG": "PNG",
        "TransparentPNG": "TransparentPNG"
      },
      "text_align": {
        "Left": "Left",
        "Right": "Right",
        "Center": "Center",
        "Justify": "Justify"
      },
      "text_justify": {
        "Auto": "Auto",
        "Distribute": "Distribute",
        "Distribute_all_lines": "DistributeAllLines"
      },
      "vertical_align": {
        "Top": "Top",
        "Middle": "Middle",
        "Bottom": "Bottom"
      },
      "format_string": {
        "Page_PageNumber_of_PageCount_on_RunDateTime": "Page {PageNumber} of {PageCount} on {RunDateTime}",
        "Page_PageNumber_of_PageCount": "Page {PageNumber} of {PageCount}",
        "RunDateTime": "{RunDateTime:}",
        "RunDateTime_M_d": "{RunDateTime:M/d}",
        "RunDateTime_M_d_yy": "{RunDateTime:M/d/yy}",
        "RunDateTime_M_d_yyyy}": "{RunDateTime:M/d/yyyy}",
        "RunDateTime_MM_dd_yy": "{RunDateTime:MM/dd/yy}",
        "RunDateTime_MM_dd_yyyy": "{RunDateTime:MM/dd/yyyy}",
        "RunDateTime_d_MMM": "{RunDateTime:d-MMM}",
        "RunDateTime_d_MMM_yy": "{RunDateTime:d-MMM-yy}",
        "RunDateTime_d_MMM_yyyy": "{RunDateTime:d-MMM-yyyy}",
        "RunDateTime_dd_MMM_yy": "{RunDateTime:dd-MMM-yy}",
        "RunDateTime_dd_MMM_yyyy": "{RunDateTime:dd-MMM-yyyy}",
        "RunDateTime_MMM_yy": "{RunDateTime:MMM-yy}",
        "RunDateTime_MMM_yyyy": "{RunDateTime:MMM-yyyy}",
        "RunDateTime_MMMM_yy": "{RunDateTime:MMMM-yy}",
        "RunDateTime_MMMM_yyyy": "{RunDateTime:MMMM-yyyy}",
        "RunDateTime_MMMM_d_yyyy": "{RunDateTime:MMMM d, yyyy}",
        "RunDateTime_M_d_yy_h_mm_tt": "{RunDateTime:M/d/yy h:mm tt}",
        "RunDateTime_M_d_yyyy_h_mm_tt": "{RunDateTime:M/d/yyyy h:mm tt}",
        "RunDateTime_M_d_yy_h_mm": "{RunDateTime:M/d/yy h:mm}",
        "RunDateTime_M_d_yyyy_h_mm": "{RunDateTime:M/d/yyyy h:mm}",
        "RunDateTime_M_d_yyyy": "{RunDateTime:M/d/yyyy}"
      },
      "font_weight": {
        "Normal": "Normal",
        "Bold": "Bold"
      },
      "font_style": {
        "Normal": "Normal",
        "Italic": "Italic"
      },
      "font_size": {
        "8pt": "8pt",
        "9pt": "9pt",
        "10pt": "10pt",
        "11pt": "11pt",
        "12pt": "12pt",
        "14pt": "14pt",
        "16pt": "16pt",
        "18pt": "18pt",
        "20pt": "20pt",
        "22pt": "22pt",
        "24pt": "24pt",
        "26pt": "26pt",
        "28pt": "28pt",
        "36pt": "36pt",
        "48pt": "48pt",
        "72pt": "72pt"
      },
      "white_space": {
        "Normal": "Normal",
        "Pre": "Pre",
        "NoWrap": "NoWrap"
      },
      "word_wrap": {
        "NoWrap": "NoWrap",
        "WordWrap": "WordWrap",
        "CharWrap": "CharWrap"
      },
      "kinsoku": {
        "Auto": "Auto",
        "None": "None",
        "True": "True"
      },
      "paper_size": {
        "Letter": "Letter",
        "Tabloid": "Tabloid",
        "Legal": "Legal",
        "Executive": "Executive",
        "A3": "A3",
        "A4": "A4",
        "A5": "A5",
        "A6": "A6",
        "JISB4": "B4 (JIS)",
        "JISB5": "B5 (JIS)",
        "JISB6": "B6 (JIS)",
        "ISOB5": "B5 (ISO)",
        "Custom": "Custom"
      },
      "paper_source": {
        "AutomaticFeed": "Automatic Feed",
        "Manual": "Manual",
        "Cassette": "Cassette"
      },
      "calendar": {
        "Gregorian": "Gregorian",
        "GregorianArabic": "Gregorian Arabic",
        "GregorianMiddleEastFrench": "Gregorian Middle East French",
        "GregorianTransliteratedEnglish": "Gregorian Transliterated English",
        "GregorianTransliteratedFrench": "Gregorian Transliterated French",
        "GregorianUSEnglish": "Gregorian US English",
        "Hebrew": "Hebrew",
        "Hijri": "Hijri",
        "Japanese": "Japanese",
        "Korea": "Korea",
        "Taiwan": "Taiwan",
        "ThaiBuddhist": "Thai Buddhist"
      },
      "culture": {
        "af-ZA": "Afrikaans (South Africa)",
        "sq-AL": "Albanian (Albania)",
        "ar-DZ": "Arabic (Algeria)",
        "ar-BH": "Arabic (Bahrain)",
        "ar-EG": "Arabic (Egypt)",
        "ar-IQ": "Arabic (Iraq)",
        "ar-JO": "Arabic (Jordan)",
        "ar-KW": "Arabic (Kuwait)",
        "ar-LB": "Arabic (Lebanon)",
        "ar-LY": "Arabic (Libya)",
        "ar-MA": "Arabic (Morocco)",
        "ar-OM": "Arabic (Oman)",
        "ar-QA": "Arabic (Qatar)",
        "ar-SA": "Arabic (Saudi Arabia)",
        "ar-SY": "Arabic (Syria)",
        "ar-TN": "Arabic (Tunisia)",
        "ar-AE": "Arabic (U.A.E.)",
        "ar-YE": "Arabic (Yemen)",
        "hy-AM": "Armenian (Armenia)",
        "az-Cyrl-AZ": "Azeri (Cyrillic, Azerbaijan)",
        "az-Latn-AZ": "Azeri (Latin, Azerbaijan)",
        "eu-ES": "Basque (Basque)",
        "be-BY": "Belarusian (Belarus)",
        "bg-BG": "Bulgarian (Bulgaria)",
        "ca-ES": "Catalan (Catalan)",
        "zh-HK": "Chinese (Hong Kong S.A.R.)",
        "zh-MO": "Chinese (Macao S.A.R.)",
        "zh-CN": "Chinese (People's Republic of China)",
        "zh-SG": "Chinese (Singapore)",
        "zh-TW": "Chinese (Taiwan)",
        "hr-BA": "Croatian (Bosnia and Herzegovina)",
        "hr-HR": "Croatian (Croatia)",
        "cs-CZ": "Czech (Czech Republic)",
        "da-DK": "Danish (Denmark)",
        "dv-MV": "Divehi (Maldives)",
        "nl-BE": "Dutch (Belgium)",
        "nl-NL": "Dutch (Netherlands)",
        "en-AU": "English (Australia)",
        "en-BZ": "English (Belize)",
        "en-CA": "English (Canada)",
        "en-029": "English (Caribbean)",
        "en-IE": "English (Ireland)",
        "en-JM": "English (Jamaica)",
        "en-NZ": "English (New Zealand)",
        "en-PH": "English (Republic of the Philippines)",
        "en-ZA": "English (South Africa)",
        "en-TT": "English (Trinidad and Tobago)",
        "en-GB": "English (United Kingdom)",
        "en-US": "English (United States)",
        "en-ZW": "English (Zimbabwe)",
        "et-EE": "Estonian (Estonia)",
        "fo-FO": "Faroese (Faroe Islands)",
        "fi-FI": "Finnish (Finland)",
        "fr-BE": "French (Belgium)",
        "fr-CA": "French (Canada)",
        "fr-FR": "French (France)",
        "fr-LU": "French (Luxembourg)",
        "fr-MC": "French (Principality of Monaco)",
        "fr-CH": "French (Switzerland)",
        "gl-ES": "Galician (Galician)",
        "ka-GE": "Georgian (Georgia)",
        "de-AT": "German (Austria)",
        "de-DE": "German (Germany)",
        "de-LI": "German (Liechtenstein)",
        "de-LU": "German (Luxembourg)",
        "de-CH": "German (Switzerland)",
        "el-GR": "Greek (Greece)",
        "gu-IN": "Gujarati (India)",
        "he-IL": "Hebrew (Israel)",
        "hi-IN": "Hindi (India)",
        "hu-HU": "Hungarian (Hungary)",
        "is-IS": "Icelandic (Iceland)",
        "id-ID": "Indonesian (Indonesia)",
        "it-IT": "Italian (Italy)",
        "it-CH": "Italian (Switzerland)",
        "ja-JP": "Japanese (Japan)",
        "kn-IN": "Kannada (India)",
        "kk-KZ": "Kazakh (Kazakhstan)",
        "sw-KE": "Kiswahili (Kenya)",
        "kok-IN": "Konkani (India)",
        "ko-KR": "Korean (Korea)",
        "ky-KG": "Kyrgyz (Kyrgyzstan)",
        "lv-LV": "Latvian (Latvia)",
        "lt-LT": "Lithuanian (Lithuania)",
        "mk-MK": "Macedonian (Former Yugoslav Republic of Macedonia)",
        "ms-BN": "Malay (Brunei Darussalam)",
        "ms-MY": "Malay (Malaysia)",
        "mr-IN": "Marathi (India)",
        "mn-MN": "Mongolian (Cyrillic, Mongolia)",
        "nb-NO": "Norwegian, BokmÃ¥l (Norway)",
        "nn-NO": "Norwegian, Nynorsk (Norway)",
        "fa-IR": "Persian (Iran)",
        "pl-PL": "Polish (Poland)",
        "pt-BR": "Portuguese (Brazil)",
        "pt-PT": "Portuguese (Portugal)",
        "pa-IN": "Punjabi (India)",
        "ro-RO": "Romanian (Romania)",
        "ru-RU": "Russian (Russia)",
        "sa-IN": "Sanskrit (India)",
        "sk-SK": "Slovak (Slovakia)",
        "sl-SI": "Slovenian (Slovenia)",
        "es-AR": "Spanish (Argentina)",
        "es-BO": "Spanish (Bolivia)",
        "es-CL": "Spanish (Chile)",
        "es-CO": "Spanish (Colombia)",
        "es-CR": "Spanish (Costa Rica)",
        "es-DO": "Spanish (Dominican Republic)",
        "es-EC": "Spanish (Ecuador)",
        "es-SV": "Spanish (El Salvador)",
        "es-GT": "Spanish (Guatemala)",
        "es-HN": "Spanish (Honduras)",
        "es-MX": "Spanish (Mexico)",
        "es-NI": "Spanish (Nicaragua)",
        "es-PA": "Spanish (Panama)",
        "es-PY": "Spanish (Paraguay)",
        "es-PE": "Spanish (Peru)",
        "es-PR": "Spanish (Puerto Rico)",
        "es-ES": "Spanish (Spain)",
        "es-UY": "Spanish (Uruguay)",
        "es-VE": "Spanish (Venezuela)",
        "sv-FI": "Swedish (Finland)",
        "sv-SE": "Swedish (Sweden)",
        "syr-SY": "Syriac (Syria)",
        "ta-IN": "Tamil (India)",
        "tt-RU": "Tatar (Russia)",
        "te-IN": "Telugu (India)",
        "th-TH": "Thai (Thailand)",
        "tr-TR": "Turkish (Turkey)",
        "uk-UA": "Ukrainian (Ukraine)",
        "ur-PK": "Urdu (Islamic Republic of Pakistan)",
        "uz-Cyrl-UZ": "Uzbek (Cyrillic, Uzbekistan)",
        "uz-Latn-UZ": "Uzbek (Latin, Uzbekistan)",
        "vi-VN": "Vietnamese (Vietnam)"
      },
      "ddo_char_set": {
        "Baltic": "Baltic",
        "Greek": "Greek",
        "Cyrillic": "Cyrillic",
        "Vietnamese": "Vietnamese",
        "Turkish": "Turkish",
        "Arab": "Arab",
        "Hebrew": "Hebrew",
        "CentralEuropean": "Central European",
        "Western": "Western"
      },
      "border_style": {
        "None": "None",
        "Solid": "Solid",
        "Dash": "Dash",
        "Dot": "Dot",
        "DashDot": "DashDot",
        "ThickSolid": "ThickSolid",
        "Double": "Double",
        "ThickDashDotDot": "ThickDashDotDot",
        "ThickDash": "ThickDash",
        "ThickDashDot": "ThickDashDot",
        "ThickDot": "ThickDot",
        "ExtraThickSolid": "ExtraThickSolid",
        "ThickDouble": "ThickDouble"
      }
    }
  },
  {
    "ns": "enums",
    "lng": "en",
    "resources": {
      "action": {
        "None": "None",
        "ApplyParameters": "Apply Parameters",
        "Drillthrough": "Jump to Report",
        "BookmarkLink": "Jump to Bookmark",
        "Hyperlink": "Jump to URL"
      },
      "action_apply_value_cmd": {
        "Set": "Set",
        "Reset": "Reset",
        "Toggle": "Toggle"
      },
      "auto_merge_mode": {
        "Never": "Never",
        "Always": "Always",
        "Restricted": "Restricted"
      },
      "auto_width": {
        "None": "None",
        "Proportional": "Proportional"
      },
      "axis_location": {
        "Left": "Left",
        "Right": "Right"
      },
      "axis_mode": {
        "Cartesian": "Cartesian",
        "Radial": "Radial",
        "Polygonal": "Polygonal"
      },
      "barcode_caption_location": {
        "None": "None",
        "Above": "Above",
        "Below": "Below"
      },
      "barcode_ecc000_140_symbol_size": {
        "Auto": "Auto",
        "Square9": "Square9",
        "Square11": "Square11",
        "Square13": "Square13",
        "Square15": "Square15",
        "Square17": "Square17",
        "Square19": "Square19",
        "Square21": "Square21",
        "Square23": "Square23",
        "Square25": "Square25",
        "Square27": "Square27",
        "Square29": "Square29",
        "Square31": "Square31",
        "Square33": "Square33",
        "Square35": "Square35",
        "Square37": "Square37",
        "Square39": "Square39",
        "Square41": "Square41",
        "Square43": "Square43",
        "Square45": "Square45",
        "Square47": "Square47",
        "Square49": "Square49"
      },
      "barcode_ecc200_encoding_mode": {
        "Auto": "Auto",
        "ASCII": "ASCII",
        "C40": "C40",
        "Text": "Text",
        "X12": "X12",
        "EDIFACT": "EDIFACT",
        "Base256": "Base256"
      },
      "barcode_ecc200_symbol_size": {
        "SquareAuto": "SquareAuto",
        "RectangularAuto": "RectangularAuto",
        "Square10": "Square10",
        "Square12": "Square12",
        "Square14": "Square14",
        "Square16": "Square16",
        "Square18": "Square18",
        "Square20": "Square20",
        "Square22": "Square22",
        "Square24": "Square24",
        "Square26": "Square26",
        "Square32": "Square32",
        "Square36": "Square36",
        "Square40": "Square40",
        "Square44": "Square44",
        "Square48": "Square48",
        "Square52": "Square52",
        "Square64": "Square64",
        "Square72": "Square72",
        "Square80": "Square80",
        "Square88": "Square88",
        "Square96": "Square96",
        "Square104": "Square104",
        "Square120": "Square120",
        "Square132": "Square132",
        "Square144": "Square144",
        "Rectangular8x18": "Rectangular8x18",
        "Rectangular8x32": "Rectangular8x32",
        "Rectangular12x26": "Rectangular12x26",
        "Rectangular12x36": "Rectangular12x36",
        "Rectangular16x36": "Rectangular16x36",
        "Rectangular16x48": "Rectangular16x48"
      },
      "barcode_ecc_mode": {
        "ECC000": "ECC000",
        "ECC050": "ECC050",
        "ECC080": "ECC080",
        "ECC100": "ECC100",
        "ECC140": "ECC140",
        "ECC200": "ECC200"
      },
      "barcode_encoding": {
        "37": "IBM EBCDIC (US-Canada) 37",
        "437": "OEM United States 437",
        "500": "IBM EBCDIC (International) 500",
        "708": "Arabic (ASMO 708) 708",
        "720": "Arabic (DOS) 720",
        "737": "Greek (DOS) 737",
        "775": "Baltic (DOS) 775",
        "850": "Western European (DOS) 850",
        "852": "Central European (DOS) 852",
        "855": "OEM Cyrillic 855",
        "857": "Turkish (DOS) 857",
        "858": "OEM Multilingual Latin I 858",
        "860": "Portuguese (DOS) 860",
        "861": "Icelandic (DOS) 861",
        "862": "Hebrew (DOS) 862",
        "863": "French Canadian (DOS) 863",
        "864": "Arabic (864) 864",
        "865": "Nordic (DOS) 865",
        "866": "Cyrillic (DOS) 866",
        "869": "Greek Modern (DOS) 869",
        "870": "IBM EBCDIC (Multilingual Latin-2) 870",
        "874": "Thai (Windows) 874",
        "875": "IBM EBCDIC (Greek Modern) 875",
        "932": "Japanese (Shift-JIS) 932",
        "936": "Chinese Simplified (GB2312) 936",
        "949": "Korean 949",
        "950": "Chinese Traditional (Big5) 950",
        "1026": "IBM EBCDIC (Turkish Latin-5) 1026",
        "1047": "IBM Latin-1 1047",
        "1140": "IBM EBCDIC (US-Canada-Euro) 1140",
        "1141": "IBM EBCDIC (Germany-Euro) 1141",
        "1142": "IBM EBCDIC (Denmark-Norway-Euro) 1142",
        "1143": "IBM EBCDIC (Finland-Sweden-Euro) 1143",
        "1144": "IBM EBCDIC (Italy-Euro) 1144",
        "1145": "IBM EBCDIC (Spain-Euro) 1145",
        "1146": "IBM EBCDIC (UK-Euro) 1146",
        "1147": "IBM EBCDIC (France-Euro) 1147",
        "1148": "IBM EBCDIC (International-Euro) 1148",
        "1149": "IBM EBCDIC (Icelandic-Euro) 1149",
        "1200": "Unicode 1200",
        "1201": "Unicode (Big-Endian) 1201",
        "1250": "Central European (Windows) 1250",
        "1251": "Cyrillic (Windows) 1251",
        "1252": "Western European (Windows) 1252",
        "1253": "Greek (Windows) 1253",
        "1254": "Turkish (Windows) 1254",
        "1255": "Hebrew (Windows) 1255",
        "1256": "Arabic (Windows) 1256",
        "1257": "Baltic (Windows) 1257",
        "1258": "Vietnamese (Windows) 1258",
        "1361": "Korean (Johab) 1361",
        "10000": "Western European (Mac) 10000",
        "10001": "Japanese (Mac) 10001",
        "10002": "Chinese Traditional (Mac) 10002",
        "10003": "Korean (Mac) 10003",
        "10004": "Arabic (Mac) 10004",
        "10005": "Hebrew (Mac) 10005",
        "10006": "Greek (Mac) 10006",
        "10007": "Cyrillic (Mac) 10007",
        "10008": "Chinese Simplified (Mac) 10008",
        "10010": "Romanian (Mac) 10010",
        "10017": "Ukrainian (Mac) 10017",
        "10021": "Thai (Mac) 10021",
        "10029": "Central European (Mac) 10029",
        "10079": "Icelandic (Mac) 10079",
        "10081": "Turkish (Mac) 10081",
        "10082": "Croatian (Mac) 10082",
        "12000": "Unicode (UTF-32) 12000",
        "12001": "Unicode (UTF-32 Big-Endian) 12001",
        "20000": "Chinese Traditional (CNS) 20000",
        "20001": "TCA Taiwan 20001",
        "20002": "Chinese Traditional (Eten) 20002",
        "20003": "IBM5550 Taiwan 20003",
        "20004": "TeleText Taiwan 20004",
        "20005": "Wang Taiwan 20005",
        "20105": "Western European (IA5) 20105",
        "20106": "German (IA5) 20106",
        "20107": "Swedish (IA5) 20107",
        "20108": "Norwegian (IA5) 20108",
        "20127": "US-ASCII 20127",
        "20261": "T.61 20261",
        "20269": "ISO-6937 20269",
        "20273": "IBM EBCDIC (Germany) 20273",
        "20277": "IBM EBCDIC (Denmark-Norway) 20277",
        "20278": "IBM EBCDIC (Finland-Sweden) 20278",
        "20280": "IBM EBCDIC (Italy) 20280",
        "20284": "IBM EBCDIC (Spain) 20284",
        "20285": "IBM EBCDIC (UK) 20285",
        "20290": "IBM EBCDIC (Japanese katakana) 20290",
        "20297": "IBM EBCDIC (France) 20297",
        "20420": "IBM EBCDIC (Arabic) 20420",
        "20423": "IBM EBCDIC (Greek) 20423",
        "20424": "IBM EBCDIC (Hebrew) 20424",
        "20833": "IBM EBCDIC (Korean Extended) 20833",
        "20838": "IBM EBCDIC (Thai) 20838",
        "20866": "Cyrillic (KOI8-R) 20866",
        "20871": "IBM EBCDIC (Icelandic) 20871",
        "20880": "IBM EBCDIC (Cyrillic Russian) 20880",
        "20905": "IBM EBCDIC (Turkish) 20905",
        "20924": "IBM Latin-1 20924",
        "20932": "Japanese (JIS 0208-1990 and 0212-1990) 20932",
        "20936": "Chinese Simplified (GB2312-80) 20936",
        "20949": "Korean Wansung 20949",
        "21025": "IBM EBCDIC (Cyrillic Serbian-Bulgarian) 21025",
        "21866": "Cyrillic (KOI8-U) 21866",
        "28591": "Western European (ISO) 28591",
        "28592": "Central European (ISO) 28592",
        "28593": "Latin 3 (ISO) 28593",
        "28594": "Baltic (ISO) 28594",
        "28595": "Cyrillic (ISO) 28595",
        "28596": "Arabic (ISO) 28596",
        "28597": "Greek (ISO) 28597",
        "28598": "Hebrew (ISO-Visual) 28598",
        "28599": "Turkish (ISO) 28599",
        "28603": "Estonian (ISO) 28603",
        "28605": "Latin 9 (ISO) 28605",
        "29001": "Europa 29001",
        "38598": "Hebrew (ISO-Logical) 38598",
        "50220": "Japanese (JIS) 50220",
        "50221": "Japanese (JIS-Allow 1 byte Kana) 50221",
        "50222": "Japanese (JIS-Allow 1 byte Kana SO/SI) 50222",
        "50225": "Korean (ISO) 50225",
        "50227": "Chinese Simplified (ISO-2022) 50227",
        "51932": "Japanese (EUC) 51932",
        "51936": "Chinese Simplified (EUC) 51936",
        "51949": "Korean (EUC) 51949",
        "52936": "Chinese Simplified (HZ) 52936",
        "54936": "Chinese Simplified (GB18030) 54936",
        "57002": "ISCII Devanagari 57002",
        "57003": "ISCII Bengali 57003",
        "57004": "ISCII Tamil 57004",
        "57005": "ISCII Telugu 57005",
        "57006": "ISCII Assamese 57006",
        "57007": "ISCII Oriya 57007",
        "57008": "ISCII Kannada 57008",
        "57009": "ISCII Malayalam 57009",
        "57010": "ISCII Gujarati 57010",
        "57011": "ISCII Punjabi 57011",
        "65000": "Unicode (UTF-7) 65000",
        "65001": "Unicode (UTF-8) 65001"
      },
      "barcode_gs1_composite_type": {
        "None": "None",
        "CCA": "CCA"
      },
      "barcode_maxicode_mode": {
        "Mode2": "Mode2",
        "Mode3": "Mode3",
        "Mode4": "Mode4",
        "Mode5": "Mode5",
        "Mode6": "Mode6"
      },
      "barcode_micro_pdf417_compaction_mode": {
        "Auto": "Auto",
        "TextCompactionMode": "TextCompactionMode",
        "NumericCompactionMode": "NumericCompactionMode",
        "ByteCompactionMode": "ByteCompactionMode"
      },
      "barcode_micro_pdf417_version": {
        "ColumnPriorAuto": "ColumnPriorAuto",
        "RowPriorAuto": "RowPriorAuto",
        "Version1X11": "Version1X11",
        "Version1X14": "Version1X14",
        "Version1X17": "Version1X17",
        "Version1X20": "Version1X20",
        "Version1X24": "Version1X24",
        "Version1X28": "Version1X28",
        "Version2X8": "Version2X8",
        "Version2X11": "Version2X11",
        "Version2X14": "Version2X14",
        "Version2X17": "Version2X17",
        "Version2X20": "Version2X20",
        "Version2X23": "Version2X23",
        "Version2X26": "Version2X26",
        "Version3X6": "Version3X6",
        "Version3X8": "Version3X8",
        "Version3X10": "Version3X10",
        "Version3X12": "Version3X12",
        "Version3X15": "Version3X15",
        "Version3X20": "Version3X20",
        "Version3X26": "Version3X26",
        "Version3X32": "Version3X32",
        "Version3X38": "Version3X38",
        "Version3X44": "Version3X44",
        "Version4X4": "Version4X4",
        "Version4X6": "Version4X6",
        "Version4X8": "Version4X8",
        "Version4X10": "Version4X10",
        "Version4X12": "Version4X12",
        "Version4X15": "Version4X15",
        "Version4X20": "Version4X20",
        "Version4X26": "Version4X26",
        "Version4X32": "Version4X32",
        "Version4X38": "Version4X38",
        "Version4X44": "Version4X44"
      },
      "barcode_micro_qrcode_error_level": {
        "L": "L",
        "M": "M",
        "Q": "Q"
      },
      "barcode_micro_qrcode_mask": {
        "Auto": "Auto",
        "Mask00": "Mask00",
        "Mask01": "Mask01",
        "Mask10": "Mask10",
        "Mask11": "Mask11"
      },
      "barcode_micro_qrcode_version": {
        "Auto": "Auto",
        "M1": "M1",
        "M2": "M2",
        "M3": "M3",
        "M4": "M4"
      },
      "barcode_pdf417_error_correction_level": {
        "Level0": "Level0",
        "Level1": "Level1",
        "Level2": "Level2",
        "Level3": "Level3",
        "Level4": "Level4",
        "Level5": "Level5",
        "Level6": "Level6",
        "Level7": "Level7",
        "Level8": "Level8"
      },
      "barcode_pdf417_type": {
        "Normal": "Normal",
        "Simple": "Simple"
      },
      "barcode_qrcode_error_level": {
        "M": "M",
        "L": "L",
        "H": "H",
        "Q": "Q"
      },
      "barcode_qrcode_mask": {
        "Auto": "Auto",
        "Mask000": "Mask000",
        "Mask001": "Mask001",
        "Mask010": "Mask010",
        "Mask011": "Mask011",
        "Mask100": "Mask100",
        "Mask101": "Mask101",
        "Mask110": "Mask110",
        "Mask111": "Mask111"
      },
      "barcode_qrcode_model": {
        "Model1": "Model1",
        "Model2": "Model2"
      },
      "barcode_rotation": {
        "None": "None",
        "Rotate90Degrees": "Rotate90Degrees",
        "Rotate180Degrees": "Rotate180Degrees",
        "Rotate270Degrees": "Rotate270Degrees"
      },
      "barcode_symbology": {
        "None": "None",
        "Ansi39": "ANSI 3 of 9",
        "Ansi39x": "ANSI Extended 3 of 9",
        "Aztec": "Aztec",
        "BC412": "BC412",
        "Codabar": "Codabar",
        "Code_11": "Code 11",
        "Code_128_A": "Code 128 A",
        "Code_128_B": "Code 128 B",
        "Code_128_C": "Code 128 C",
        "Code_128auto": "Code 128 Auto",
        "Code_2_of_5": "Code 2 of 5",
        "Code_93": "Code 93",
        "Code25intlv": "Interleaved 2 of 5",
        "Code39": "Code 39",
        "Code39x": "Extended Code 39",
        "Code49": "Code 49",
        "Code93x": "Extended Code 93",
        "DataMatrix": "Data Matrix",
        "EAN_13": "EAN-13",
        "EAN_8": "EAN-8",
        "EAN128FNC1": "EAN-128FNC1",
        "GS1DataMatrix": "GS1 Data Matrix",
        "GS1QRCode": "GS1 QR Code",
        "HIBCCode128": "HIBC Code 128",
        "HIBCCode39": "HIBC Code 39",
        "IATA_2_of_5": "IATA 2 of 5",
        "IntelligentMail": "Intelligent Mail",
        "IntelligentMailPackage": "Intelligent Mail Package",
        "ISBN": "ISBN (International Standard Book Number)",
        "ISMN": "ISMN (Internationally Standard Music Number)",
        "ISSN": "ISSN (International Standard Serial Number)",
        "ITF14": "ITF-14",
        "JapanesePostal": "Japanese Postal",
        "Matrix_2_of_5": "Matrix 2 of 5",
        "MaxiCode": "MaxiCode",
        "MicroPDF417": "Micro PDF417",
        "MicroQRCode": "Micro QR Code",
        "MSI": "MSI Code",
        "Pdf417": "PDF417",
        "Pharmacode": "Pharmacode",
        "Plessey": "Plessey",
        "PostNet": "PostNet",
        "PZN": "PZN (Pharmaceutical Central Number)",
        "QRCode": "QR Code",
        "RM4SCC": "RM4SCC (Royal Mail)",
        "RSS14": "RSS-14",
        "RSS14Stacked": "RSS-14 Stacked",
        "RSS14StackedOmnidirectional": "RSS-14 Stacked Omnidirectional",
        "RSS14Truncated": "RSS-14 Truncated",
        "RSSExpanded": "RSS Expanded",
        "RSSExpandedStacked": "RSS Expanded Stacked",
        "RSSLimited": "RSS Limited",
        "SSCC_18": "SSCC-18",
        "Telepen": "Telepen",
        "UCCEAN128": "UCC/EAN–128",
        "UPC_A": "UPC-A",
        "UPC_E0": "UPC-E0",
        "UPC_E1": "UPC-E1"
      },
      "border_style": {
        "None": "None",
        "Dotted": "Dotted",
        "Dashed": "Dashed",
        "Solid": "Solid",
        "Double": "Double",
        "Groove": "Groove",
        "Ridge": "Ridge",
        "Inset": "Inset",
        "WindowInset": "WindowInset",
        "Outset": "Outset",
        "DashDot": "DashDot",
        "DashDotDot": "DashDotDot"
      },
      "bullet_tick_marks": {
        "None": "None",
        "Inside": "Inside",
        "Outside": "Outside"
      },
      "calendar": {
        "Gregorian": "Gregorian",
        "GregorianArabic": "Gregorian Arabic",
        "GregorianMiddleEastFrench": "Gregorian Middle East French",
        "GregorianTransliteratedEnglish": "Gregorian Transliterated English",
        "GregorianTransliteratedFrench": "Gregorian Transliterated French",
        "GregorianUSEnglish": "Gregorian US English",
        "Hebrew": "Hebrew",
        "Hijri": "Hijri",
        "Japanese": "Japanese",
        "Korean": "Korean",
        "Taiwan": "Taiwan",
        "ThaiBuddhist": "Thai Buddhist"
      },
      "check_alignment": {
        "TopLeft": "TopLeft",
        "TopCenter": "TopCenter",
        "TopRight": "TopRight",
        "MiddleLeft": "MiddleLeft",
        "MiddleCenter": "MiddleCenter",
        "MiddleRight": "MiddleRight",
        "BottomLeft": "BottomLeft",
        "BottomCenter": "BottomCenter",
        "BottomRight": "BottomRight"
      },
      "check_style": {
        "Check": "Check",
        "Circle": "Circle",
        "Cross": "Cross",
        "Diamond": "Diamond",
        "Square": "Square",
        "Star": "Star"
      },
      "collate_by": {
        "Simple": "Simple",
        "ValueIndex": "ValueIndex",
        "Value": "Value"
      },
      "collation": {
        "Default": "Default",
        "Albanian": "Albanian",
        "Arabic": "Arabic",
        "Chinese_PRC": "Chinese PRC",
        "Chinese_PRC_Stroke": "Chinese PRC Stroke",
        "Chinese_Taiwan_Bopomofo": "Chinese Taiwan Bopomofo",
        "Chinese_Taiwan_Stroke": "Chinese Taiwan Stroke",
        "Croatian": "Croatian",
        "Cyrillic_General": "Cyrillic General",
        "Czech": "Czech",
        "Danish_Norwegian": "Danish Norwegian",
        "Estonian": "Estonian",
        "Finnish_Swedish": "Finnish Swedish",
        "French": "French",
        "Georgian_Modern_Sort": "Georgian Modern Sort",
        "German_PhoneBook": "German Phone Book",
        "Greek": "Greek",
        "Hebrew": "Hebrew",
        "Hindi": "Hindi",
        "Hungarian": "Hungarian",
        "Hungarian_Technical": "Hungarian Technical",
        "Icelandic": "Icelandic",
        "Japanese": "Japanese",
        "Japanese_Unicode": "Japanese Unicode",
        "Korean_Wansung": "Korean Wansung",
        "Korean_Wansung_Unicode": "Korean Wansung Unicode",
        "Latin1_General": "Latin-1 General",
        "Latvian": "Latvian",
        "Lithuanian": "Lithuanian",
        "Lithuanian_Classic": "Lithuanian Classic",
        "FYRO_Macedonian": "Macedonian FYRO",
        "Polish": "Polish",
        "Romanian": "Romanian",
        "Slovak": "Slovak",
        "Slovenian": "Slovenian",
        "Spanish_Mexican_Trad": "Spanish Mexican Traditional",
        "Spanish_Modern": "Spanish Modern",
        "Thai": "Thai",
        "Turkish": "Turkish",
        "Ukrainian": "Ukrainian",
        "Vietnamese": "Vietnamese"
      },
      "data_element_output": {
        "Auto": "Auto",
        "Output": "Output",
        "NoOutput": "NoOutput",
        "ContentsOnly": "ContentsOnly"
      },
      "data_element_output_aon": {
        "Auto": "Auto",
        "Output": "Output",
        "NoOutput": "NoOutput"
      },
      "data_element_output_on": {
        "Output": "Output",
        "NoOutput": "NoOutput"
      },
      "data_element_style": {
        "Auto": "Auto",
        "AttributeNormal": "AttributeNormal",
        "ElementNormal": "ElementNormal"
      },
      "data_label_position": {
        "Auto": "Auto",
        "TopLeft": "TopLeft",
        "Top": "Top",
        "TopRight": "TopRight",
        "Left": "Left",
        "Center": "Center",
        "Right": "Right",
        "BottomLeft": "BottomLeft",
        "Bottom": "Bottom",
        "BottomRight": "BottomRight"
      },
      "data_visualizer_color_type": {
        "colorScale": "Color Scale"
      },
      "data_visualizer_gradient_type": {
        "Horizontal": "Horizontal",
        "Vertical": "Vertical",
        "DiagonalUp": "DiagonalUp",
        "DiagonalDown": "DiagonalDown",
        "FromCenter": "FromCenter",
        "FromCorner": "FromCorner"
      },
      "data_visualizer_hatch_style": {
        "BackwardDiagonal": "BackwardDiagonal",
        "Cross": "Cross",
        "DarkDownwardDiagonal": "DarkDownwardDiagonal",
        "DarkHorizontal": "DarkHorizontal",
        "DarkUpwardDiagonal": "DarkUpwardDiagonal",
        "DarkVertical": "DarkVertical",
        "DashedDownwardDiagonal": "DashedDownwardDiagonal",
        "DashedHorizontal": "DashedHorizontal",
        "DashedUpwardDiagonal": "DashedUpwardDiagonal",
        "DashedVertical": "DashedVertical",
        "DiagonalBrick": "DiagonalBrick",
        "DiagonalCross": "DiagonalCross",
        "Divot": "Divot",
        "DottedDiamond": "DottedDiamond",
        "DottedGrid": "DottedGrid",
        "ForwardDiagonal": "ForwardDiagonal",
        "Horizontal": "Horizontal",
        "HorizontalBrick": "HorizontalBrick",
        "LargeCheckerBoard": "LargeCheckerBoard",
        "LargeConfetti": "LargeConfetti",
        "LargeGrid": "LargeGrid",
        "LightDownwardDiagonal": "LightDownwardDiagonal",
        "LightHorizontal": "LightHorizontal",
        "LightUpwardDiagonal": "LightUpwardDiagonal",
        "LightVertical": "LightVertical",
        "NarrowHorizontal": "NarrowHorizontal",
        "NarrowVertical": "NarrowVertical",
        "OutlinedDiamond": "OutlinedDiamond",
        "Percent05": "Percent05",
        "Percent10": "Percent10",
        "Percent20": "Percent20",
        "Percent25": "Percent25",
        "Percent30": "Percent30",
        "Percent40": "Percent40",
        "Percent50": "Percent50",
        "Percent60": "Percent60",
        "Percent70": "Percent70",
        "Percent75": "Percent75",
        "Percent80": "Percent80",
        "Percent90": "Percent90",
        "Plaid": "Plaid",
        "Shingle": "Shingle",
        "SmallCheckerBoard": "SmallCheckerBoard",
        "SmallConfetti": "SmallConfetti",
        "SmallGrid": "SmallGrid",
        "SolidDiamond": "SolidDiamond",
        "Sphere": "Sphere",
        "Trellis": "Trellis",
        "Vertical": "Vertical",
        "Wave": "Wave",
        "Weave": "Weave",
        "WideDownwardDiagonal": "WideDownwardDiagonal",
        "WideUpwardDiagonal": "WideUpwardDiagonal",
        "ZigZag": "ZigZag"
      },
      "data_visualizer_icon_set_type": {
        "Checkbox": "Checkbox",
        "3TrafficLights": "3TrafficLights",
        "Arrows": "Arrows",
        "Blank": "Blank",
        "Flags": "Flags",
        "GrayArrows": "GrayArrows",
        "Quarters": "Quarters",
        "Ratings": "Ratings",
        "RedToBlack": "RedToBlack",
        "Signs": "Signs",
        "Symbols1": "Symbols1",
        "Symbols2": "Symbols2",
        "TrafficLights": "TrafficLights"
      },
      "data_visualizer_icon_set_value": {
        "true": "True",
        "false": "False"
      },
      "data_visualizer_image_type": {
        "iconSet": "Icon Set",
        "rangeBar": "Range Bar",
        "dataBar": "Data Bar",
        "gradient": "Gradient",
        "hatch": "Hatch"
      },
      "dataset_option": {
        "true": "True",
        "false": "False",
        "Auto": "Auto"
      },
      "dataset_query_command_type": {
        "Text": "Text",
        "StoredProcedure": "StoredProcedure"
      },
      "direction": {
        "LTR": "Ltr",
        "RTL": "Rtl"
      },
      "display_type": {
        "Galley": "Galley",
        "Page": "Page"
      },
      "documentmap_numbering_style": {
        "None": "None",
        "Decimal": "1, 2, 3, 4, 5",
        "DecimalLeadingZero": "01, 02, 03, 04, 05",
        "LowerRoman": "i, ii, iii, iv, v",
        "UpperRoman": "I, II, III, IV, V",
        "LowerLatin": "a, b, c, d, e",
        "UpperLatin": "A, B, C, D, E",
        "CircledNumber": "①, ②, ③, ④, ⑤",
        "KatakanaBrackets": "(ア), (イ), (ウ), (エ), (オ)",
        "KatakanaIrohaBrackets": "イ), ロ), ハ), ニ), ホ)",
        "Katakana": "ア, イ, ウ, エ, オ",
        "KatakanaIroha": "イ, ロ, ハ, ニ, ホ",
        "KatakanaLower": "ｱ, ｲ, ｳ, ｴ, ｵ",
        "KatakanaIrohaLower": "ｨ, ﾛ, ﾊ, ﾆ, ﾎ",
        "LowerGreek": "α, β, γ, δ, ε",
        "UpperGreek": "Α, Β, Γ, Δ, Ε",
        "LowerArmenian": "ա, բ, գ, դ, ե",
        "UpperArmenian": "Ա, Բ, Գ, Դ, Ե",
        "Georgian": "ა, ბ, გ, დ, ე"
      },
      "documentmap_source": {
        "Labels": "Labels",
        "Headings": "Headings",
        "All": "All",
        "None": "None"
      },
      "dvchart_aggregate_type": {
        "None": "None",
        "Average": "Average",
        "Count": "Count",
        "CountDistinct": "CountDistinct",
        "CountOfAll": "CountOfAll",
        "List": "List",
        "Max": "Max",
        "Min": "Min",
        "PopulationStandardDeviation": "PopulationStandardDeviation",
        "PopulationVariance": "PopulationVariance",
        "Range": "Range",
        "StandardDeviation": "StandardDeviation",
        "Sum": "Sum",
        "Variance": "Variance"
      },
      "dvchart_axis_position": {
        "None": "None",
        "Near": "Near",
        "Far": "Far"
      },
      "dvchart_axis_type": {
        "X": "X",
        "Y": "Y"
      },
      "dvchart_axis_date_mode": {
        "Default": "Default",
        "Millisecond": "Millisecond",
        "Second": "Second",
        "Minute": "Minute",
        "Hour": "Hour",
        "Day": "Day",
        "Week": "Week",
        "Month": "Month",
        "Year": "Year"
      },
      "dvchart_clipping_mode": {
        "None": "None",
        "Clip": "Clip",
        "Fit": "Fit"
      },
      "dvchart_encoding_field_type": {
        "Simple": "Simple",
        "Complex": "Complex"
      },
      "dvchart_encoding_sort": {
        "None": "None",
        "Ascending": "Ascending",
        "Descending": "Descending"
      },
      "dvchart_group_type": {
        "None": "None",
        "Cluster": "Cluster",
        "Stack": "Stack"
      },
      "dvchart_group_type_wizard": {
        "Cluster": "Cluster",
        "Stacked": "Stack",
        "PercentStacked": "Percentage Stack"
      },
      "dvchart_halign": {
        "Left": "Left",
        "Center": "Center",
        "Right": "Right"
      },
      "dvchart_legend_position": {
        "Bottom": "Bottom",
        "Left": "Left",
        "Right": "Right",
        "Top": "Top"
      },
      "dvchart_line_aspect": {
        "Default": "Default",
        "Spline": "Spline",
        "StepCenter": "StepCenter",
        "StepLeft": "StepLeft",
        "StepRight": "StepRight"
      },
      "dvchart_line_position": {
        "Auto": "Auto",
        "Center": "Center"
      },
      "dvchart_orientation": {
        "Horizontal": "Horizontal",
        "Vertical": "Vertical"
      },
      "dvchart_axis_overlapping_labels": {
        "Auto": "Auto",
        "Show": "Show"
      },
      "dvchart_overlapping_labels": {
        "Auto": "Auto",
        "Show": "Show",
        "Hide": "Hide"
      },
      "dvchart_palette": {
        "Custom": "Custom",
        "Aspect": "Aspect",
        "Blue": "Blue",
        "Blue2": "Blue2",
        "BlueGreen": "BlueGreen",
        "BlueWarm": "BlueWarm",
        "Cerulan": "Cerulan",
        "Cocoa": "Cocoa",
        "Coral": "Coral",
        "Cyborg": "Cyborg",
        "Dark": "Dark",
        "Darkly": "Darkly",
        "Flatly": "Flatly",
        "Grayscale": "Grayscale",
        "Green": "Green",
        "GreenYellow": "GreenYellow",
        "HighContrast": "HighContrast",
        "Light": "Light",
        "Marquee": "Marquee",
        "Median": "Median",
        "Midnight": "Midnight",
        "Modern": "Modern",
        "Office": "Office",
        "Office2010": "Office2010",
        "Orange": "Orange",
        "OrangeRed": "OrangeRed",
        "Organic": "Organic",
        "Paper": "Paper",
        "Red": "Red",
        "RedOrange": "RedOrange",
        "RedViolet": "RedViolet",
        "Slate": "Slate",
        "Slipstream": "Slipstream",
        "Standard": "Standard",
        "Superhero": "Superhero",
        "Violet": "Violet",
        "Violet2": "Violet2",
        "Yellow": "Yellow",
        "YellowOrange": "YellowOrange",
        "Zen": "Zen"
      },
      "dvchart_plot_overlay_type": {
        "ReferenceLine": "ReferenceLine",
        "ReferenceBand": "ReferenceBand",
        "LinearTrendline": "LinearTrendline",
        "ExponentialTrendline": "ExponentialTrendline",
        "PowerTrendline": "PowerTrendline",
        "LogarithmicTrendline": "LogarithmicTrendline",
        "PolynomialTrendline": "PolynomialTrendline",
        "FourierTrendline": "FourierTrendline",
        "MovingAverageTrendline": "MovingAverageTrendline",
        "CumulativeMovingAverageTrendline": "CumulativeMovingAverageTrendline",
        "ExponentialMovingAverageTrendline": "ExponentialMovingAverageTrendline",
        "WeightedMovingAverageTrendline": "WeightedMovingAverageTrendline",
        "MovingAnnualTotalTrendline": "MovingAnnualTotalTrendline"
      },
      "dvchart_plot_overlay_display": {
        "Front": "Front",
        "Back": "Back"
      },
      "dvchart_plot_overlay_detail_level": {
        "Group": "Group",
        "Total": "Total"
      },
      "dvchart_plot_overlay_axis": {
        "X": "X",
        "Y": "Y"
      },
      "dvchart_plot_overlay_aggregate_type": {
        "Sum": "Sum",
        "Count": "Count",
        "Average": "Average",
        "Max": "Max",
        "Min": "Min",
        "Median": "Median",
        "Percentile": "Percentile"
      },
      "dvchart_plot_rule_properties": {
        "BackgroundColor": "BackgroundColor",
        "LabelTemplate": "LabelTemplate",
        "LineColor": "LineColor",
        "LineStyle": "LineStyle",
        "LineWidth": "LineWidth",
        "SymbolBackgroundColor": "SymbolBackgroundColor",
        "SymbolLineColor": "SymbolLineColor",
        "SymbolLineStyle": "SymbolLineStyle",
        "SymbolLineWidth": "SymbolLineWidth",
        "TooltipTemplate": "TooltipTemplate"
      },
      "dvchart_plot_type": {
        "Bar": "Bar",
        "Line": "Line",
        "Area": "Area",
        "Scatter": "Scatter",
        "HighLowOpenClose": "HighLowOpenClose",
        "Candlestick": "Candlestick"
      },
      "dvchart_scale": {
        "Linear": "Linear",
        "Logarithmic": "Logarithmic",
        "Ordinal": "Ordinal",
        "Percentage": "Percentage"
      },
      "dvchart_show_nulls": {
        "Connected": "Connected",
        "Gaps": "Gaps",
        "Zeros": "Zeros"
      },
      "dvchart_symbol_shape": {
        "Auto": "Auto",
        "Dot": "Dot",
        "Box": "Box",
        "Diamond": "Diamond",
        "Triangle": "Triangle",
        "X": "X",
        "Dash": "Dash",
        "Plus": "Plus"
      },
      "dvchart_target": {
        "Label": "Label",
        "ToolTip": "ToolTip"
      },
      "dvchart_template": {
        "valueField": {
          "name": "Value Field Name",
          "value": "Value Field Value"
        },
        "PercentageDetail_p0": "Percentage In Details",
        "PercentageCategory_p0": "Percentage In Category",
        "categoryField": {
          "name": "Category Field Name",
          "value": "Category Field Value"
        },
        "detailFields": {
          "name": "Details Field Name",
          "value": "Details Field Value"
        },
        "colorField": {
          "name": "Color Field Name",
          "value": "Color Field Value"
        },
        "shapeField": {
          "name": "Shape Field Name",
          "value": "Shape Field Value"
        },
        "sizeField": {
          "name": "Size Field Name",
          "value": "Size Field Value"
        }
      },
      "dvchart_text_position": {
        "Auto": "Auto",
        "Center": "Center",
        "Inside": "Inside",
        "Outside": "Outside"
      },
      "dvchart_tick_mark": {
        "None": "None",
        "Cross": "Cross",
        "Inside": "Inside",
        "Outside": "Outside"
      },
      "dvchart_valign": {
        "Top": "Top",
        "Middle": "Middle",
        "Bottom": "Bottom"
      },
      "end_cap": {
        "None": "None",
        "Arrow": "Arrow"
      },
      "font_size": {
        "8pt": "8pt",
        "9pt": "9pt",
        "10pt": "10pt",
        "11pt": "11pt",
        "12pt": "12pt",
        "14pt": "14pt",
        "16pt": "16pt",
        "18pt": "18pt",
        "20pt": "20pt",
        "22pt": "22pt",
        "24pt": "24pt",
        "26pt": "26pt",
        "28pt": "28pt",
        "36pt": "36pt",
        "48pt": "48pt",
        "72pt": "72pt"
      },
      "font_style": {
        "Normal": "Normal",
        "Italic": "Italic"
      },
      "font_weight": {
        "Lighter": "Lighter",
        "Thin": "Thin",
        "ExtraLight": "ExtraLight",
        "Light": "Light",
        "Normal": "Normal",
        "Medium": "Medium",
        "SemiBold": "SemiBold",
        "Bold": "Bold",
        "ExtraBold": "ExtraBold",
        "Heavy": "Heavy",
        "Bolder": "Bolder"
      },
      "gradient_type": {
        "None": "None",
        "LeftRight": "LeftRight",
        "TopBottom": "TopBottom",
        "Center": "Center",
        "DiagonalLeft": "DiagonalLeft",
        "DiagonalRight": "DiagonalRight",
        "HorizontalCenter": "HorizontalCenter",
        "VerticalCenter": "VerticalCenter"
      },
      "grid_mode": {
        "Dots": "Dots",
        "Lines": "Lines"
      },
      "horizontal_align": {
        "Left": "Left",
        "Center": "Center",
        "Right": "Right"
      },
      "image_repeat": {
        "Repeat": "Repeat",
        "NoRepeat": "NoRepeat",
        "RepeatX": "RepeatX",
        "RepeatY": "RepeatY"
      },
      "image_sizing": {
        "AutoSize": "AutoSize",
        "Fit": "Fit",
        "FitProportional": "FitProportional",
        "Clip": "Clip"
      },
      "image_source": {
        "External": "External",
        "Embedded": "Embedded",
        "Database": "Database"
      },
      "input_type": {
        "Text": "Text",
        "CheckBox": "CheckBox"
      },
      "keep_with_group": {
        "None": "None",
        "Before": "Before",
        "After": "After"
      },
      "label_font_style": {
        "Regular": "Regular",
        "Bold": "Bold",
        "Italic": "Italic",
        "Underline": "Underline",
        "Strikeout": "Strikeout"
      },
      "labels_text_orientation": {
        "Auto": "Auto",
        "Angled": "Angled",
        "Horizontal": "Horizontal",
        "Rotated90": "Rotated90",
        "Rotated270": "Rotated270",
        "Stacked": "Stacked"
      },
      "language": {
        "Default": "Default",
        "af-ZA": "Afrikaans - South Africa",
        "sq-AL": "Albanian - Albania",
        "gsw-FR": "Alsatian - France",
        "am-ET": "Amharic - Ethiopia",
        "ar-DZ": "Arabic - Algeria",
        "ar-BH": "Arabic - Bahrain",
        "ar-EG": "Arabic - Egypt",
        "ar-IQ": "Arabic - Iraq",
        "ar-JO": "Arabic - Jordan",
        "ar-KW": "Arabic - Kuwait",
        "ar-LB": "Arabic - Lebanon",
        "ar-LY": "Arabic - Libya",
        "ar-MA": "Arabic - Morocco",
        "ar-OM": "Arabic - Oman",
        "ar-QA": "Arabic - Qatar",
        "ar-SA": "Arabic - Saudi Arabia",
        "ar-SY": "Arabic - Syria",
        "ar-TN": "Arabic - Tunisia",
        "ar-AE": "Arabic - United Arab Emirates",
        "ar-YE": "Arabic - Yemen",
        "hy-AM": "Armenian - Armenia",
        "as-IN": "Assamese - India",
        "az-AZ-Cyrl": "Azeri (Cyrillic) - Azerbaijan",
        "az-AZ-Latn": "Azeri (Latin) - Azerbaijan",
        "ba-RU": "Bashkir - Russia",
        "eu-ES": "Basque - Basque",
        "be-BY": "Belarusian - Belarus",
        "bn-BD": "Bengali - Bangladesh",
        "bn-IN": "Bengali - India",
        "bs-Cyrl-BA": "Bosnian (Cyrillic) - Bosnia and Herzegovina",
        "bs-Latn-BA": "Bosnian (Latin) - Bosnia and Herzegovina",
        "br-FR": "Breton - France",
        "bg-BG": "Bulgarian - Bulgaria",
        "ca-ES": "Catalan - Catalan",
        "zh-HK": "Chinese - Hong Kong SAR",
        "zh-MO": "Chinese - Macau SAR",
        "zh-CN": "Chinese - People's Republic of China",
        "zh-SG": "Chinese - Singapore",
        "zh-TW": "Chinese - Taiwan",
        "co-FR": "Corsican - France",
        "hr-HR": "Croatian - Croatia",
        "hr-BA": "Croatian (Latin) - Bosnia and Herzegovina",
        "cs-CZ": "Czech - Czech Republic",
        "da-DK": "Danish - Denmark",
        "prs-AF": "Dari - Afghanistan",
        "div-MV": "Dhivehi - Maldives",
        "nl-BE": "Dutch - Belgium",
        "nl-NL": "Dutch - The Netherlands",
        "en-AU": "English - Australia",
        "en-BZ": "English - Belize",
        "en-CA": "English - Canada",
        "en-CB": "English - Caribbean",
        "en-IN": "English - India",
        "en-IE": "English - Ireland",
        "en-JM": "English - Jamaica",
        "en-MY": "English - Malaysia",
        "en-NZ": "English - New Zealand",
        "en-PH": "English - Philippines",
        "en-SG": "English - Singapore",
        "en-ZA": "English - South Africa",
        "en-TT": "English - Trinidad and Tobago",
        "en-GB": "English - United Kingdom",
        "en-US": "English - United States",
        "en-ZW": "English - Zimbabwe",
        "et-EE": "Estonian - Estonia",
        "fo-FO": "Faroese - Faroe Islands",
        "fil-PH": "Filipino - Philippines",
        "fa-IR": "Persian - Iran",
        "fi-FI": "Finnish - Finland",
        "fr-BE": "French - Belgium",
        "fr-CA": "French - Canada",
        "fr-FR": "French - France",
        "fr-LU": "French - Luxembourg",
        "fr-MC": "French - Monaco",
        "fr-CH": "French - Switzerland",
        "fy-NL": "Frisian - Netherlands",
        "gl-ES": "Galician - Galician",
        "ka-GE": "Georgian - Georgia",
        "de-AT": "German - Austria",
        "de-DE": "German - Germany",
        "de-LI": "German - Liechtenstein",
        "de-LU": "German - Luxembourg",
        "de-CH": "German - Switzerland",
        "el-GR": "Greek - Greece",
        "kl-GL": "Greenlandic - Greenland",
        "gu-IN": "Gujarati - India",
        "ha-Latn-NG": "Hausa (Latin) - Nigeria",
        "he-IL": "Hebrew - Israel",
        "hi-IN": "Hindi - India",
        "hu-HU": "Hungarian - Hungary",
        "is-IS": "Icelandic - Iceland",
        "ig-NG": "Igbo - Nigeria",
        "id-ID": "Indonesian - Indonesia",
        "iu-Latn-CA": "Inuktitut (Latin) - Canada",
        "iu-Cans-CA": "Inuktitut (Syllabics) - Canada",
        "ga-IE": "Irish - Ireland",
        "xh-ZA": "isiXhosa - South Africa",
        "zu-ZA": "isiZulu - South Africa",
        "it-IT": "Italian - Italy",
        "it-CH": "Italian - Switzerland",
        "ja-JP": "Japanese - Japan",
        "kn-IN": "Kannada - India",
        "kk-KZ": "Kazakh - Kazakhstan",
        "km-KH": "Khmer - Cambodia",
        "qut-GT": "K'iche - Guatemala",
        "rw-RW": "Kinyarwanda - Rwanda",
        "sw-KE": "Swahili - Kenya",
        "kok-IN": "Konkani - India",
        "ko-KR": "Korean - Korea",
        "ky-KG": "Kyrgyz - Kyrgyzstan",
        "lo-LA": "Lao - Lao P.D.R.",
        "lv-LV": "Latvian - Latvia",
        "lt-LT": "Lithuanian - Lithuania",
        "wee-DE": "Lower Sorbian - Germany",
        "lb-LU": "Luxembourgish - Luxembourg",
        "mk-MK": "Macedonian - Macedonia",
        "ms-BN": "Malay - Brunei",
        "ms-MY": "Malay - Malaysia",
        "ml-IN": "Malayalam - India",
        "mt-MT": "Maltese - Malta",
        "mi-NZ": "Maori - New Zealand",
        "arn-CL": "Mapudungun - Chile",
        "mr-IN": "Marathi - India",
        "moh-CA": "Mohawk - Mohawk",
        "mn-Mong-MN": "Mongolian - Mongolia",
        "mn-MN": "Mongolian (Cyrillic) - Mongolia",
        "mn-Mong-CN": "Mongolian (Traditional Mongolian) - PRC",
        "ne-NP": "Nepali - Nepal",
        "nb-NO": "Norwegian (Bokmål) - Norway",
        "nn-NO": "Norwegian (Nynorsk) - Norway",
        "oc-FR": "Occitan - France",
        "or-IN": "Oriya - India",
        "ps-AF": "Pashto - Afghanistan",
        "pl-PL": "Polish - Poland",
        "pt-BR": "Portuguese - Brazil",
        "pt-PT": "Portuguese - Portugal",
        "pa-IN": "Punjabi - India",
        "quz-BO": "Quechua - Bolivia",
        "quz-EC": "Quechua - Ecuador",
        "quz-PE": "Quechua - Peru",
        "ro-RO": "Romanian - Romania",
        "rm-CH": "Romansh - Switzerland",
        "ru-RU": "Russian - Russia",
        "smn-FI": "Sami, Inari - Finland",
        "smj-NO": "Sami, Lule - Norway",
        "smj-SE": "Sami, Lule - Sweden",
        "se-FI": "Sami, Northern - Finland",
        "se-NO": "Sami, Northern - Norway",
        "se-SE": "Sami, Northern - Sweden",
        "sms-FI": "Sami, Skolt - Finland",
        "sma-NO": "Sami, Southern - Norway",
        "sma-SE": "Sami, Southern - Sweden",
        "sa-IN": "Sanskrit - India",
        "gd-GB": "Scottish Gaelic - United Kingdom",
        "sr-SP-Cyrl": "Serbian (Cyrillic) - Serbia",
        "sr-SP-Latn": "Serbian (Latin) - Serbia",
        "nso-ZA": "Sesotho sa Leboa - South Africa",
        "tn-ZA": "Setswana - South Africa",
        "si-LK": "Sinhala - Sri Lanka",
        "sk-SK": "Slovak - Slovakia",
        "sl-SI": "Slovenian - Slovenia",
        "es-AR": "Spanish - Argentina",
        "es-BO": "Spanish - Bolivia",
        "es-CL": "Spanish - Chile",
        "es-CO": "Spanish - Colombia",
        "es-CR": "Spanish - Costa Rica",
        "es-DO": "Spanish - Dominican Republic",
        "es-EC": "Spanish - Ecuador",
        "es-SV": "Spanish - El Salvador",
        "es-GT": "Spanish - Guatemala",
        "es-HN": "Spanish - Honduras",
        "es-MX": "Spanish - Mexico",
        "es-NI": "Spanish - Nicaragua",
        "es-PA": "Spanish - Panama",
        "es-PY": "Spanish - Paraguay",
        "es-PE": "Spanish - Peru",
        "es-PR": "Spanish - Puerto Rico",
        "es-ES": "Spanish - Spain",
        "es-US": "Spanish - United States",
        "es-UY": "Spanish - Uruguay",
        "es-VE": "Spanish - Venezuela",
        "sv-FI": "Swedish - Finland",
        "sv-SE": "Swedish - Sweden",
        "syr-SY": "Syriac - Syria",
        "tg-Cyrl-TJ": "Tajik (Cyrillic) - Tajikistan",
        "tzm-Latn-DZ": "Tamazight (Latin) - Algeria",
        "ta-IN": "Tamil - India",
        "tt-RU": "Tatar - Russia",
        "te-IN": "Telugu - India",
        "th-TH": "Thai - Thailand",
        "bo-CN": "Tibetan - PRC",
        "tr-TR": "Turkish - Turkey",
        "tk-TM": "Turkmen - Turkmenistan",
        "uk-UA": "Ukrainian - Ukraine",
        "wen-DE": "Upper Sorbian - Germany",
        "ur-PK": "Urdu - Pakistan",
        "ug-CN": "Uyghur - PRC",
        "uz-UZ-Cyrl": "Uzbek (Cyrillic) - Uzbekistan",
        "uz-UZ-Latn": "Uzbek (Latin) - Uzbekistan",
        "vi-VN": "Vietnamese - Vietnam",
        "cy-GB": "Welsh - United Kingdom",
        "wo-SN": "Wolof - Senegal",
        "sah-RU": "Yakut - Russia",
        "ii-CN": "Yi - PRC",
        "yo-NG": "Yoruba - Nigeria"
      },
      "layout_direction": {
        "LTR": "Ltr",
        "RTL": "Rtl"
      },
      "layout_order": {
        "ZOrder": "Z-order",
        "NOrder": "N-order"
      },
      "legend_layout": {
        "Column": "Column",
        "Row": "Row",
        "Table": "Table"
      },
      "legend_position": {
        "TopLeft": "TopLeft",
        "TopCenter": "TopCenter",
        "TopRight": "TopRight",
        "LeftTop": "LeftTop",
        "LeftCenter": "LeftCenter",
        "LeftBottom": "LeftBottom",
        "RightTop": "RightTop",
        "RightCenter": "RightCenter",
        "RightBottom": "RightBottom",
        "BottomRight": "BottomRight",
        "BottomCenter": "BottomCenter",
        "BottomLeft": "BottomLeft"
      },
      "line_control_style": {
        "None": "None",
        "Solid": "Solid",
        "Dashed": "Dashed",
        "Dotted": "Dotted",
        "DashDot": "DashDot",
        "DashDotDot": "DashDotDot",
        "Double": "Double"
      },
      "marker_type": {
        "None": "None",
        "Auto": "Auto",
        "Circle": "Circle",
        "Cross": "Cross",
        "Diamond": "Diamond",
        "Square": "Square",
        "Triangle": "Triangle"
      },
      "mime_type": {
        "image/bmp": "image/bmp",
        "image/jpeg": "image/jpeg",
        "image/gif": "image/gif",
        "image/png": "image/png",
        "image/x-emf": "image/x-emf",
        "image/x-wmf": "image/x-wmf"
      },
      "numeral_variant": {
        "1": "1",
        "2": "2",
        "3": "3",
        "4": "4",
        "5": "5",
        "6": "6",
        "7": "7"
      },
      "operator": {
        "Equal": "Equal",
        "Like": "Like",
        "NotEqual": "NotEqual",
        "GreaterThan": "GreaterThan",
        "GreaterThanOrEqual": "GreaterThanOrEqual",
        "LessThan": "LessThan",
        "LessThanOrEqual": "LessThanOrEqual",
        "TopN": "TopN",
        "BottomN": "BottomN",
        "TopPercent": "TopPercent",
        "BottomPercent": "BottomPercent",
        "In": "In",
        "Between": "Between"
      },
      "order_by_condition": {
        "None": "None",
        "Label": "Label",
        "Value": "Value"
      },
      "orientation": {
        "Horizontal": "Horizontal",
        "Vertical": "Vertical"
      },
      "page_break": {
        "None": "None",
        "Start": "Start",
        "End": "End",
        "StartAndEnd": "StartAndEnd"
      },
      "page_break_with_between": {
        "None": "None",
        "Start": "Start",
        "End": "End",
        "StartAndEnd": "StartAndEnd",
        "Between": "Between"
      },
      "page_orientation": {
        "Portrait": "Portrait",
        "Landscape": "Landscape"
      },
      "plot_type": {
        "Auto": "Auto",
        "Line": "Line",
        "Point": "Point"
      },
      "projection_mode": {
        "Perspective": "Perspective",
        "Orthographic": "Orthographic"
      },
      "repeat_blank_rows": {
        "None": "None",
        "FillPage": "FillPage",
        "FillGroup": "FillGroup"
      },
      "reportparameter_datatype": {
        "Boolean": "Boolean",
        "Date": "Date",
        "DateTime": "DateTime",
        "Integer": "Integer",
        "Float": "Float",
        "String": "String"
      },
      "reportparts_property_type": {
        "boolean": "Boolean",
        "integer": "Integer",
        "float": "Float",
        "string": "String",
        "length": "Length",
        "color": "Color",
        "fontFamily": "FontFamily",
        "fontSize": "FontSize",
        "fontStyle": "FontStyle",
        "fontWeight": "FontWeight",
        "textDecoration": "TextDecoration",
        "lineWidth": "LineWidth",
        "borderStyle": "BorderStyle",
        "lineStyle": "LineStyle"
      },
      "reportparts_sizemode": {
        "Resizable": "Resizable",
        "Fixed": "Fixed"
      },
      "rich_text_markup": {
        "HTML": "HTML"
      },
      "shading": {
        "None": "None",
        "Simple": "Simple",
        "Real": "Real"
      },
      "shape_styles": {
        "Rectangle": "Rectangle",
        "RoundRect": "RoundRect",
        "Ellipse": "Ellipse"
      },
      "size_type": {
        "Default": "Default",
        "FitToPage": "Fit To Page",
        "FitToWidth": "Fit To Width"
      },
      "sparkline_type": {
        "Line": "Line",
        "Columns": "Columns",
        "Whiskers": "Whiskers",
        "Area": "Area",
        "StackedBar": "StackedBar"
      },
      "new_page": {
        "Next": "Next",
        "Odd": "Odd",
        "Even": "Even"
      },
      "target_shape": {
        "Line": "Line",
        "Dot": "Dot",
        "Square": "Square"
      },
      "text_align": {
        "General": "General",
        "Left": "Left",
        "Center": "Center",
        "Right": "Right",
        "Justify": "Justify"
      },
      "text_align_glcr": {
        "General": "General",
        "Left": "Left",
        "Center": "Center",
        "Right": "Right"
      },
      "text_decoration": {
        "None": "None",
        "Underline": "Underline",
        "DoubleUnderline": "DoubleUnderline",
        "Overline": "Overline",
        "LineThrough": "LineThrough"
      },
      "text_justify": {
        "Auto": "Auto",
        "Distribute": "Distribute",
        "DistributeAllLines": "DistributeAllLines"
      },
      "text_orientation": {
        "Auto": "Auto",
        "Horizontal": "Horizontal",
        "Rotated90": "Rotated90",
        "Rotated270": "Rotated270",
        "Stacked": "Stacked"
      },
      "tick_mark": {
        "None": "None",
        "Inside": "Inside",
        "Outside": "Outside",
        "Cross": "Cross"
      },
      "title_position": {
        "Center": "Center",
        "Near": "Near",
        "Far": "Far"
      },
      "unicode_bidi": {
        "Normal": "Normal",
        "Embed": "Embed",
        "BidiOverride": "BidiOverride"
      },
      "upright_in_vertical_text": {
        "None": "None",
        "Digits": "Digits",
        "DigitsAndLatinLetters": "DigitsAndLatinLetters"
      },
      "vertical_align": {
        "Top": "Top",
        "Middle": "Middle",
        "Bottom": "Bottom"
      },
      "wrap_mode": {
        "NoWrap": "NoWrap",
        "CharWrap": "CharWrap",
        "WordWrap": "WordWrap"
      },
      "writing_mode": {
        "lr-tb": "lr-tb",
        "tb-rl": "tb-rl"
      },
      "grow_direction": {
        "Column": "Column",
        "ColumnReverse": "ColumnReverse",
        "Row": "Row",
        "RowReverse": "RowReverse"
      },
      "overflow": {
        "Auto": "Auto",
        "Clip": "Clip",
        "Scroll": "Scroll",
        "Grow": "Grow"
      },
      "pve_datetime_range_unit": {
        "Year": "Year",
        "Quarter": "Quarter",
        "Month": "Month",
        "Week": "Week",
        "Day": "Day",
        "Hour": "Hour",
        "Minute": "Minute",
        "Second": "Second"
      },
      "pve_datetime_range_type": {
        "Current": "Current",
        "Last": "Last",
        "Next": "Next",
        "ToDate": "ToDate",
        "LastToDate": "LastToDate"
      },
      "pve_datetime_range_type_time": {
        "Current": "Current",
        "Last": "Last",
        "Next": "Next"
      },
      "pve_datetime_range_type_second": {
        "Last": "Last",
        "Next": "Next"
      }
    }
  },
  {
    "ns": "error",
    "lng": "en",
    "resources": {
      "errorLabel": "Error",
      "themes": {
        "textCannotLoad": "Report theme cannot be loaded",
        "textNotFound": "The theme \"{{theme}}\" used in this report is not found.",
        "textUseDefault": "The default theme \"{{theme}}\" will be used instead.",
        "textNoThemes": "Please note there are no other themes available so now the report has no theme specified.",
        "textTotFoundOrInvalid": "The theme {{theme}} used in this report either is not found or has invalid content."
      },
      "expressionNode": {
        "argumentIsNotValid": "Argument '{{argument}}' of function '{{functionName}}' is not valid. {{details}}",
        "argumentValueNotFitFunctionValueDataType": "Argument '{{argument}}' of function '{{functionName}}' should have one of the following types - {{expectedTypes}} - but has type {{actualType}}.",
        "argumentsShouldHaveSameDataType": "Arguments {{arguments}} of function '{{functionName}}' should have the same data type.",
        "typeMismatch": "Value '{{value}}' cannot be converted to {{expectedType}}."
      },
      "upgradeReportSemanticModel": {
        "entityIsAbsent": "● The entity '{{entityName}}' of the data set '{{dataSetName}}' is absent in the latest semantic model.",
        "fieldAtQueryFilterIsAbsent": "● The field '{{fieldName}}' of the data set '{{dataSetName}}' query filter is absent in the latest semantic model.",
        "fieldInControlGroupIsAbsent": "● The field '{{fieldName}}' in {{controlName}} group {{groupName}} '{{propertyLabel}}' property is absent in the latest semantic model.",
        "fieldInControlIsAbsent": "● The field '{{fieldName}}' in {{controlName}} '{{propertyLabel}}' property is absent in the latest semantic model.",
        "fieldInReportIsAbsent": "● The field '{{fieldName}}' in Report '{{propertyLabel}}' property is absent in the latest semantic model."
      }
    }
  },
  {
    "ns": "expressionFields",
    "lng": "en",
    "resources": {
      "chart": {
        "Current": {
          "Category": {
            "description": "Represents the target element Category Field value.",
            "example": "=Chart!CurrentCategory=1; =Chart!CurrentCategory>10; =Chart!CurrentCategory=\"Value1\"; ",
            "label": "Category",
            "syntax": "Chart!CurrentCategory <Comparison operator> <Value>"
          },
          "Data": {
            "description": "Represents the target element Data Field value.",
            "example": "=Chart!CurrentData=1; =Chart!CurrentData>10; =Chart!CurrentData=\"Value1\"; ",
            "label": "Data",
            "syntax": "Chart!CurrentData <Comparison operator> <Value>"
          },
          "Detail": {
            "description": "Represents the target element Detail Field Encoding value.",
            "example": "=Chart!CurrentDetail=1; =Chart!CurrentDetail>10; =Chart!CurrentDetail=\"Value1\"; ",
            "label": "Detail",
            "syntax": "Chart!CurrentDetail <Comparison operator> <Value>"
          },
          "DataHigh": {
            "description": "Represents the target element 'High' value in financial charts.",
            "example": "=Chart!CurrentDataHigh=1; =Chart!CurrentDataHigh>10; =Chart!CurrentDataHigh=\"Value1\"; ",
            "label": "DataHigh",
            "syntax": "Chart!CurrentDataHigh <Comparison operator> <Value>"
          },
          "DataLow": {
            "description": "Represents the target element 'Low' value in financial charts.",
            "example": "=Chart!CurrentDataLow=1; =Chart!CurrentDataLow>10; =Chart!CurrentDataLow=\"Value1\"; ",
            "label": "DataLow",
            "syntax": "Chart!CurrentDataLow <Comparison operator> <Value>"
          },
          "DataOpen": {
            "description": "Represents the target element 'Open' value in financial charts.",
            "example": "=Chart!CurrentDataOpen=1; =Chart!CurrentDataOpen>10; =Chart!CurrentDataOpen=\"Value1\"; ",
            "label": "DataOpen",
            "syntax": "Chart!CurrentDataOpen <Comparison operator> <Value>"
          },
          "DataClose": {
            "description": "Represents the target element 'Close' value in financial charts.",
            "example": "=Chart!CurrentDataClose=1; =Chart!CurrentDataClose>10; =Chart!CurrentDataClose=\"Value1\"; ",
            "label": "DataClose",
            "syntax": "Chart!CurrentDataClose <Comparison operator> <Value>"
          },
          "DataUpper": {
            "description": "Represents the target element 'Upper' value in the gantt and range charts.",
            "example": "=Chart!CurrentDataUpper=1; =Chart!CurrentDataUpper>10; =Chart!CurrentDataUpper=\"Value1\"; ",
            "label": "DataUpper",
            "syntax": "Chart!CurrentDataUpper <Comparison operator> <Value>"
          },
          "DataLower": {
            "description": "Represents the target element 'Lower' value in the gantt and range charts.",
            "example": "=Chart!CurrentDataLower=1; =Chart!CurrentDataLower>10; =Chart!CurrentDataLower=\"Value1\"; ",
            "label": "DataLower",
            "syntax": "Chart!CurrentDataLower <Comparison operator> <Value>"
          },
          "label": "Current Item"
        },
        "Next": {
          "Category": {
            "description": "Represents the Category Field value next to the target element.",
            "example": "=Chart!NextCategory=1; =Chart!NextCategory>10; =Chart!NextCategory=\"Value1\"; ",
            "label": "Category",
            "syntax": "Chart!NextCategory <Comparison operator> <Value>"
          },
          "Data": {
            "description": "Represents the Data Field next to the target element.",
            "example": "=Chart!NextData=1; =Chart!NextData>10; =Chart!NextData=\"Value1\"; ",
            "label": "Data",
            "syntax": "Chart!NextData <Comparison operator> <Value>"
          },
          "Detail": {
            "description": "Represents the Detail Field Encoding value next to the target element.",
            "example": "=Chart!NextDetail=1; =Chart!NextDetail>10; =Chart!NextDetail=\"Value1\"; ",
            "label": "Detail",
            "syntax": "Chart!NextDetail <Comparison operator> <Value>"
          },
          "DataHigh": {
            "description": "Represents the 'High' value next to the target element in financial charts.",
            "example": "=Chart!NextDataHigh=1; =Chart!NextDataHigh>10; =Chart!NextDataHigh=\"Value1\"; ",
            "label": "DataHigh",
            "syntax": "Chart!NextDataHigh <Comparison operator> <Value>"
          },
          "DataLow": {
            "description": "Represents the 'Low' value next to the target element in financial charts.",
            "example": "=Chart!NextDataLow=1; =Chart!NextDataLow>10; =Chart!NextDataLow=\"Value1\"; ",
            "label": "DataLow",
            "syntax": "Chart!NextDataLow <Comparison operator> <Value>"
          },
          "DataOpen": {
            "description": "Represents the 'Open' value next to the target element in financial charts.",
            "example": "=Chart!NextDataOpen=1; =Chart!NextDataOpen>10; =Chart!NextDataOpen=\"Value1\"; ",
            "label": "DataOpen",
            "syntax": "Chart!NextDataOpen <Comparison operator> <Value>"
          },
          "DataClose": {
            "description": "Represents the 'Close' value next to the target element in financial charts.",
            "example": "=Chart!NextDataClose=1; =Chart!NextDataClose>10; =Chart!NextDataClose=\"Value1\"; ",
            "label": "DataClose",
            "syntax": "Chart!NextDataClose <Comparison operator> <Value>"
          },
          "DataUpper": {
            "description": "Represents the 'Upper' value next to the target element in the gantt and range charts.",
            "example": "=Chart!NextDataUpper=1; =Chart!NextDataUpper>10; =Chart!NextDataUpper=\"Value1\"; ",
            "label": "DataUpper",
            "syntax": "Chart!NextDataUpper <Comparison operator> <Value>"
          },
          "DataLower": {
            "description": "Represents the 'Lower' value next to the target element in the gantt and range charts.",
            "example": "=Chart!NextDataLower=1; =Chart!NextDataLower>10; =Chart!NextDataLower=\"Value1\"; ",
            "label": "DataLower",
            "syntax": "Chart!NextDataLower <Comparison operator> <Value>"
          },
          "label": "Next Item"
        },
        "Previous": {
          "Category": {
            "description": "Represents the Category Field value previous to the target element.",
            "example": "=Chart!PreviousCategory=1; =Chart!PreviousCategory>10; =Chart!PreviousCategory=\"Value1\"; ",
            "label": "Category",
            "syntax": "Chart!PreviousCategory <Comparison operator> <Value>"
          },
          "Data": {
            "description": "Represents the Data Field value previous to the target element.",
            "example": "=Chart!PreviousData=1; =Chart!PreviousData>10; =Chart!PreviousData=\"Value1\"; ",
            "label": "Data",
            "syntax": "Chart!PreviousData <Comparison operator> <Value>"
          },
          "Detail": {
            "description": "Represents the Detail Field Encoding value previous to the target element.",
            "example": "=Chart!PreviousDetail=1; =Chart!PreviousDetail>10; =Chart!PreviousDetail=\"Value1\"; ",
            "label": "Detail",
            "syntax": "Chart!PreviousDetail <Comparison operator> <Value>"
          },
          "DataHigh": {
            "description": "Represents the 'High' value previous to the target element in financial charts.",
            "example": "=Chart!PreviousDataHigh=1; =Chart!PreviousDataHigh>10; =Chart!PreviousDataHigh=\"Value1\"; ",
            "label": "DataHigh",
            "syntax": "Chart!PreviousDataHigh <Comparison operator> <Value>"
          },
          "DataLow": {
            "description": "Represents the 'Low' value previous to the target element in financial charts.",
            "example": "=Chart!PreviousDataLow=1; =Chart!PreviousDataLow>10; =Chart!PreviousDataLow=\"Value1\"; ",
            "label": "DataLow",
            "syntax": "Chart!PreviousDataLow <Comparison operator> <Value>"
          },
          "DataOpen": {
            "description": "Represents the 'Open' value previous to the target element in financial charts.",
            "example": "=Chart!PreviousDataOpen=1; =Chart!PreviousDataOpen>10; =Chart!PreviousDataOpen=\"Value1\"; ",
            "label": "DataOpen",
            "syntax": "Chart!PreviousDataOpen <Comparison operator> <Value>"
          },
          "DataClose": {
            "description": "Represents the 'Close' value previous to the target element in financial charts.",
            "example": "=Chart!PreviousDataClose=1; =Chart!PreviousDataClose>10; =Chart!PreviousDataClose=\"Value1\"; ",
            "label": "DataClose",
            "syntax": "Chart!PreviousDataClose <Comparison operator> <Value>"
          },
          "DataUpper": {
            "description": "Represents the 'Upper' value previous to the target element in the gantt and range charts.",
            "example": "=Chart!PreviousDataUpper=1; =Chart!PreviousDataUpper>10; =Chart!PreviousDataUpper=\"Value1\"; ",
            "label": "DataUpper",
            "syntax": "Chart!PreviousDataUpper <Comparison operator> <Value>"
          },
          "DataLower": {
            "description": "Represents the 'Lower' value previous to the target element in the gantt and range charts.",
            "example": "=Chart!PreviousDataLower=1; =Chart!PreviousDataLower>10; =Chart!PreviousDataLower=\"Value1\"; ",
            "label": "DataLower",
            "syntax": "Chart!PreviousDataLower <Comparison operator> <Value>"
          },
          "label": "Previous Item"
        },
        "Functions": {
          "CurrentValue": {
            "description": "Represents the current value of a data point on specified plot.",
            "example": "=CurrentValue(\"plot1\"); =CurrentValue(\"plot1\",\"high\"); ",
            "label": "CurrentValue",
            "syntax": "CurrentValue(\"plot name\" , \"optional value identifier (high, low, open, close, upper, lower)\")"
          },
          "NextValue": {
            "description": "Represents the data point value next to current value on specified plot.",
            "example": "=NextValue(\"plot1\"); =NextValue(\"plot1\",\"high\"); ",
            "label": "NextValue",
            "syntax": "NextValue(\"plot name\" , \"optional value identifier (high, low, open, close, upper, lower)\")"
          },
          "PreviousValue": {
            "description": "Represents the data point value previous to current value on specified plot.",
            "example": "=PreviousValue(\"plot1\"); =PreviousValue(\"plot1\",\"high\"); ",
            "label": "PreviousValue",
            "syntax": "PreviousValue(\"plot name\" , \"optional value identifier (high, low, open, close, upper, lower)\")"
          },
          "label": "Functions"
        },
        "label": "Chart"
      },
      "commonValues": {
        "info": {
          "currentDateTime": {
            "description": "Displays the current date and time. It can be used in the Page Header and Page Footer."
          },
          "pageNM": {
            "description": "Displays the current page number (N) and the total number of pages (M) in the format 'N of M'. It can be used in the Page Header and Page Footer."
          },
          "pageNMCumulative": {
            "description": "Displays both the current page and the total number of cumulative pages in the report. Page N of M (Cumulative) is applied to page numbering when you use collation in the report."
          },
          "pageNMSection": {
            "description": "Displays the current page number (N) and the total number of pages (M) in the format 'N of M,' of the section to which the function belongs. The section can be a report or a data region."
          },
          "pageNumber": {
            "description": "Displays the current page number. It can be used in the Page Header and Page Footer."
          },
          "pageNumberCumulative": {
            "description": "Displays the current cumulative page number. Page Number (Cumulative) is applied to page numbering when you use collation in the report."
          },
          "pageNumberSection": {
            "description": "Displays the current page number of the section to which the function belongs. The section can be a report or a data region."
          },
          "reportName": {
            "description": "Displays the name of the report."
          },
          "totalPages": {
            "description": "Displays the total number of pages. It can be used in the Page Header and Page Footer."
          },
          "totalPagesCumulative": {
            "description": "Displays the total number of cumulative pages in the report. Total Pages (Cumulative) is applied to page numbering when you use collation in the report."
          },
          "totalPagesSection": {
            "description": "Displays the total number of pages of the section to which the function belongs. The section can be a report or a data region."
          },
          "userContext": {
            "description": "Use only with function, e.g. UserContext.GetValue(\"name\"), UserContext.NumberToWords(123)."
          },
          "userId": {
            "description": "Displays the User ID of the user previewing the report."
          },
          "userLanguage": {
            "description": "Displays the Language of the user previewing the report as per system settings."
          },
          "textboxValue": {
            "description": "This variable will be replaced with the current textbox(es) value(s) when saved.",
            "example": "=Sum($$)",
            "example_i11n": "{Sum($$$)}",
            "label": "Current Textbox Value"
          }
        },
        "titles": {
          "label": "Common Values"
        }
      },
      "constants": {
        "dvchart_template": {
          "PercentageCategory_p0": {
            "description": "Displays the percentage of the Value field within the Category."
          },
          "PercentageDetail_p0": {
            "description": "Displays the percentage of the Value field within the Details."
          },
          "categoryField": {
            "name": {
              "description": "Displays the Category field name."
            },
            "value": {
              "description": "Displays the Category field value."
            }
          },
          "colorField": {
            "name": {
              "description": "Displays the Color field name."
            },
            "value": {
              "description": "Displays the Color field value."
            }
          },
          "detailFields": {
            "name": {
              "description": "Displays the Details field name."
            },
            "value": {
              "description": "Displays the Details field value."
            }
          },
          "shapeField": {
            "name": {
              "description": "Displays the Shape field name."
            },
            "value": {
              "description": "Displays the Shape field value."
            }
          },
          "sizeField": {
            "name": {
              "description": "Displays the Size field name."
            },
            "value": {
              "description": "Displays the Size field value."
            }
          },
          "valueField": {
            "name": {
              "description": "Displays the Value field name."
            },
            "value": {
              "description": "Displays the Value field value."
            }
          }
        },
        "titles": {
          "label": "Constants"
        }
      },
      "documentMap": {
        "info": {
          "path": {
            "description": "Returns the path of the TOC level.",
            "example": "=DocumentMap.Path & \"This is Heading 1\"",
            "label": "Path"
          }
        },
        "titles": {
          "label": "Document Map"
        }
      },
      "functions": {
        "info": {
          "aggregate": {
            "aggregateIf": {
              "description": "Calculates the aggregate of the values from the specified expression if the Boolean expression meets the given condition.",
              "example": "=AggregateIf(Fields!Discontinued.Value = True, \"Sum\", Fields!InStock.Value)",
              "label": "AggregateIf",
              "syntax": "AggregateIf(<Condition>, <AggregateFunction>, <AggregateArguments>)"
            },
            "aggregateIfWithScope": {
              "description": "Calculates the aggregate of the values from the specified expression if the Boolean expression meets the given condition, within the specified scope.",
              "example": "=AggregateIf(Fields!Discontinued.Value = True, \"Sum\", Fields!InStock.Value, \"Category\")",
              "label": "AggregateIf (with scope)",
              "syntax": "AggregateIf(<Condition>, <AggregateFunction>, <AggregateArguments>, <Scope>)"
            },
            "avg": {
              "description": "Calculates the average of all non-null numeric values from the specified expression.",
              "example": "=Avg(Fields!LifeExpentancy.Value)",
              "label": "Avg",
              "syntax": "Avg(<Values>)"
            },
            "avgWithScope": {
              "description": "Calculates the average of all non-null numeric values from the specified expression within the specified scope.",
              "example": "=Avg(Fields!LifeExpentancy.Value, \"GroupByCountry\")",
              "label": "Avg (with scope)",
              "syntax": "Avg(<Values>, <Scope>)"
            },
            "count": {
              "description": "Calculates the number of non-null values from the specified expression.",
              "example": "=Count(Fields!EmployeeID.Value)",
              "label": "Count",
              "syntax": "Count(<Values>)"
            },
            "countDistinct": {
              "description": "Calculates the number of non-repeated values from the specified expression.",
              "example": "=CountDistinct(Fields!OrderID.Value)",
              "label": "CountDistinct",
              "syntax": "CountDistinct(<Values>)"
            },
            "countDistinctWithScope": {
              "description": "Calculates the number of non-repeated values from the specified expression within the specified scope.",
              "example": "=CountDistinct(Fields!OrderID.Value, \"GroupByCategory\")",
              "label": "CountDistinct (with scope)",
              "syntax": "CountDistinct(<Values>, <Scope>)"
            },
            "countRows": {
              "description": "Calculates the number of rows.",
              "example": "=CountRows()",
              "label": "CountRows",
              "syntax": "CountRows()"
            },
            "countRowsWithScope": {
              "description": "Calculates the number of rows within the specified scope.",
              "example": "=CountRows(\"Title\")",
              "label": "CountRows (with scope)",
              "syntax": "CountRows(<Scope>)"
            },
            "countWithScope": {
              "description": "Calculates the number of non-null values from the specified expression within the specified scope.",
              "example": "=Count(Fields!EmployeeID.Value, \"Title\")",
              "label": "Count (with scope)",
              "syntax": "Count(<Values>, <Scope>)"
            },
            "crossAggregate": {
              "description": "Calculates the specified function with specified expression as an argument in the cross of specified row and column.",
              "example": "=CrossAggregate(Fields!Amount.Value, \"Sum\", \"YearGroup\", \"CategoryGroup\")",
              "label": "CrossAggregate",
              "syntax": "CrossAggregate(<Expression>, <FunctionName>, <ColumnGroupName>, <RowGroupName>)"
            },
            "cumulativeTotal": {
              "description": "Calculates the sum of page-level aggregates returned by the expression for current and previous pages.",
              "example": "=CumulativeTotal(Fields!OrderID.Value, \"Count\")",
              "label": "CumulativeTotal",
              "syntax": "CumulativeTotal(<Expression>, <Aggregate>)"
            },
            "distinctSum": {
              "description": "Calculates the sum of values from the specified expression when the value of the other expression is not repeated.",
              "example": "=DistinctSum(Fields!OrderID.Value, Fields!OrderFreight.Value)",
              "label": "DistinctSum",
              "syntax": "DistinctSum(<Values>, <Value>)"
            },
            "distinctSumWithScope": {
              "description": "Calculates the sum of values of the specified expression when the value of the other expression is not repeated, within the specified scope.",
              "example": "=DistinctSum(Fields!OrderID.Value, Fields!OrderFreight.Value, \"Order\")",
              "label": "DistinctSum (with scope)",
              "syntax": "DistinctSum(<Values>, <Value>, <Scope>)"
            },
            "first": {
              "description": "Returns the first value from the specified expression.",
              "example": "=First(Fields!ProductNumber.Value)",
              "label": "First",
              "syntax": "First(<Values>)"
            },
            "firstWithScope": {
              "description": "Returns the first value from the specified expression within the specified scope.",
              "example": "=First(Fields!ProductNumber.Value, \"Category\")",
              "label": "First (with scope)",
              "syntax": "First(<Values>, <Scope>)"
            },
            "last": {
              "description": "Returns the last value from the specified expression.",
              "example": "=Last(Fields!ProductNumber.Value)",
              "label": "Last",
              "syntax": "Last(<Values>)"
            },
            "lastWithScope": {
              "description": "Returns the last value from the specified expression within the specified scope.",
              "example": "=Last(Fields!ProductNumber.Value, \"Category\")",
              "label": "Last (with scope)",
              "syntax": "Last(<Values>, <Scope>)"
            },
            "max": {
              "description": "Returns the maximum non-null value from the specified expression.",
              "example": "=Max(Fields!OrderTotal.Value)",
              "label": "Max",
              "syntax": "Max(<Values>)"
            },
            "maxWithScope": {
              "description": "Returns the maximum non-null value from the specified expression within the specified scope.",
              "example": "=Max(Fields!OrderTotal.Value, \"Year\")",
              "label": "Max (with scope)",
              "syntax": "Max(<Values>, <Scope>)"
            },
            "median": {
              "description": "Returns the value that is the mid-point of the values in the specified expression. Median is the center value in a sequence of values.",
              "example": "=Median(Fields!OrderTotal.Value)",
              "label": "Median",
              "syntax": "Median(<Values>)"
            },
            "medianWithScope": {
              "description": "Returns the value that is the mid-point of the ordered values in the specified expression, within the specified scope. Median is the center value in a sequence of values.",
              "example": "=Median(Fields!OrderTotal.Value, \"Year\")",
              "label": "Median (with scope)",
              "syntax": "Median(<Values>, <Scope>)"
            },
            "min": {
              "description": "Returns the minimum non-null value from the specified expression.",
              "example": "=Min(Fields!OrderTotal.Value)",
              "label": "Min",
              "syntax": "Min(<Values>)"
            },
            "minWithScope": {
              "description": "Returns the minimum non-null value from the specified expression within the specified scope.",
              "example": "=Min(Fields!OrderTotal.Value, \"Year\")",
              "label": "Min (with scope)",
              "syntax": "Min(<Values>, <Scope>)"
            },
            "mode": {
              "description": "Returns the most frequently occurring value from the specified expression.",
              "example": "=Mode(Fields!OrderTotal.Value)",
              "label": "Mode",
              "syntax": "Mode(<Values>)"
            },
            "modeWithScope": {
              "description": "Returns the most frequently occurring value from the specified expression, within the specified scope.",
              "example": "=Mode(Fields!OrderTotal.Value, \"Year\")",
              "label": "Mode (with scope)",
              "syntax": "Mode(<Values>, <Scope>)"
            },
            "runningValue": {
              "description": "Calculates a running aggregate of all non-null numeric values from the specified expression, using another aggregate function as a parameter.",
              "example": "=RunningValue(Fields!Price.Value, \"Sum\")",
              "label": "RunningValue",
              "syntax": "RunningValue(<Values>, <AggregateFunction>)"
            },
            "runningValueWithScope": {
              "description": "Calculates a running aggregate of all non-null numeric values from the specified expression, using another aggregate function as a parameter, within the specified scope.",
              "example": "=RunningValue(Fields!Price.Value, \"Sum\", \"Nwind\")",
              "label": "RunningValue (with scope)",
              "syntax": "RunningValue(<Values>, <AggregateFunction>, <Scope>)"
            },
            "stDev": {
              "description": "Calculates the standard deviation of all non-null values of the specified expression.",
              "example": "=StDev(Fields!LineTotal.Value)",
              "label": "StDev",
              "syntax": "StDev(<Values>)"
            },
            "stDevP": {
              "description": "Calculates the population standard deviation of all non-null values of the specified expression.",
              "example": "=StDevP(Fields!LineTotal.Value)",
              "label": "StDevP",
              "syntax": "StDevP(<Values>)"
            },
            "stDevPWithScope": {
              "description": "Calculates the population standard deviation of all non-null values of the specified expression within the specified scope.",
              "example": "=StDevP(Fields!LineTotal.Value, \"Order\")",
              "label": "StDevP (with scope)",
              "syntax": "StDevP(<Values>, <Scope>)"
            },
            "stDevWithScope": {
              "description": "Calculates the standard deviation of all non-null values of the specified expression, within the specified scope.",
              "example": "=StDev(Fields!LineTotal.Value, \"Nwind\")",
              "label": "StDev (with scope)",
              "syntax": "StDev(<Values>, <Scope>)"
            },
            "sum": {
              "description": "Calculates the sum of the values of the specified expression.",
              "example": "=Sum(Fields!Price.Value)",
              "label": "Sum",
              "syntax": "Sum(<Values>)"
            },
            "sumWithScope": {
              "description": "Calculates the sum of the values of the specified expression within the specified scope.",
              "example": "=Sum(Fields!Price.Value, \"Category\")",
              "label": "Sum (with scope)",
              "syntax": "Sum(<Values>, <Scope>)"
            },
            "var": {
              "description": "Calculates the variance (standard deviation squared) of all non-null values of the specified expression.",
              "example": "=Var(Fields!LineTotal.Value)",
              "label": "Var",
              "syntax": "Var(<Values>)"
            },
            "varP": {
              "description": "Calculates the population variance (population standard variation squared) of all non-null values of the specified expression.",
              "example": "=VarP(Fields!LineTotal.Value)",
              "label": "VarP",
              "syntax": "VarP(<Values>)"
            },
            "varPWithScope": {
              "description": "Calculates the population variance (population standard variation squared) of all non-null values of the specified expression, within the specified scope.",
              "example": "=VarP(Fields!LineTotal.Value, \"Order\")",
              "label": "VarP (with scope)",
              "syntax": "VarP(<Values>, <Scope>)"
            },
            "varWithScope": {
              "description": "Calculates the variance (standard deviation squared) of all non-null values of the specified expression.",
              "example": "=Var(Fields!LineTotal.Value, \"Order\")",
              "label": "Var (with scope)",
              "syntax": "Var(<Values>, <Scope>)"
            }
          },
          "conversion": {
            "format": {
              "description": "Formats the value to the specified format.",
              "example": "=Format(Fields!OrderDate.Value, \"dd MMM yyyy\")",
              "label": "Format",
              "syntax": "Format(<Value>, <String>)"
            },
            "toBoolean": {
              "description": "Converts the specified value to Boolean.",
              "example": "=ToBoolean(Fields!HouseOwnerFlag.Value)",
              "label": "ToBoolean",
              "syntax": "ToBoolean(<Value>)"
            },
            "toByte": {
              "description": "Converts the specified value to Byte.",
              "example": "=ToByte(Fields!ProductNumber.Value)",
              "label": "ToByte",
              "syntax": "ToByte(<Value>)"
            },
            "toChar": {
              "description": "Converts the specified value to Char.",
              "example": "=ToChar(Fields!OrderStatus.Value); =ToChar(“Hello”)",
              "label": "ToChar",
              "syntax": "ToChar(<Value>)"
            },
            "toDateTime": {
              "description": "Converts the specified value to a Date and Time value.",
              "example": "=ToDateTime(Fields!SaleDate.Value); =ToDateTime(\"1 January, 2017\")",
              "label": "ToDateTime",
              "syntax": "ToDateTime(<Value>)"
            },
            "toDecimal": {
              "description": "Converts the specified value to Decimal.",
              "example": "=ToDecimal(Fields!Sales.Value)",
              "label": "ToDecimal",
              "syntax": "ToDecimal(<Value>)"
            },
            "toDouble": {
              "description": "Converts the specified value to Double.",
              "example": "=ToDouble(Fields!AnnualSales.Value); =ToDouble(535.85 * .2691 * 67483)",
              "label": "ToDouble",
              "syntax": "ToDouble(<Value>)"
            },
            "toInt16": {
              "description": "Converts the specified value to a 16-bit signed Integer.",
              "example": "=ToInt16(Fields!AnnualSales.Value); =ToInt16(535.85)",
              "label": "ToInt16",
              "syntax": "ToInt16(<Value>)"
            },
            "toInt32": {
              "description": "Converts the specified value to a 32-bit signed Integer.",
              "example": "=ToInt32(Fields!AnnualSales.Value)",
              "label": "ToInt32",
              "syntax": "ToInt32(<Value>)"
            },
            "toInt64": {
              "description": "Converts the specified value to a 64-bit signed Integer.",
              "example": "=ToInt64(Fields!AnnualSales.Value)",
              "label": "ToInt64",
              "syntax": "ToInt64(<Value>)"
            },
            "toSingle": {
              "description": "Converts the specified value to a single-precision floating-point number.",
              "example": "=ToSingle(Fields!AnnualSales.Value); =ToSingle(15.857692134)",
              "label": "ToSingle",
              "syntax": "ToSingle(<Value>)"
            },
            "toStringDot": {
              "description": "Converts the value to String in the specified format.",
              "example": "=Fields!OrderDate.Value.ToString(\"dd MMM yyyy\")",
              "label": ".ToString",
              "syntax": "<Value>.ToString(<String>)"
            },
            "toStringKey": {
              "description": "Converts the specified value to String.",
              "example": "=ToString(Fields!YearlyIncome.Value); =ToString(13.50)",
              "label": "ToString",
              "syntax": "ToString(<Value>)"
            },
            "toUInt16": {
              "description": "Converts the specified value to a 16-bit unsigned Integer.",
              "example": "=ToUInt16(Fields!AnnualSales.Value)",
              "label": "ToUInt16",
              "syntax": "ToUInt16(<Value>)"
            },
            "toUInt32": {
              "description": "Converts the specified value to a 32-bit unsigned Integer.",
              "example": "=ToUInt32(Fields!AnnualSales.Value)",
              "label": "ToUInt32",
              "syntax": "ToUInt32(<Value>)"
            },
            "toUInt64": {
              "description": "Converts the specified value to a 64-bit unsigned Integer.",
              "example": "=ToUInt64(Fields!AnnualSales.Value)",
              "label": "ToUInt64",
              "syntax": "ToUInt64(<Value>)"
            }
          },
          "customFunctions": {
            "getValue": {
              "description": "Displays the user context value for specified property, e.g. \"name\",\"email\".",
              "example": "=UserContext.getValue(\"name\")",
              "label": "GetUserValue",
              "syntax": "UserContext.getValue(<String>)"
            },
            "numberToWords": {
              "description": "Converts the specified value to words. Single argument function uses the current language from the portal. A function with two arguments uses the language passed by the second argument(Supported cultures: \"zh-cn\", \"en-us\", \"ja-jp\"). ",
              "example": "=UserContext.NumberToWords(123.5); =UserContext.NumberToWords(981, \"zh-CN\")",
              "label": "NumberToWords",
              "syntax": "UserContext.NumberToWords(<Number>, <String>)"
            }
          },
          "dateTime": {
            "addDays": {
              "description": "Returns a date and time value that is a result of adding the date interval in days. The specified date interval can be negative.",
              "example": "=Fields!OrderDate.Value.AddDays(5)",
              "label": "AddDays",
              "syntax": "<DateTime>.AddDays(<Number>)"
            },
            "addHours": {
              "description": "Returns a date and time value that is a result of adding the time interval in hours. The specified time interval can be negative.",
              "example": "=Fields!OrderDate.Value.AddHours(12)",
              "label": "AddHours",
              "syntax": "<DateTime>.AddHours(<Number>)"
            },
            "addMilliseconds": {
              "description": "Returns a date and time value that is a result of adding the time interval in milliseconds. The specified time interval can be negative.",
              "example": "=Fields!OrderDate.Value.AddMilliseconds(500)",
              "label": "AddMilliseconds",
              "syntax": "<DateTime>.AddMilliseconds(<Number>)"
            },
            "addMinutes": {
              "description": "Returns a date and time value that is a result of adding the time interval in minutes. The specified time interval can be negative.",
              "example": "=Fields!OrderDate.Value.AddMinutes(30)",
              "label": "AddMinutes",
              "syntax": "<DateTime>.AddMinutes(<Number>)"
            },
            "addMonths": {
              "description": "Returns a date and time value that is a result of adding the date interval in months. The specified date interval can be negative.",
              "example": "=Fields!OrderDate.Value.AddMonths(2)",
              "label": "AddMonths",
              "syntax": "<DateTime>.AddMonths(<Number>)"
            },
            "addSeconds": {
              "description": "Returns a date and time value that is a result of adding the time interval in seconds. The specified time interval can be negative.",
              "example": "=Fields!OrderDate.Value.AddSeconds(30)",
              "label": "AddSeconds",
              "syntax": "<DateTime>.AddSeconds(<Number>)"
            },
            "addYears": {
              "description": "Returns a date and time value that is a result of adding the date interval in years. The specified date interval can be negative.",
              "example": "=Fields!OrderDate.Value.AddYears(3)",
              "label": "AddYears",
              "syntax": "<DateTime>.AddYears(<Number>)"
            },
            "dateAdd": {
              "description": "Returns a date and time value that is the result of adding the interval to the date and time field of the specified unit.",
              "example": "=DateAdd(\"d\", 5, Fields!SaleDate.Value); =DateAdd(DateInterval.Day, 5, Fields!SaleDate.Value)",
              "label": "DateAdd",
              "syntax": "DateAdd(<DateInterval>, <Number>, <DateTime>)"
            },
            "dateDiff": {
              "description": "Returns the difference between the start date and time and end date and time of the specified unit.",
              "example": "=DateDiff(\"yyyy\", Fields!SaleDate.Value, \"1/1/2015\"); =DateDiff(DateInterval.Year, Fields!SaleDate.Value, \"1/1/2015\")",
              "label": "DateDiff",
              "syntax": "DateDiff(<DateInterval>, <DateTime1>, <DateTime2>[, <DayOfWeek>[, <WeekOfYear>]])"
            },
            "datePart": {
              "description": "Returns the Integer value that represents the specified part of the given date.",
              "example": "=DatePart(\"m\", Fields!SaleDate.Value)",
              "label": "DatePart",
              "syntax": "DatePart(<DateInterval>, <DateTime>[, <FirstDayOfWeek>[, <FirstWeekOfYear>]])"
            },
            "dateSerial": {
              "description": "Returns a Date value that represents a specified year, month, and day, with the time information set to midnight (00:00:00).",
              "example": "=DateSerial(DatePart(\"yyyy\", Fields!SaleDate.Value) - 10, DatePart(\"m\", Fields!SaleDate.Value) + 5, DatePart(\"d\", Fields!SaleDate.Value) - 1)",
              "label": "DateSerial",
              "syntax": "DateSerial(<Year Number>, <Month Number>, <Day Number>)"
            },
            "dateString": {
              "description": "Returns the String value that represents the current date in your system.",
              "example": "=DateString(); =DatePart(\"m\", DateString())",
              "label": "DateString",
              "syntax": "DateString()"
            },
            "dateValue": {
              "description": "Returns a Date value that contains the information on date represented by a string, with the time set to midnight (00:00:00).",
              "example": "=DateValue(\"December 12, 2015\")",
              "label": "DateValue",
              "syntax": "DateValue(<StringDate>)"
            },
            "day": {
              "description": "Returns an Integer value from 1 through 31 that represents the day of the month.",
              "example": "=Day(Fields!SaleDate.Value)",
              "label": "Day",
              "syntax": "Day(<DateTime>)"
            },
            "hour": {
              "description": "Returns an Integer value from 0 through 23 that represents the hour of the day.",
              "example": "=Hour(Fields!SaleDate.Value)",
              "label": "Hour",
              "syntax": "Hour(<DateTime>)"
            },
            "minute": {
              "description": "Returns an Integer value from 0 through 59 that represents the minute of the hour.",
              "example": "=Minute(Fields!SaleDate.Value)",
              "label": "Minute",
              "syntax": "Minute(<DateTime>)"
            },
            "month": {
              "description": "Returns an Integer value from 1 through 12 that represents the month of the year.",
              "example": "=Month(Fields!SaleDate.Value)",
              "label": "Month",
              "syntax": "Month(<DateTime>)"
            },
            "monthName": {
              "description": "Returns the name of the month specified in the date as a String.",
              "example": "=MonthName(Fields!MonthNumber.Value)",
              "label": "MonthName",
              "syntax": "MonthName(<Month Number>[, <Abbreviate>])"
            },
            "now": {
              "description": "Returns the current date and time in your system.",
              "example": "=Now()",
              "label": "Now",
              "syntax": "Now()"
            },
            "parse": {
              "description": "Converts the specified string value to a date and time value.",
              "example": "=DateTime.Parse(\"01/01/1970\")",
              "label": "DateTime.Parse",
              "syntax": "DateTime.Parse(<String>[, <String>])"
            },
            "quarter": {
              "description": "Returns an Integer value from 1 through 4 that represents the quarter of the year.",
              "example": "=Quarter(Fields!SaleDate.Value)",
              "label": "Quarter",
              "syntax": "Quarter(<DateTime>)"
            },
            "quarterName": {
              "description": "Returns a String value that represents the quarter of the year.",
              "example": "=QuarterName(Fields!SaleDate.Value)",
              "label": "QuarterName",
              "syntax": "QuarterName(<DateTime>)"
            },
            "second": {
              "description": "Returns an Integer value from 0 through 59 that represents the second of the minute.",
              "example": "=Second(Fields!SaleDate.Value)",
              "label": "Second",
              "syntax": "Second(<DateTime>)"
            },
            "timeOfDay": {
              "description": "Returns a Date value containing the current time of day in your system.",
              "example": "=TimeOfDay()",
              "label": "TimeOfDay",
              "syntax": "TimeOfDay()"
            },
            "timeSerial": {
              "description": "Returns a Date value that represents a specified hour, minute, and second, with the date information set relative to January 1 of the year 0001.",
              "example": "=TimeSerial(DatePart(\"h\", Fields!SaleDate.Value), DatePart(\"n\", Fields!SaleDate.Value), DatePart(\"s\", Fields!SaleDate.Value))",
              "label": "TimeSerial",
              "syntax": "TimeSerial(<Hour Number>, <Minute Number>, <Second Number>)"
            },
            "timeString": {
              "description": "Returns the String value that represents the current time of day in your system.",
              "example": "=TimeString()",
              "label": "TimeString",
              "syntax": "TimeString()"
            },
            "timeValue": {
              "description": "Returns a Date value that contains the information on time represented by a string, with the date set to January 1 of the year 0001.",
              "example": "=TimeValue(\"15:25:45\"); =TimeValue(Fields!SaleDate.Value)",
              "label": "TimeValue",
              "syntax": "TimeValue(<StringTime>)"
            },
            "timer": {
              "description": "Returns a Double value that represents the number of seconds elapsed since midnight.",
              "example": "=Timer()",
              "label": "Timer",
              "syntax": "Timer()"
            },
            "today": {
              "description": "Returns a Date value that contains the current date in your system.",
              "example": "=Today()",
              "label": "Today",
              "syntax": "Today()"
            },
            "weekday": {
              "description": "Returns an Integer value that contains a number representing the day of the week.",
              "example": "=Weekday(Fields!SaleDate.Value, 0)",
              "label": "Weekday",
              "syntax": "Weekday(<DateTime>[, <DayOfWeek>])"
            },
            "weekdayName": {
              "description": "Returns a String value that contains the name of the specified weekday.",
              "example": "=WeekdayName(3, True, 0); =WeekDayName(DatePart(\"w\", Fields!SaleDate.Value), True, 0)",
              "label": "WeekdayName",
              "syntax": "WeekdayName(<WeekDay>[, <Abbreviate>[, <FirstDayOfWeek>]])"
            },
            "year": {
              "description": "Returns an Integer value from 1 through 9999 representing the year.",
              "example": "=Year(Fields!SaleDate.Value)",
              "label": "Year",
              "syntax": "Year(<DateTime>)"
            }
          },
          "inspection": {
            "dbNull": {
              "description": "Allows checking whether a value is a DBNull value.",
              "example": "=IIF(Fields!Organization.Value is DBNull.Value, \"<NULL>\", Fields!Organization.Value)",
              "label": "DBNull.Value",
              "syntax": "DBNull.Value"
            },
            "isArray": {
              "description": "Returns True if the expression can be evaluated as an array.",
              "example": "=IsArray(Parameters!Initials.Value)",
              "label": "IsArray",
              "syntax": "IsArray(<Expression>)"
            },
            "isDBNull": {
              "description": "Returns True if the expression evaluates to a null.",
              "example": "=IsDBNull(Fields!MonthlySales.Value)",
              "label": "IsDBNull",
              "syntax": "IsDBNull(<Expression>)"
            },
            "isDate": {
              "description": "Returns True if the expression represents a valid Date value.",
              "example": "=IsDate(Fields!BirthDate.Value); =IsDate(\"31/12/2010\")",
              "label": "IsDate",
              "syntax": "IsDate(<Expression>)"
            },
            "isError": {
              "description": "Returns True if the expression evaluates to an error.",
              "example": "=IsError(Fields!AnnualSales.Value = 80000)",
              "label": "IsError",
              "syntax": "IsError(<Expression>)"
            },
            "isNothing": {
              "description": "Returns True if the expression evaluates to nothing.",
              "example": "=IsNothing(Fields!MiddleInitial.Value)",
              "label": "IsNothing",
              "syntax": "IsNothing(<Expression>)"
            },
            "isNumeric": {
              "description": "Returns True if the expression can be evaluated as a number.",
              "example": "=IsNumeric(Fields!AnnualSales.Value)",
              "label": "IsNumeric",
              "syntax": "IsNumeric(<Expression>)"
            }
          },
          "math": {
            "abs": {
              "description": "Returns the absolute or positive value of a single-precision floating-point number.",
              "example": "=Abs(-5.5); =Abs(Fields!YearlyIncome.Value - 80000)",
              "label": "Abs",
              "syntax": "Abs(<Number>)"
            },
            "acos": {
              "description": "Returns the angle whose cosine is the specified number.",
              "example": "=Acos(.5); =Acos(Fields!Angle.Value)",
              "label": "Acos",
              "syntax": "Acos(<Number>)"
            },
            "asin": {
              "description": "Returns the angle whose sine is the specified number.",
              "example": "=Asin(.5); =Asin(Fields!Angle.Value)",
              "label": "Asin",
              "syntax": "Asin(<Number>)"
            },
            "atan": {
              "description": "Returns the angle whose tangent is the specified number.",
              "example": "=Atan(.5); =Atan(Fields!Angle.Value)",
              "label": "Atan",
              "syntax": "Atan(<Number>)"
            },
            "atan2": {
              "description": "Returns the angle whose tangent is the quotient of two specified numbers.",
              "example": "=Atan2(3,7); =Atan2(Fields!CoordinateY.Value, Fields!CoordinateX.Value)",
              "label": "Atan2",
              "syntax": "Atan2(<Number1>, <Number2>)"
            },
            "bigMul": {
              "description": "Returns the multiplication of two 32-bit numbers.",
              "example": "=BigMul(4294967295,-2147483647); =BigMul(Fields!Int32Value.Value, Fields!Int32Value.Value)",
              "label": "BigMul",
              "syntax": "BigMul(<Number1>, <Number2>)"
            },
            "ceiling": {
              "description": "Returns the smallest integer greater than or equal to the specified double-precision floating-point number.",
              "example": "=Ceiling(98.4331); =Ceiling(Fields!AnnualSales.Value / 6)",
              "label": "Ceiling",
              "syntax": "Ceiling(<Number>)"
            },
            "cos": {
              "description": "Returns the smallest integer greater than or equal to the specified double-precision floating-point number.",
              "example": "=Cos(60)",
              "label": "Cos",
              "syntax": "Cos(<Number>)"
            },
            "cosh": {
              "description": "Returns the hyperbolic cosine of the specified angle.",
              "example": "=Cosh(60)",
              "label": "Cosh",
              "syntax": "Cosh(<Number>)"
            },
            "e": {
              "description": "Returns the value of E, which is 2.71828182845905.",
              "example": "=E * 2",
              "label": "E",
              "syntax": "E"
            },
            "exp": {
              "description": "Returns e raised to the specified power, where e is Euler's number. It is the inverse of the Log function.",
              "example": "=Exp(3); =Exp(Fields!IntegerCounter.Value)",
              "label": "Exp",
              "syntax": "Exp(<Number>)"
            },
            "fix": {
              "description": "Returns the integer portion of a number.",
              "example": "=Fix(-7.15); =Fix(Fields!AnnualSales.Value / -5)",
              "label": "Fix",
              "syntax": "Fix(<Number>)"
            },
            "floor": {
              "description": "Returns the largest integer less than or equal to the specified double-precision floating-point number.",
              "example": "=Floor(4.67); =Floor(Fields!AnnualSales.Value / 12)",
              "label": "Floor",
              "syntax": "Floor(<Number>)"
            },
            "ieeeRemainder": {
              "description": "Returns the remainder after division of one number by another according to IEEE standards.",
              "example": "=IEEERemainder(9, 8)",
              "label": "IEEERemainder",
              "syntax": "IEEERemainder(<Number1>, <Number2>)"
            },
            "log": {
              "description": "Returns the logarithm of the specified number.",
              "example": "=Log(20.5); =Log(Fields!NumberValue.Value)",
              "label": "Log",
              "syntax": "Log(<Number>)"
            },
            "log10": {
              "description": "Returns the logarithm of the specified number to the base 10.",
              "example": "=Log10(20.5); =Log10(Fields!NumberValue.Value)",
              "label": "Log10",
              "syntax": "Log10(<Number>)"
            },
            "max": {
              "description": "Returns the maximum non-null value from the specified expression.",
              "example": "=Max(Fields!OrderTotal.Value)",
              "label": "Max",
              "syntax": "Max(<Values>)"
            },
            "min": {
              "description": "Returns the minimum non-null value from the specified expression.",
              "example": "=Min(Fields!OrderTotal.Value)",
              "label": "Min",
              "syntax": "Min(<Values>)"
            },
            "pi": {
              "description": "Returns the value of PI, which is 3.14159265358979.",
              "example": "=2 * PI * Fields!Radius.Value",
              "label": "PI",
              "syntax": "PI"
            },
            "pow": {
              "description": "Returns one number raised to the power of another number.",
              "example": "=Pow(Fields!Quantity.Value, 2)",
              "label": "Pow",
              "syntax": "Pow(<Number1>, <Number2>)"
            },
            "round": {
              "description": "Returns the round-off of a decimal number to the nearest integer or to the nearest decimal number up to the specified digits.",
              "example": "=Round(12.456); =Round(Fields!AnnualSales.Value / 12.3)",
              "label": "Round",
              "syntax": "Round(<Number>)"
            },
            "sign": {
              "description": "Returns a value indicating the sign of an 8-bit signed integer.",
              "example": "=Sign(Fields!AnnualSales.Value - 60000)",
              "label": "Sign",
              "syntax": "Sign(<Number>)"
            },
            "sin": {
              "description": "Returns the sine of the specified number.",
              "example": "=Sin(60)",
              "label": "Sin",
              "syntax": "Sin(<Number>)"
            },
            "sinh": {
              "description": "Returns the hyperbolic sine of the specified angle.",
              "example": "=Sinh(60)",
              "label": "Sinh",
              "syntax": "Sinh(<Number>)"
            },
            "sqrt": {
              "description": "Returns the square root of the specified number.",
              "example": "=Sqrt(121)",
              "label": "Sqrt",
              "syntax": "Sqrt(<Number>)"
            },
            "tan": {
              "description": "Returns the tangent of the specified number.",
              "example": "=Tan(60)",
              "label": "Tan",
              "syntax": "Tan(<Number>)"
            },
            "tanh": {
              "description": "Returns the hyperbolic tangent of the specified angle.",
              "example": "=Tanh(60)",
              "label": "Tanh",
              "syntax": "Tanh(<Number>)"
            },
            "truncate": {
              "description": "Removes the digits after decimal point without rounding-off, and returns the integer value.",
              "example": "=Truncate(Fields!UnitPrice.Value)",
              "label": "Truncate",
              "syntax": "Truncate(<Number>)"
            }
          },
          "miscellaneous": {
            "getFields": {
              "description": "Returns an IDictionary<string,Field> object that contains the current contents of the Fields collection. Only valid when used within a data region. This function makes it easier to write code that deals with complex conditionals. To write the equivalent function without GetFields() would require passing each of the queried field values into the method which could be prohibitive when dealing with many fields.",
              "example": "=GetFields(); =Code.DisplayAccountID(GetFields())",
              "label": "GetFields",
              "syntax": "GetFields()"
            },
            "getLength": {
              "description": "Returns the number of elements in the specified array.",
              "example": "=Parameters!MultiValueParameter.Value.GetLength(0)",
              "label": "GetLength",
              "syntax": "<Collection>.GetLength(<Number>)"
            },
            "indexOf": {
              "description": "Returns the first index at which a given element can be found in the array or -1 if it is not present.",
              "example": "=IndexOf(Parameters!pContinent.Value, Fields!ContinentName.Value) >= 0",
              "example_i11n": "{IndexOf(@pContinent, ContinentName) >= 0}",
              "label": "IndexOf",
              "syntax": "IndexOf(<Source>, <SearchElement>)"
            },
            "inScope": {
              "description": "Evaluates to true or false depending on whether the current value is in the specified scope.",
              "example": "=InScope(\"Order\")",
              "label": "InScope",
              "syntax": "InScope(<Scope>)"
            },
            "item": {
              "description": "Returns an item by its name from Fields/Parameters/ReportItems.",
              "example": "=Fields.Item(\"Company Name\").Name; =Parameters.Item(\"Parameter1\").Name; =ReportItems.Item(\"TextBox1\").Value",
              "example_i11n": "{Fields.Item(\"Company Name\").Name}; {Parameters.Item(\"Parameter1\").Name}; {ReportItems.Item(\"TextBox1\").Value}",
              "label": "Item",
              "syntax": "<Object | Record>.Item(<String>)"
            },
            "join": {
              "description": "Returns a string that is a result of joining the elements of an array, using the specified delimiter between elements.",
              "example": "=Join(Parameters!MultiValueParameter.Value, \", \")",
              "label": "Join",
              "syntax": "Join(<Values>, <String>)"
            },
            "level": {
              "description": "Returns a zero-based integer representing the current level of depth in a recursive hierarchy in the current scope. The first level in the hierarchy is 0.",
              "example": "=Level()",
              "label": "Level",
              "syntax": "Level()"
            },
            "levelWithScope": {
              "description": "Returns a zero-based integer representing the current level of depth in a recursive hierarchy in the specified scope. The first level in the hierarchy is 0.",
              "example": "=Level(\"Order\")",
              "label": "Level (with scope)",
              "syntax": "Level(<Scope>)"
            },
            "lookup": {
              "description": "Returns the first matching value for the specified name from the dataset with name and value pairs.",
              "example": "=Lookup(Fields!ProductID.Value, Fields!ProductID.Value, Fields!Quantity.Value, \"DataSet2\")",
              "label": "Lookup",
              "syntax": "Lookup(<Source>, <Destination>, <Result>, <DataSet>)"
            },
            "lookupSet": {
              "description": "Returns the set of matching values for the specified name from the dataset that contains name/value pairs.",
              "example": "=LookupSet(Fields!ProductID.Value, Fields!ProductID.Value, Fields!Quantity.Value, \"DataSet2\")",
              "label": "LookupSet",
              "syntax": "LookupSet(<Source>, <Destination>, <Result>, <DataSet>)"
            },
            "previous": {
              "description": "Calculates the value of the expression for the previous row of data.",
              "example": "=Previous(Fields!OrderID.Value)",
              "label": "Previous",
              "syntax": "Previous(<Expression>)"
            },
            "previousWithScope": {
              "description": "Calculates the value of the expression for the previous row of data within the specified scope.",
              "example": "=Previous(Fields!OrderID.Value, \"Order\")",
              "label": "Previous (with scope)",
              "syntax": "Previous(<Expression>, <Scope>)"
            },
            "rowNumber": {
              "description": "Returns the running count of all the rows.",
              "example": "=RowNumber()",
              "label": "RowNumber",
              "syntax": "RowNumber()"
            },
            "rowNumberWithScope": {
              "description": "Returns the running count of all the rows in the specified scope.",
              "example": "=RowNumber(\"OrderID\")",
              "label": "RowNumber (with scope)",
              "syntax": "RowNumber(<Scope>)"
            },
            "groupIndex": {
              "description": "Returns the index of the element in the current group.",
              "example": "=GroupIndex()",
              "label": "GroupIndex",
              "syntax": "GroupIndex()"
            },
            "groupIndexWithScope": {
              "description": "Returns the index of the element in the specified group.",
              "example": "=GroupIndex(Group1)",
              "label": "GroupIndex (with scope)",
              "syntax": "GroupIndex(<Group>)"
            }
          },
          "programFlow": {
            "choose": {
              "description": "Returns a value from a list of arguments.",
              "example": "=Choose(3, \"10\", \"15\", \"20\", \"25\")",
              "label": "Choose",
              "syntax": "Choose(<Index>, <Value1>[, <Value2>,...[, <ValueN>]])"
            },
            "iif": {
              "description": "Returns the first value if the expression evaluates to True, and the second value if the expression evaluates to False.",
              "example": "=IIF(Fields!AnnualSales.Value >= 80000, \"Above Average\", \"Below Average\")",
              "label": "IIF",
              "syntax": "IIF(<Condition>, <TruePart>, <FalsePart>)"
            },
            "partition": {
              "description": "Returns a string (in the form x : y) that represents the calculated range based on the specified interval containing the specified number. ",
              "example": "=Partition(1999, 1980, 2000, 10)",
              "label": "Partition",
              "syntax": "Partition(<Value>, <Start>, <End>, <Interval>)"
            },
            "switch": {
              "description": "Returns the value of the first expression that evaluates to True among a list of expressions.",
              "example": "=Switch(Fields!FirstName.Value = \"Abraham\", \"Adria\", Fields!FirstName.Value = \"Charelotte\", \"Cherrie\")",
              "label": "Switch",
              "syntax": "Switch(<Condition1>, <Value1>[, <Condition2>, <Value2>,...[, <ConditionN>, <ValueN>]])"
            }
          },
          "text": {
            "contains": {
              "description": "Returns True if the string contains the specified substring.",
              "example": "=Fields!ShipAddress.Value.Contains(\"street\")",
              "label": "Contains",
              "syntax": "<String>.Contains(<String>)"
            },
            "endsWith": {
              "description": "Returns True if the string ends with the specified substring.",
              "example": "=Fields!Description.Value.EndsWith(\"documents\")",
              "label": "EndsWith",
              "syntax": "<String>.EndsWith(<String>)"
            },
            "inStr": {
              "description": "Returns the start position of the first occurrence of the specified substring within the string.",
              "example": "=InStr(Fields!Description.Value, \"documents\")",
              "label": "InStr",
              "syntax": "InStr(<String>, <String>)"
            },
            "lastIndexOf": {
              "description": "Returns the index of the last occurrence of the specified substring within the string.",
              "example": "=Fields!Description.Value.LastIndexOf(\"documents\")",
              "label": "LastIndexOf",
              "syntax": "<String>.LastIndexOf(<String>[, <Number>])"
            },
            "replace": {
              "description": "Replaces all the occurrences of the first specified substring with the second specified substring within the string.",
              "example": "=Fields!Description.Value.Replace(\"documents\", \"invoices\")",
              "label": "Replace",
              "syntax": "<String>.Replace(<String>, <String>)"
            },
            "startsWith": {
              "description": "Returns True if the string starts with the specified substring.",
              "example": "=Fields!Description.Value.StartsWith(\"Invoice\")",
              "label": "StartsWith",
              "syntax": "<String>.StartsWith(<String>)"
            },
            "substring": {
              "description": "Returns the substring at the specified position (zero-based) of the specified length.",
              "example": "=Fields!Description.Value.Substring(1, 10)",
              "label": "Substring",
              "syntax": "<String>.Substring(<Number>, <Number>)"
            },
            "toLower": {
              "description": "Returns the specified string in lower case.",
              "example": "=Fields!ShipCountry.Value.ToLower()",
              "label": "ToLower",
              "syntax": "<String>.ToLower()"
            },
            "toUpper": {
              "description": "Returns the specified string in upper case.",
              "example": "=Fields!ShipCountry.Value.ToUpper()",
              "label": "ToUpper",
              "syntax": "<String>.ToUpper()"
            },
            "trim": {
              "description": "Returns the string after removing all the white-space characters from both the start and the end of the specified string.",
              "example": "=Parameters!Info.Value.Trim()",
              "label": "Trim",
              "syntax": "<String>.Trim()"
            },
            "trimEnd": {
              "description": "Returns the string after removing all the white-space characters from the end of the specified string.",
              "example": "=Parameters!Info.Value.TrimEnd()",
              "label": "TrimEnd",
              "syntax": "<String>.TrimEnd()"
            },
            "trimStart": {
              "description": "Returns the string after removing all the white-space characters from the start of the specified string.",
              "example": "=Parameters!Info.Value.TrimStart()",
              "label": "TrimStart",
              "syntax": "<String>.TrimStart()"
            }
          }
        },
        "titles": {
          "aggregate": "Aggregate",
          "conversion": "Conversion",
          "dateTime": "Date & Time",
          "inspection": "Inspection",
          "label": "Common Functions",
          "math": "Math",
          "miscellaneous": "Miscellaneous",
          "programFlow": "Program Flow",
          "text": "Text"
        }
      },
      "operations": {
        "info": {
          "arithmetic": {
            "add": {
              "description": "Evaluates the sum of two numbers or concatenates two strings.",
              "example": "=Fields!Quantity.Value + 2",
              "label": "+",
              "syntax": "<Value1> + <Value2>"
            },
            "divide": {
              "description": "Divides two numbers (numerator by denominator) and returns the quotient as a floating-point number.",
              "example": "=Fields!AnnualSales.Value / 2",
              "label": "/",
              "syntax": "<Number1> / <Number2>"
            },
            "integerDivide": {
              "description": "Divides two numbers and returns an integer result.",
              "example": "=Fields!AnnualSales.Value \\ 2",
              "label": "\\",
              "syntax": "<Number1> \\ <Number2>"
            },
            "mod": {
              "description": "Divides two numbers and returns the remainder.",
              "example": "=Fields!AnnualSales.Value Mod 12",
              "label": "Mod",
              "syntax": "<Number1> Mod <Number2>"
            },
            "multiply": {
              "description": "Evaluates the multiplication of two numbers.",
              "example": "=Fields!Quantity.Value * 5",
              "label": "*",
              "syntax": "<Number1> * <Number2>"
            },
            "power": {
              "description": "Raises a number to the power of another number.",
              "example": "=Fields!Quantity.Value ^ 2",
              "label": "^",
              "syntax": "<Number1> ^ <Number2>"
            },
            "subtract": {
              "description": "Evaluates the difference between two numbers or negates the value of a numeric expression.",
              "example": "=Fields!Quantity.Value - 2",
              "label": "-",
              "syntax": "<Number1> - <Number2>"
            }
          },
          "bitShift": {
            "leftShift": {
              "description": "Performs an arithmetic left shift on a bit pattern.",
              "example": "=Fields!RegionID.Value << 2",
              "label": "<<",
              "syntax": "<Number1> << <Number2>"
            },
            "rightShift": {
              "description": "Performs an arithmetic right shift on a bit pattern.",
              "example": "=Fields!RegionID.Value >> 2",
              "label": ">>",
              "syntax": "<Number1> >> <Number2>"
            }
          },
          "comparison": {
            "equal": {
              "description": "Returns True if the left operand is equal to the right operand.",
              "example": "=Fields!AnnualSales.Value = 80000",
              "label": "=",
              "syntax": "<Value1> = <Value2>"
            },
            "greaterThan": {
              "description": "Returns True if the left operand is greater than the right operand.",
              "example": "=Fields!AnnualSales.Value > 80000",
              "label": ">",
              "syntax": "<Value1> > <Value2>"
            },
            "greaterThanOrEqual": {
              "description": "Returns True if the left operand is greater than or equal to the right operand.",
              "example": "=Fields!AnnualSales.Value >= 80000",
              "label": ">=",
              "syntax": "<Value1> >= <Value2>"
            },
            "is": {
              "description": "Compares two object references and returns True if the left operand is identical to the right operand.",
              "example": "=Fields!FirstName.Value Is Fields!LastName.Value",
              "label": "Is",
              "syntax": "<Value1> Is <Value2>"
            },
            "like": {
              "description": "Compares two strings and returns True if the left operand is the same as the right operand.",
              "example": "=Fields!FirstName.Value Like \"A*\"",
              "label": "Like",
              "syntax": "<String1> Like <String2>"
            },
            "lowerThan": {
              "description": "Returns True if the left operand is less than the right operand.",
              "example": "=Fields!AnnualSales.Value < 80000",
              "label": "<",
              "syntax": "<Value1> < <Value2>"
            },
            "lowerThanOrEqual": {
              "description": "Returns True if the left operand is less than or equal to the right operand.",
              "example": "=Fields!AnnualSales.Value <= 80000",
              "label": "<=",
              "syntax": "<Value1> <= <Value2>"
            },
            "notEqual": {
              "description": "Returns True if the left operand is not equal to the right operand.",
              "example": "=Fields!AnnualSales.Value <> 80000",
              "label": "<>",
              "syntax": "<Value1> <> <Value2>"
            }
          },
          "concatenation": {
            "add": {
              "description": "Evaluates the sum of two numbers or concatenates two strings.",
              "example": "=Fields!FirstName.Value + \" \" + Fields!LastName.Value",
              "label": "+",
              "syntax": "<String1> + <String2>"
            },
            "concat": {
              "description": "Returns the string value of the concatenation of two expressions that individually evaluate to strings.",
              "example": "=Fields!FirstName.Value & \" \" & Fields!LastName.Value",
              "example_i11n": "{FirstName & \" \" & LastName}",
              "label": "&",
              "syntax": "<String1> & <String2>"
            }
          },
          "logicalBitwise": {
            "and": {
              "description": "Returns the logical conjunction of two Boolean expressions, or the bitwise conjunction of two numeric expressions.",
              "example": "=(Fields!AnnualSales.Value > 80000) And (Fields!Quantity.Value > 5)",
              "label": "And",
              "syntax": "<Value1> And <Value2>"
            },
            "andAlso": {
              "description": "Returns the logical conjunction of two Boolean expressions by skipping evaluation of the other expression if the evaluation of the first expression provides the result.",
              "example": "=(Fields!AnnualSales.Value > 80000) AndAlso (Fields!Quantity.Value > 1)",
              "label": "AndAlso",
              "syntax": "<Boolean1> AndAlso <Boolean2>"
            },
            "not": {
              "description": "Returns the logical negation of a Boolean expression, or the bitwise negation of a numeric expression.",
              "example": "=Not (Fields!AnnualSales.Value > 80000)",
              "label": "Not",
              "syntax": "Not <Value>"
            },
            "or": {
              "description": "Returns the logical disjunction of two Boolean expressions, or the bitwise disjunction of two numeric values.",
              "example": "=(Fields!AnnualSales.Value > 80000) Or (Fields!Quantity.Value > 5)",
              "label": "Or",
              "syntax": "<Value1> Or <Value2>"
            },
            "orElse": {
              "description": "Returns the logical disjunction of two Boolean expressions by skipping evaluation of one expression if the evaluation of the other expression provides the result.",
              "example": "=(Fields!AnnualSales.Value > 80000) OrElse (Fields!Quantity.Value > 1)",
              "label": "OrElse",
              "syntax": "<Boolean1> OrElse <Boolean2>"
            },
            "xor": {
              "description": "Returns a logical exclusion operation of two Boolean expressions, or a bitwise exclusion of two numeric expressions.",
              "example": "=(Fields!AnnualSales.Value > 80000) Xor (Fields!Quantity.Value) > 5",
              "label": "Xor",
              "syntax": "<Value1> Xor <Value2>"
            }
          }
        },
        "titles": {
          "arithmetic": "Arithmetic",
          "bitShift": "Bit Shift",
          "comparison": "Comparison",
          "concatenation": "Concatenation",
          "label": "Operations",
          "logicalBitwise": "Logical/Bitwise"
        }
      },
      "parameters": {
        "titles": {
          "label": "Parameters"
        }
      },
      "slicers": {
        "titles": {
          "label": "Slicers"
        }
      },
      "reportItems": {
        "titles": {
          "label": "Report Items"
        }
      },
      "dataSets": {
        "titles": {
          "label": "Data Sets"
        }
      },
      "theme": {
        "titles": {
          "color": "Colors",
          "constant": "Constants",
          "font": "Fonts",
          "image": "Images",
          "label": "Theme",
          "majorFont": "Major Font",
          "minorFont": "Minor Font"
        }
      },
      "textEncodingFields": {
        "titles": {
          "label": "Text Encoding Fields"
        }
      },
      "reportPartProperties": {
        "titles": {
          "label": "Report Part Properties"
        },
        "info": {
          "example": "=PartProperties!<PropertyName>.Value",
          "example_i11n": "{PartProperties.<PropertyName>.Value}, {PartProperties!<PropertyName>.Value}"
        }
      }
    }
  },
  {
    "ns": "filters",
    "lng": "en",
    "resources": {
      "add": "Add...",
      "edit": "Edit...",
      "addCriterion": "Add Criterion",
      "expressionText": "Expression...",
      "addGroup": "Add Group",
      "operators": {
        "beginsWith": "Begins With",
        "between": "Between",
        "bottomN": "Bottom N",
        "bottomPercent": "Bottom Percent",
        "contains": "Contains",
        "doesNotBeginWith": "Does Not Begin With",
        "doesNotContain": "Does Not Contain",
        "equalTo": "Equal To",
        "greaterThan": "Greater Than",
        "greaterThanOrEqualTo": "Greater Than Or Equal To",
        "in": "In",
        "lessThan": "Less Than",
        "lessThanOrEqualTo": "Less Than Or Equal To",
        "like": "Like",
        "notEqualTo": "Not Equal To",
        "notIn": "Not In",
        "topN": "Top N",
        "topPercent": "Top Percent"
      },
      "delete": "Delete",
      "reset": "Reset",
      "allOf": "All Of",
      "anyOf": "Any Of",
      "addItem": "Add Item",
      "newParameter": "New Parameter",
      "listItemsCount": "{{count}} item",
      "listItemsCount_plural": "{{count}} items"
    }
  },
  {
    "ns": "glyphs-RPX",
    "lng": "en",
    "resources": {
      "barcode": {
        "unsupportedSymbology": "[{{symbology}}] \"{{itemName}}\" preview is limited in design-time.",
        "textError": "Error"
      }
    }
  },
  {
    "ns": "groupEditor",
    "lng": "en",
    "resources": {
      "textSelectTablix": "Select a tablix to edit its groups",
      "headingRowGroups": "Row Groups",
      "headingColumnGroups": "Column Groups",
      "labelAdvancedMode": "Advanced Mode",
      "btnEditExpression": "Edit Expression",
      "btnEnableGroup": "Enable Group",
      "btnDisableGroup": "Disable Group",
      "headingAddGroup": "Add Group",
      "addGroup": {
        "btnParent": "Parent",
        "btnChild": "Child",
        "btnAdjacentBefore": "Adjacent Before",
        "btnAdjacentAfter": "Adjacent After"
      },
      "headingAddTotal": "Add Total",
      "addTotal": {
        "btnBefore": "Before",
        "btnAfter": "After"
      },
      "btnDelete": "Delete",
      "textHiddenStatic": "(Static)"
    }
  },
  {
    "ns": "labels",
    "lng": "en",
    "resources": {
      "dvchartXAxis": "X Axis",
      "dvchartYAxis": "Y Axis",
      "dvchartPlotRuleNoCondition": "Empty Condition",
      "header": "Header",
      "body": "Body",
      "footer": "Footer",
      "pageHeader": "Page Header",
      "pageFooter": "Page Footer",
      "total": "Total"
    }
  },
  {
    "ns": "marginsSizes",
    "lng": "en",
    "resources": {
      "values": [
        {
          "_name": "None",
          "cm": {
            "bottom": "0cm",
            "left": "0cm",
            "right": "0cm",
            "top": "0cm"
          },
          "in": {
            "bottom": "0in",
            "left": "0in",
            "right": "0in",
            "top": "0in"
          }
        },
        {
          "_name": "Narrow",
          "cm": {
            "bottom": "1.25cm",
            "left": "1.25cm",
            "right": "1.25cm",
            "top": "1.25cm"
          },
          "in": {
            "bottom": "0.5in",
            "left": "0.5in",
            "right": "0.5in",
            "top": "0.5in"
          }
        },
        {
          "_name": "Normal",
          "cm": {
            "bottom": "2.5cm",
            "left": "2.5cm",
            "right": "2.5cm",
            "top": "2.5cm"
          },
          "in": {
            "bottom": "1in",
            "left": "1in",
            "right": "1in",
            "top": "1in"
          }
        },
        {
          "_name": "Wide",
          "cm": {
            "bottom": "2.5cm",
            "left": "5cm",
            "right": "5cm",
            "top": "2.5cm"
          },
          "in": {
            "bottom": "1in",
            "left": "2in",
            "right": "2in",
            "top": "1in"
          }
        }
      ]
    }
  },
  {
    "ns": "nameTemplate-RPX",
    "lng": "en",
    "resources": {
      "Style": "Style",
      "Barcode": "Barcode",
      "CheckBox": "CheckBox",
      "CrossSectionBox": "CrossSectionBox",
      "CrossSectionLine": "CrossSectionLine",
      "Unknown": "Unknown",
      "InputFieldCheckBox": "InputFieldCheckBox",
      "InputFieldText": "InputFieldText",
      "Label": "Label",
      "Line": "Line",
      "PageBreak": "PageBreak",
      "Picture": "Picture",
      "ReportInfo": "ReportInfo",
      "RichTextBox": "RichTextBox",
      "Detail": "Detail",
      "PageHeader": "PageHeader",
      "PageFooter": "PageFooter",
      "GroupHeader": "GroupHeader",
      "GroupFooter": "GroupFooter",
      "ReportHeader": "ReportHeader",
      "ReportFooter": "ReportFooter",
      "Shape": "Shape",
      "SubReport": "SubReport",
      "TextBox": "TextBox"
    }
  },
  {
    "ns": "nameTemplates",
    "lng": "en",
    "resources": {
      "label": "Label",
      "pointer": "Pointer",
      "bandedListGroup": "Group",
      "bandedList": "BandedList",
      "barcode": "Barcode",
      "bullet": "Bullet",
      "dvchart": "Chart",
      "dvchartPlot": "Plot",
      "checkbox": "CheckBox",
      "contentplaceholder": "ContentPlaceholder",
      "Unknown": "Item",
      "formattedText": "FormattedText",
      "image": "Image",
      "inputField": "InputField",
      "layer": "Layer",
      "line": "Line",
      "list": "List",
      "reportPart": "ReportPart",
      "reportPartProperty": "Property",
      "overflowPlaceholder": "OverflowPlaceholder",
      "partItem": "PartItem",
      "container": "Container",
      "richtext": "RichText",
      "shape": "Shape",
      "sparkline": "Sparkline",
      "subreport": "Subreport",
      "table": "Table",
      "tableGroup": "TableGroup",
      "tablix": "Tablix",
      "textbox": "TextBox",
      "tableOfContents": "TableOfContents",
      "tocLevel": "Level",
      "fixedPage": "FixedPage",
      "group": "Group",
      "detailsGroup": "DetailsGroup",
      "calculatedField": "CalculatedField",
      "field": "Field",
      "parameter": "Parameter",
      "mailMergeField": "Field",
      "parameterCollection": "Parameter",
      "categoryGroup": "CategoryGroup",
      "columnGroup": "ColumnGroup",
      "dataset": "DataSet",
      "dvchartEncodingField": "Field",
      "dvchartoverlay": "Overlay",
      "dvchartrule": "Rule",
      "dvcharttextencoding": "Text",
      "reportParameter": "Parameter",
      "reportSlicer": "ReportSlicer",
      "rowGroup": "RowGroup",
      "seriesGroup": "SeriesGroup",
      "seriesValue": "Value",
      "tableDetailsGroup": "DetailsGroup",
      "chart": "Chart",
      "Continuous": "ContinuousSection",
      "dashboardSection": "Section"
    }
  },
  {
    "ns": "notifications",
    "lng": "en",
    "resources": {
      "addReportItem": {
        "caption": "Report item of type '{{reportItemType}}' can't be added to {{containerType}}"
      },
      "contentPlaceholderSize": {
        "caption": "Action cannot be performed",
        "text": "Content exceeds Content placeholder size"
      },
      "deleteRowColumn": {
        "caption": "Cannot delete {{rowColumn}}",
        "text": "{{rowColumn}} cannot be deleted because {{itemType}} '{{itemName}}' would have invalid size as a result."
      },
      "fixedPageSize": {
        "caption": "Action cannot be performed",
        "text": "Report item could not exceed page size"
      },
      "fplPasteFailed": {
        "caption": "Paste operation failed",
        "text": "There is not enough space to paste report items"
      },
      "innerException": {
        "caption": "Inner exception occurred"
      },
      "invalidPageSizes": {
        "caption": "This action will result in invalid page sizes"
      },
      "lockLayout": {
        "caption": "Report layout is locked",
        "text": "Resizing, moving, deleting, adding report items and changing layout properties is restricted."
      },
      "removeDefaultLayer": {
        "caption": "Default layer can't be removed"
      },
      "transaction": {
        "caption": "Transaction failed: {{innerException}}"
      },
      "listRowsOrColumnsCount": {
        "caption": "Action cannot be performed",
        "text": "Content exceeds list column/row size"
      },
      "libraries": {
        "loadingFailed": {
          "caption": "Library \"{{path}}\" loading failed"
        },
        "importFailed": {
          "caption": "Library \"{{path}}\" importing failed"
        },
        "unknownLibrary": {
          "caption": "Report depends on unknown library",
          "text": "The library \"{{libName}}\" used in this report is not found"
        },
        "nonMslLibrary": {
          "text": "Unable to parse non-MSL report as library"
        },
        "dataSourceNotFound": {
          "text": "Required data source \"{{dataSourceName}}\" not found"
        },
        "dataSetNotFound": {
          "text": "Required data set \"{{dataSetName}}\" not found"
        },
        "noDataSetsFound": {
          "text": "No data sets found in library"
        },
        "invalidLibraryName": {
          "text": "Invalid library name \"{{libName}}\". Use alphanumeric characters and underscore only"
        },
        "duplicateLibrary": {
          "text": "Library with {{libProp}} \"{{libValue}}\" already exists. Library {{libProp}} must be unique"
        }
      },
      "convertTableForClient": {
        "text": "✘ Table '{{name}}' has invalid structure and has been converted to Tablix"
      },
      "removeLastValidValue": {
        "caption": "Last valid value for bound parameter can't be removed"
      },
      "pasteFailedDecode": {
        "caption": "Decode error while pasting: {{reason}}"
      },
      "pasteWarningDecode": {
        "caption": "Decode warning while pasting",
        "text": "{{warning}}"
      },
      "pasteFailed": {
        "caption": "Not valid item to paste: {{elementName}}",
        "text": "You can paste Overflow Placeholder in fixed page report only"
      }
    }
  },
  {
    "ns": "pageSizes",
    "lng": "en",
    "resources": {
      "values": [
        {
          "_name": "Letter",
          "cm": {
            "height": "27.9cm",
            "width": "21.6cm"
          },
          "in": {
            "height": "11in",
            "width": "8.5in"
          }
        },
        {
          "_name": "Tabloid",
          "cm": {
            "height": "43.2cm",
            "width": "27.9cm"
          },
          "in": {
            "height": "17in",
            "width": "11in"
          }
        },
        {
          "_name": "Legal",
          "cm": {
            "height": "35.6cm",
            "width": "21.6cm"
          },
          "in": {
            "height": "14in",
            "width": "8.5in"
          }
        },
        {
          "_name": "Executive",
          "cm": {
            "height": "26.7cm",
            "width": "18.4cm"
          },
          "in": {
            "height": "10.5in",
            "width": "7.25in"
          }
        },
        {
          "_name": "A3",
          "cm": {
            "height": "42cm",
            "width": "29.7cm"
          },
          "in": {
            "height": "16.54in",
            "width": "11.69in"
          }
        },
        {
          "_name": "A4",
          "cm": {
            "height": "29.7cm",
            "width": "21cm"
          },
          "in": {
            "height": "11.69in",
            "width": "8.27in"
          }
        },
        {
          "_name": "A5",
          "cm": {
            "height": "21cm",
            "width": "14.8cm"
          },
          "in": {
            "height": "8.27in",
            "width": "5.83in"
          }
        },
        {
          "_name": "A6",
          "cm": {
            "height": "14.8cm",
            "width": "10.5cm"
          },
          "in": {
            "height": "5.83in",
            "width": "4.13in"
          }
        },
        {
          "_name": "B4 (JIS)",
          "cm": {
            "height": "36.4cm",
            "width": "25.7cm"
          },
          "in": {
            "height": "14.33in",
            "width": "10.12in"
          }
        },
        {
          "_name": "B5 (JIS)",
          "cm": {
            "height": "25.7cm",
            "width": "18.2cm"
          },
          "in": {
            "height": "10.12in",
            "width": "7.17in"
          }
        },
        {
          "_name": "B6 (JIS)",
          "cm": {
            "height": "18.2cm",
            "width": "12.8cm"
          },
          "in": {
            "height": "7.17in",
            "width": "5.04in"
          }
        },
        {
          "_name": "B5 (ISO)",
          "cm": {
            "height": "25cm",
            "width": "17.6cm"
          },
          "in": {
            "height": "9.84in",
            "width": "6.93in"
          }
        }
      ]
    }
  },
  {
    "ns": "parametersViewEditor",
    "lng": "en",
    "resources": {
      "bindingAdorner": {
        "textUnspecified": "Unspecified",
        "headingBinding": "Binding"
      },
      "parametersPanel": {
        "titleEditParameter": "Edit Parameter...",
        "headingEditable": "Visible",
        "headingHidden": "Hidden",
        "headingEditParameter": "Edit Parameter",
        "headingEditRange": "Edit Range"
      },
      "properties": {
        "categories": {
          "preview": "Preview",
          "common": "Common",
          "appearance": "Appearance",
          "advanced": "Advanced",
          "binding": "Binding",
          "locationAndSize": "Location & Size",
          "details": "Details",
          "label": "Label"
        },
        "labels": {
          "amount": "Amount",
          "label": "Label",
          "anchorDate": "Anchor Date",
          "offset": "Offset",
          "endpoint": "Endpoint",
          "endpointStates": {
            "textTrue": "Include",
            "textFalse": "Exclude"
          },
          "binding": "Binding",
          "left": "Left",
          "top": "Top",
          "width": "Width",
          "height": "Height",
          "ranges": "Ranges",
          "showDefaultRanges": {
            "label": "Default Ranges",
            "textTrue": "Visible",
            "textFalse": "Hidden"
          },
          "value": "Value",
          "trueText": "\"True\" text",
          "falseText": "\"False\" text",
          "text": "Text",
          "layout": "Layout",
          "type": "Type",
          "display": "Display",
          "action": "Action",
          "background": "Background",
          "from": "From",
          "to": "To",
          "maxRange": "Max Range",
          "viewMode": "View Mode",
          "daysHeaderFormat": "Days Header Format",
          "placeholder": "Placeholder",
          "placeholderFrom": "\"From\" Placeholder",
          "placeholderTo": "\"To\" Placeholder",
          "alignment": "Alignment",
          "color": "Color",
          "strikeThrough": "Strikethrough",
          "columns": "Columns",
          "min": "Min",
          "max": "Max",
          "step": "Step",
          "roundInputToStep": "Round Input To Step",
          "upDownEditor": "Up-Down Editor",
          "slider": "Slider",
          "multiline": "Multiline",
          "list": "List",
          "dropdown": "Dropdown",
          "recursive": "Recursive",
          "groupBy": "Group By",
          "pathString": "Path String",
          "mode": "Mode",
          "fields": "Fields",
          "unit": "Unit",
          "range": "Range"
        }
      },
      "sideBar": {
        "collapse": "Collapse",
        "expand": "Expand"
      },
      "propertiesText": "Properties",
      "parametersText": "Parameters",
      "canvas": "Canvas",
      "boundParameter": {
        "text": "Bound Parameter",
        "parameter": "{{name}} Parameter",
        "defaultValue": "Default Value",
        "multiValue": "Multi Value",
        "multiline": "Multiline",
        "allowBlank": "Allow Blank",
        "nullable": "Nullable"
      },
      "propertyGrid": {
        "btnCloseSearch": "Close",
        "textEmptyList": "Select an item to see properties",
        "placeholderSearch": "enter property name here...",
        "textNoCommonProperties": "There are no common properties",
        "textUnknownProperty": "Unknown Property:"
      },
      "surface": {
        "btnAutoGenerate": "Auto-Generate",
        "messageBlock": {
          "textDescriptionOne": "Not all report parameters have been bound.",
          "textDescriptionButtonBefore": "You can",
          "textDescriptionButtonAfter": "editors for them."
        },
        "btnGenerate": "Generate",
        "emptySurfaceBlock": {
          "textDescriptionOne": "This report doesn't have a custom parameters view.",
          "textDescriptionButtonBefore": "You can",
          "textDescriptionButtonAfter": "it from available parameters, or have a fresh start with the controls from the toolbox.",
          "textDescriptionTwo": "You can create it using controls from the toolbox."
        },
        "scrollBar": {
          "textMessagesOne": "Parameters will look this way when shown in the viewer`s sidebar.",
          "textMessagesTwo": "You can change the order by dragging components."
        }
      },
      "toolbar": {
        "btnDuplicate": "Duplicate",
        "btnDelete": "Delete",
        "btnLayoutStack": "Stack",
        "btnLayoutFreeForm": "Free Form",
        "btnHighlightRequired": "Highlight Required",
        "btnGenerateView": "Generate View",
        "btnResetView": "Reset View",
        "btnRemoveView": "Remove View"
      },
      "booleanProperties": {
        "trueText": "True",
        "falseText": "False",
        "undefinedText": "Undefined",
        "toggle": "Toggle",
        "checkbox": "Checkbox",
        "radio": "Radio"
      },
      "parameters": {
        "labelBoolean": "Boolean Parameter",
        "labelDateRange": "DateRange Parameter",
        "labelDateTime": "DateTime Parameter",
        "labelDateTimeRange": "DateTimeRange Parameter",
        "labelDropdown": "Dropdown Parameter",
        "labelList": "List Parameter",
        "labelMultivalue": "Multivalue Parameter",
        "labelNumber": "Number Parameter",
        "labelNumberRange": "NumberRange Parameter",
        "labelSingleLineParameter": "Single-Line Parameter",
        "labelHierarchical": "Hierarchical Parameter"
      },
      "editors": {
        "nameBoolean": "Boolean Editor",
        "nameButton": "Button",
        "nameDateRange": "Date Range Editor",
        "nameDateTime": "DateTime Editor",
        "nameDateTimeRange": "DateTime Range Editor",
        "nameDropdown": "Dropdown Editor",
        "textHeading": "Heading Text",
        "nameHeading": "Heading",
        "nameList": "List Editor",
        "nameMultivalue": "Multivalue Editor",
        "textNull": "Null",
        "nameNumber": "Number Editor",
        "textCheckRangeType": "Both parameters should have the same data type",
        "nameNumberRange": "Number Range Editor",
        "namePlainText": "Plain Text",
        "nameText": "Text Editor",
        "nameTreeView": "Tree View"
      },
      "bindingProperties": {
        "boolean": "Boolean",
        "date": "Date",
        "dateDateTime": "Date, DateTime",
        "any": "Any",
        "integerFloat": "Integer, Float"
      },
      "buttonProperties": {
        "preview": "Preview",
        "reset": "Reset",
        "clear": "Clear"
      },
      "dateRangeParameterLabels": {
        "tabLabelDaily": "Daily",
        "tabLabelMonthly": "Monthly",
        "tabLabelAnnually": "Annually",
        "textBack": "Back to Calendar",
        "textShortcutsList": "Common Ranges",
        "placeholderDateStart": "Start",
        "placeholderDateEnd": "End",
        "shortcuts": {
          "labelLastWeek": "Last week",
          "labelLastMonth": "Last month",
          "labelLastYear": "Last year",
          "labelWeekToDate": "Week to date",
          "labelMonthToDate": "Month to date",
          "labelYearToDate": "Year to date"
        },
        "monthYearOrder": "M-Y"
      },
      "dateTimeParameterLabels": {
        "monthYearOrder": "M-Y",
        "textClear": "Clear",
        "textToday": "Today",
        "textBack": "Back to Calendar"
      },
      "dateTimeRange": {
        "rangeTypes": {
          "Current_Year": "Current Year",
          "Current_Quarter": "Current Quarter",
          "Current_Month": "Current Month",
          "Current_Week": "Current Week",
          "Current_Day": "Current Day",
          "Current_Hour": "Current Hour",
          "Current_Minute": "Current Minute",
          "ToDate_Year": "Year-To-Date",
          "ToDate_Quarter": "Quarter-To-Date",
          "ToDate_Month": "Month-To-Date",
          "ToDate_Week": "Week-To-Date",
          "ToDate_Day": "Day-To-Date",
          "LastSimple_Year": "Last Year",
          "LastSimple_Quarter": "Last Quarter",
          "LastSimple_Month": "Last Month",
          "LastSimple_Week": "Last Week",
          "LastSimple_Day": "Last Day",
          "LastSimple_Hour": "Last Hour",
          "LastSimple_Minute": "Last Minute",
          "LastSimple_Second": "Last Second",
          "NextSimple_Year": "Next Year",
          "NextSimple_Quarter": "Next Quarter",
          "NextSimple_Month": "Next Month",
          "NextSimple_Week": "Next Week",
          "NextSimple_Day": "Next Day",
          "NextSimple_Hour": "Next Hour",
          "NextSimple_Minute": "Next Minute",
          "NextSimple_Second": "Next Second",
          "LastToDateSimple_Year": "Last Year To Date",
          "LastToDateSimple_Quarter": "Last Quarter To Date",
          "LastToDateSimple_Month": "Last Month To Date",
          "LastToDateSimple_Week": "Last Week To Date",
          "LastToDateSimple_Day": "Last Day To Date",
          "Last_Year": "Last {{count}} Years",
          "Last_Year_plural": "Last {{count}} Years",
          "Last_Quarter": "Last {{count}} Quarters",
          "Last_Quarter_plural": "Last {{count}} Quarters",
          "Last_Month": "Last {{count}} Months",
          "Last_Month_plural": "Last {{count}} Months",
          "Last_Week": "Last {{count}} Weeks",
          "Last_Week_plural": "Last {{count}} Weeks",
          "Last_Day": "Last {{count}} Days",
          "Last_Day_plural": "Last {{count}} Days",
          "Last_Hour": "Last {{count}} Hours",
          "Last_Hour_plural": "Last {{count}} Hours",
          "Last_Minute": "Last {{count}} Minutes",
          "Last_Minute_plural": "Last {{count}} Minutes",
          "Last_Second": "Last {{count}} Seconds",
          "Last_Second_plural": "Last {{count}} Seconds",
          "Next_Year": "Next {{count}} Years",
          "Next_Year_plural": "Next {{count}} Years",
          "Next_Quarter": "Next {{count}} Quarters",
          "Next_Quarter_plural": "Next {{count}} Quarters",
          "Next_Month": "Next {{count}} Months",
          "Next_Month_plural": "Next {{count}} Months",
          "Next_Week": "Next {{count}} Weeks",
          "Next_Week_plural": "Next {{count}} Weeks",
          "Next_Day": "Next {{count}} Days",
          "Next_Day_plural": "Next {{count}} Days",
          "Next_Hour": "Next {{count}} Hours",
          "Next_Hour_plural": "Next {{count}} Hours",
          "Next_Minute": "Next {{count}} Minutes",
          "Next_Minute_plural": "Next {{count}} Minutes",
          "Next_Second": "Next {{count}} Seconds",
          "Next_Second_plural": "Next {{count}} Seconds",
          "LastToDate_Year": "Last {{count}} Years To Date",
          "LastToDate_Year_plural": "Last {{count}} Years To Date",
          "LastToDate_Quarter": "Last {{count}} Quarters To Date",
          "LastToDate_Quarter_plural": "Last {{count}} Quarters To Date",
          "LastToDate_Month": "Last {{count}} Months To Date",
          "LastToDate_Month_plural": "Last {{count}} Months To Date",
          "LastToDate_Week": "Last {{count}} Weeks To Date",
          "LastToDate_Week_plural": "Last {{count}} Weeks To Date",
          "LastToDate_Day": "Last {{count}} Days To Date",
          "LastToDate_Day_plural": "Last {{count}} Days To Date"
        }
      },
      "alignmentEnum": {
        "left": "Left",
        "center": "Center",
        "right": "Right",
        "justify": "Justify",
        "none": "None",
        "top": "Top",
        "bottom": "Bottom",
        "horizontal": "Horizontal",
        "vertical": "Vertical"
      },
      "dateViewProperties": {
        "default": "Default",
        "days": "Days",
        "months": "Months",
        "years": "Years",
        "accent": "Accent",
        "error": "Error",
        "warning": "Warning",
        "none": "None"
      },
      "fieldsProperties": {
        "addBtnText": "Add",
        "addBtnTitle": "Add Item",
        "closeBtnTitle": "Close",
        "showItem": "Show Items",
        "collectionIsEmpty": "Collection is empty",
        "items": "items"
      },
      "labels": {
        "removeDefaultValue": "Remove Default Value"
      },
      "placeholderEmpty": "<Empty>",
      "placeholderMultipleValues": "<Multiple Values>",
      "dataType": {
        "boolean": "Boolean",
        "string": "String",
        "integer": "Integer",
        "float": "Float",
        "date": "Date",
        "dateTime": "DateTime"
      },
      "msgString": {
        "notSupControl": "is not supported by this control",
        "controlNotSupportSingle": "This control doesn't support single value parameters",
        "controlRequires": "This control requires a list of available values",
        "controlNotSupportParameters": "This control doesn't support parameters with available values defined"
      }
    }
  },
  {
    "ns": "properties-RPX",
    "lng": "en",
    "resources": {
      "labels": {
        "paperSize": "Paper Size",
        "paperWidth": "Paper Width",
        "paperHeight": "Paper Height",
        "orientation": "Orientation",
        "radius": {
          "default": "Default"
        },
        "alignment": "Alignment",
        "backColor": "Background Color",
        "barHeight": "Bar Height",
        "barWidth": "Bar Width",
        "captionGrouping": "Caption Grouping",
        "captionPosition": "Caption Position",
        "fontFamily": "Font Family",
        "fontSize": "Font Size",
        "fontWeight": "Font Weight",
        "fontStyle": "Font Style",
        "fontUnderline": "Text Underline",
        "fontLinethrough": "Text Strikethrough",
        "foreColor": "Fore Color",
        "nwratio": "NW Ratio",
        "rotation": "Rotation",
        "barCodeStyle": "Style",
        "quietZoneLeft": "Quiet Zone Left",
        "quietZoneRight": "Quiet Zone Right",
        "quietZoneTop": "Quiet Zone Top",
        "quietZoneBottom": "Quiet Zone Bottom",
        "supplementText": "Supplement Text",
        "supplementBarHeight": "Supplement Bar Height",
        "supplementCaptionPosition": "Supplement Caption Position",
        "supplementDataField": "Supplement Data Field",
        "supplementSpacing": "Supplement Spacing",
        "autoSize": "Auto Size",
        "checkSumEnabled": "Checksum Enabled",
        "text": "Text",
        "checkAlignment": "Check Alignment",
        "checked": "Checked",
        "padding": "Padding",
        "border": {
          "style": "Border Style",
          "color": "Border Color",
          "width": "Border Width"
        },
        "control": {
          "name": "Name",
          "visible": "Visible",
          "dataField": "Data Field",
          "tag": "Tag",
          "left": "Left",
          "top": "Top",
          "width": "Width",
          "height": "Height",
          "right": "Right",
          "bottom": "Bottom"
        },
        "styles": "Styles",
        "style": {
          "className": "Class Name",
          "backColor": "Background Color",
          "foreColor": "Color",
          "fontFamily": "Font Family",
          "fontSize": "Font Size",
          "fontWeight": "Font Weight",
          "fontStyle": "Font Style",
          "shrinkToFit": "Shrink To Fit",
          "fontUnderline": "Text Underline",
          "fontLinethrough": "Text Strikethrough",
          "textAlign": "Text Alignment",
          "textJustify": "Text Justify",
          "verticalAlign": "Vertical Alignment",
          "wrapMode": "Wrap Mode",
          "verticalText": "Vertical Text",
          "ddoCharSet": "Script",
          "kinsoku": "Kinsoku",
          "styleName": "Name"
        },
        "crossSectionBoxRadius": "Radius",
        "lineColor": "Line Color",
        "lineStyle": "Line Style",
        "lineWeight": "Line Weight",
        "checkSize": "Check Size",
        "fieldName": "Field Name",
        "readonly": "Readonly",
        "required": "Required",
        "tabIndex": "Tab Index",
        "checkStyle": "Check Style",
        "outputFormat": "Output Format",
        "maxLength": "Max Length",
        "multiLine": "Multiline",
        "spellCheck": "Spellcheck",
        "password": "Password",
        "hyperLink": "Hyperlink",
        "rightToLeft": "Right to Left",
        "angle": "Angle",
        "minCondenseRate": "Min Condense Rate",
        "characterSpacing": "Character Spacing",
        "lineSpacing": "Line Spacing",
        "x1": "X1",
        "x2": "X2",
        "y1": "Y1",
        "y2": "Y2",
        "anchorBottom": "Anchor Bottom",
        "enabled": "Enabled",
        "image": "Image",
        "title": "Title",
        "description": "Description",
        "pictureAlignment": "Picture Alignment",
        "sizeMode": "Size Mode",
        "calcFieldName": "Name",
        "calcFieldFormula": "Formula",
        "calcFieldType": "Type",
        "calcFieldDefaultValue": "Default Value",
        "parameterName": "Name",
        "parameterPrompt": "Prompt",
        "parameterPromptUser": "Prompt User",
        "parameterParameterType": "Parameter Type",
        "parameterDefaultValue": "Default Value",
        "parameterFormat": "Format",
        "printWidth": "Print Width",
        "maxPages": "Max Pages",
        "paramUI": "Show Parameters UI",
        "margin": "Margin",
        "gutterMargin": "Gutter",
        "mirrorMargins": "Mirror Margins",
        "collate": "Collate",
        "duplex": "Duplex",
        "watermarkImage": "Image",
        "watermarkAlignment": "Alignment",
        "watermarkSizeMode": "Size Mode",
        "watermarkPrintOnPages": "Print On Pages",
        "scriptLanguage": "Script Language",
        "culture": "Culture",
        "userData": "User Data",
        "script": "Script",
        "version": "Version",
        "expressionErrorMessage": "Expression Error Message",
        "calendar": "Calendar",
        "summaryRunning": "Summary Running",
        "summaryGroup": "Summary Group",
        "formatString": "Format String",
        "canGrow": "Can Grow",
        "canShrink": "Can Shrink",
        "autoReplaceFields": "Auto Replace Fields",
        "htmlValue": "HTML Value",
        "MultiLine": "Multiline",
        "name": "Name",
        "height": "Height",
        "columnCount": "Column Count",
        "columnDirection": "Column Direction",
        "columnSpacing": "Column Spacing",
        "colKeepTogether": "Column Group Keep Together",
        "columnLayout": "Column Layout",
        "groupKeepTogether": "Group Keep Together",
        "keepTogether": "Keep Together",
        "newColumn": "New Column",
        "newPage": "New Page",
        "printAtBottom": "Print At Bottom",
        "repeatStyle": "Repeat Style",
        "repeatToFill": "Repeat To Fill",
        "underlayNext": "Underlay Next",
        "visible": "Visible",
        "dataField": "Data Field",
        "tag": "Tag",
        "shape": "Shape",
        "backgroundStyle": "Background Style",
        "gradientStyle": "Gradient Style",
        "backgroundPattern": "Background Pattern",
        "backColor2": "Background Color 2",
        "roundingRadius": "Rounding Radius",
        "reportName": "Report Name",
        "countNullValues": "Count Null Values",
        "summaryType": "Summary Type",
        "summaryFunc": "Summary Func",
        "distinctField": "Distinct Field"
      },
      "categories": {
        "appearance": "Appearance",
        "behavior": "Behavior",
        "common": "Common",
        "data": "Data",
        "design": "Design",
        "layout": "Layout",
        "summary": "Summary",
        "format": "Format",
        "misc": "Misc",
        "page": "Page",
        "watermark": "Watermark",
        "printing": "Printing",
        "text": "Text",
        "border": "Border",
        "pdf": "PDF"
      }
    }
  },
  {
    "ns": "propertyDescriptors",
    "lng": "en",
    "resources": {
      "labels": {
        "border": {
          "width": "Width",
          "style": "Style",
          "color": "Color",
          "bottom": "Bottom",
          "default": "Default",
          "left": "Left",
          "right": "Right",
          "top": "Top"
        },
        "roundingRadius": {
          "bottomLeft": "Bottom Left",
          "bottomRight": "Bottom Right",
          "default": "Default",
          "label": "Rounding Radius",
          "topLeft": "Top Left",
          "topRight": "Top Right"
        },
        "dvchart": {
          "plotTemplateDropdown": "Select...",
          "bar": {
            "bottomWidth": "Bottom Width",
            "neckHeight": "Neck Height",
            "overlap": "Overlap",
            "topWidth": "Top Width",
            "width": "Width"
          },
          "customPaletteColors": "Custom Palette Colors",
          "legendHidden": "Hidden",
          "legendOrientation": "Orientation",
          "legendPosition": "Position",
          "legendWrapping": "Wrapping",
          "palette": "Palette",
          "plotTemplate": "Plot Template",
          "plots": "Plots"
        },
        "dvPlotOverlays": {
          "name": "Name",
          "type": "Type",
          "display": "Display",
          "lineColor": "Line Color",
          "lineStyle": "Line Style",
          "lineWidth": "Line Width",
          "backgroundColor": "Background Color",
          "field": "Field",
          "detailLevel": "Detail Level",
          "legendLabel": "Legend Label",
          "value": "Value",
          "axis": "Axis",
          "aggregateType": "Aggregate Type",
          "start": "Start",
          "end": "End",
          "order": "Order",
          "period": "Period",
          "forwardForecastPeriod": "Forward Forecast Period",
          "backwardForecastPeriod": "Backward Forecast Period",
          "intercept": "Intercept"
        },
        "dvchartPlotRules": {
          "name": "Name",
          "targetProperty": "Target Property",
          "valueRuleProperties": "Value",
          "condition": "Condition",
          "ruleProperties": "Rule Properties"
        },
        "dvChartPlotPointers": {
          "needleWidth": "Needle Width",
          "needlePinWidth": "Needle Pin Width",
          "end": "End"
        },
        "dvChartPlotCustomLabels": {
          "text": "Text",
          "offsetX": "Offset X",
          "offsetY": "Offset Y"
        },
        "parameter": {
          "omit": "Omit",
          "parametername": "Parameter Name",
          "parameters": "Parameters",
          "value": "Value"
        },
        "multipleValues": "<Multiple Values>",
        "overflowPlaceHolder": {
          "overflowName": "Overflow Name"
        },
        "padding": {
          "bottom": "Bottom",
          "left": "Left",
          "right": "Right",
          "top": "Top"
        },
        "pageSection": {
          "printOnFirstPage": "Print On First Page",
          "printOnLastPage": "Print On Last Page"
        },
        "partItem": {
          "reportPart": "Report Part",
          "library": "Library"
        },
        "report": {
          "author": "Author",
          "collateBy": "Collate By",
          "columnSpacing": "Column Spacing",
          "columns": "Columns",
          "consumeContainerWhitespace": "Consume White Space",
          "description": "Description",
          "displayType": "Display Type",
          "embeddedImages": "Embedded Images",
          "language": "Language",
          "layers": "Layers",
          "layoutOrder": "Layout Order",
          "level": "Level",
          "levels": "Levels",
          "marginsSizes": "Sizes",
          "marginsStyle": "Style",
          "nameMasterReport": "Master Report",
          "numberingStyle": "Numbering Style",
          "pageHeight": "Page Height",
          "pageOrientation": "Page Orientation",
          "pageSize": "Page Size",
          "pageWidth": "Page Width",
          "reportParts": "Report Parts",
          "reportPart": {
            "description": "Description",
            "displayName": "Display Name",
            "partProperties": "Properties",
            "properties": {
              "defaultValue": "Default Value",
              "description": "Description",
              "displayName": "Display Name",
              "category": "Category",
              "type": "Type"
            },
            "reportItemName": "Report Item Name",
            "sizeMode": "Size Mode"
          },
          "sizeType": "Size Type",
          "source": "Source",
          "startPageNumber": "Start Page Number",
          "theme": "Theme",
          "themes": "Themes"
        },
        "reportItem": {
          "actionType": "Type",
          "bookmark": "Bookmark",
          "keepTogether": "Keep Together",
          "label": "Label",
          "layerName": "Layer Name",
          "name": "Name",
          "pageName": "Page Name",
          "style": "Style",
          "toolTip": "Tooltip",
          "visibility": "Visibility",
          "zIndex": "Z-Index",
          "accessibleDescription": "Accessible Description"
        },
        "reportParameter": {
          "allowBlankValue": "Allow Blank Value",
          "allowNullValue": "Allow Null Value",
          "dataSetName": "Data Set Name",
          "dataType": "Data Type",
          "hidden": "Hidden",
          "label": "Label",
          "labelField": "Label Field",
          "multiline": "Multiline",
          "multivalue": "Multivalue",
          "name": "Name",
          "orderBy": "Order By",
          "parameterFormat": "Format",
          "parameterValues": "Parameter Values",
          "prompt": "Prompt",
          "selectAllValue": "Select All Value",
          "selectAllValue_help": {
            "text": "If specified, determines the value to be passed to parameter value in case \"Select All\" flag is set for multivalue parameter."
          },
          "value": "Value",
          "valueField": "Value Field",
          "values": "Values"
        },
        "reportSlicer": {
          "allowBlankValue": "Allow Blank Value",
          "allowNullValue": "Allow Null Value",
          "dataSetName": "Data Set Name",
          "multivalue": "Multivalue",
          "name": "Name"
        },
        "richtext": {
          "canGrow": "Can Grow",
          "markup": "Markup Type",
          "value": "Value"
        },
        "sparkline": {
          "fillColor": "Fill Color",
          "gradientEndColor": "Gradient End Color",
          "gradientStyle": "Gradient Type",
          "lineColor": "Line Color",
          "lineWidth": "Line Width",
          "markerColor": "Marker Color",
          "markerVisibility": "Marker Visibility",
          "maximumColumnWidth": "Maximum Width",
          "rangeFillColor": "Fill Color",
          "rangeGradientEndColor": "Gradient End Color",
          "rangeGradientStyle": "Gradient Type",
          "rangeLowerBound": "Lower Bound",
          "rangeUpperBound": "Upper Bound",
          "rangeVisibility": "Visibility",
          "seriesValue": "Series Value",
          "sparklineType": "Sparkline Type"
        },
        "style": {
          "angle": "Angle",
          "backgroundAndBorders": "Background & Borders",
          "backgroundColor": "Color",
          "backgroundGradientEndColor": "Gradient End Color",
          "backgroundGradientType": "Gradient Type",
          "backgroundImage": "Image",
          "border": "Border",
          "calendar": "Calendar",
          "characterSpacing": "Character Spacing",
          "color": "Color",
          "corner": "Corner",
          "direction": "Direction",
          "font": "Font",
          "format": "Format",
          "headingLevel": "Heading Level",
          "language": "Language",
          "lineHeight": "Line Height",
          "lineSpacing": "Line Spacing",
          "maxLevel": "Max Level",
          "minCondenseRate": "Min Condense Rate",
          "minCondenseRate_help": {
            "text": "Specifies the minimal rate of text horizontal shrinking in percentages. Should be between 10 and 100."
          },
          "numeralLanguage": "Numeral Language",
          "numeralVariant": "Numeral Variant",
          "padding": "Padding",
          "shapeStyle": "Shape Style",
          "shrinkToFit": "Shrink To Fit",
          "textAlign": "Text Align",
          "textDecoration": "Text Decoration",
          "textIndent": "Text Indent",
          "textJustify": "Text Justify",
          "unicodeBiDi": "Unicode BiDi",
          "uprightInVerticalText": "Upright In Vertical Text",
          "verticalAlign": "Vertical Align",
          "wrapMode": "Wrap Mode",
          "writingMode": "Writing Mode"
        },
        "subreport": {
          "inheritStyleSheet": "Inherit Style Sheet",
          "mergeTransactions": "Merge Transactions",
          "reportName": "Report Name",
          "reportParameters": "Report Parameters",
          "substituteThemeOnSubreport": "Substitute Theme On Subreport"
        },
        "table": {
          "autoWidth": "Auto Width",
          "detailsDataCollectionName": "Details Data Collection Name",
          "detailsDataElementName": "Details Data Element Name",
          "detailsDataElementOutput": "Details Data Element Output",
          "keepTogether": "Keep Together",
          "preventOrphanedFooter": "Prevent Orphaned Footer",
          "printAtBottom": "Print At Bottom",
          "repeatBlankRows": "Repeat Blank Rows",
          "repeatOnNewPage": "Repeat On New Page"
        },
        "tablix": {
          "frozenColumns": "Frozen Columns",
          "frozenRows": "Frozen Rows",
          "groupsBeforeRowHeaders": "Groups Before Row Headers",
          "layoutDirection": "Layout Direction",
          "repeatColumnHeaders": "Repeat Column Headers",
          "repeatRowHeaders": "Repeat Row Headers"
        },
        "tablixBodyCell": {
          "autoMergeMode": "Auto Merge Mode",
          "autoMergeMode_help": {
            "text": "Indicates whether two or more continuous cells in a column having the same content should be merged. It would work only for TextBox cell."
          }
        },
        "tablixMember": {
          "groupEnabled": "Enabled",
          "keepWithGroup": "Keep With Group",
          "repeatOnNewPage": "Repeat On New Page"
        },
        "textbox": {
          "canGrow": "Can Grow",
          "canShrink": "Can Shrink",
          "initialToggleState": "Initial Toggle State",
          "value": "Value"
        },
        "tocLevel": {
          "displayFillCharacters": "Display Fill Character",
          "displayPageNumber": "Display Page Number",
          "fillCharacter": "Fill Character",
          "label": "Label"
        },
        "userSort": {
          "sortExpression": "Sort Expression",
          "sortExpressionScope": "Sort Expression Scope",
          "sortTarget": "Sort Target"
        },
        "visibility": {
          "hidden": "Hidden",
          "toggleItem": "Toggle Item"
        },
        "empty": "<Empty>",
        "filter": {
          "filterExpression": "Filter Expression",
          "filterValues": "Filter Values",
          "operator": "Operator",
          "value": "Value"
        },
        "font": {
          "fontFamily": "Font Family",
          "fontSize": "Font Size",
          "fontStyle": "Font Style",
          "fontWeight": "Font Weight"
        },
        "formattedText": {
          "encodeMailMergeFields": "Encode Merge Fields",
          "html": "Html",
          "mailMergeFields": "Merge Fields"
        },
        "fplReport": {
          "fixedElementName": "Fixed Page Element Name",
          "fixedElementOutput": "Fixed Page Element Output"
        },
        "group": {
          "dataCollectionName": "Data Collection Name",
          "dataElementName": "Data Element Name",
          "dataElementOutput": "Data Element Output",
          "documentMapLabel": "Label",
          "filters": "Filters",
          "groupExpressions": "Group Expressions",
          "name": "Name",
          "newSection": "New Section",
          "pageBreak": "Page Break",
          "pageBreakDisabled": "Page Break Disabled",
          "newPage": "New Page",
          "parent": "Parent",
          "printFooterAtBottom": "Print Footer At Bottom"
        },
        "inputField": {
          "checkSize": "Check Size",
          "checkStyle": "Check Style",
          "checked": "Checked",
          "fieldName": "Field Name",
          "inputType": "Type",
          "maxLength": "Max Length",
          "multiline": "Multiline",
          "password": "Password",
          "readonly": "Readonly",
          "required": "Required",
          "spellCheck": "Spellcheck",
          "tabIndex": "Tab Index",
          "value": "Value"
        },
        "layer": {
          "designerDataFieldVisible": "Field Selector Availability",
          "designerLock": "Designer Lock",
          "designerTransparency": "Designer Transparency",
          "designerVisible": "Designer Visible",
          "name": "Name",
          "targetDevice": {
            "all": "All",
            "export": "Export",
            "paper": "Paper",
            "screen": "Screen"
          }
        },
        "line": {
          "endPoint": "End Point",
          "lineColor": "Line Color",
          "lineStyle": "Line Style",
          "lineWidth": "Line Width",
          "startPoint": "Start Point"
        },
        "list": {
          "consumeWhiteSpace": "Consume White Space",
          "dataInstanceElementOutput": "Data Instance Element Output",
          "dataInstanceName": "Data Instance Name",
          "gridMode": "Grid Mode",
          "rowsOrColumnsCount": "Rows Or Columns Count",
          "growDirection": "Grow Direction"
        },
        "margins": {
          "bottom": "Bottom",
          "left": "Left",
          "right": "Right",
          "top": "Top"
        },
        "dataVisualizer": {
          "colorScale": {
            "maximum": "Maximum",
            "maximumColor": "Maximum Color",
            "middle": "Middle",
            "middleColor": "Middle Color",
            "minimum": "Minimum",
            "minimumColor": "Minimum Color",
            "useMiddleColor": "Use Middle Color",
            "value": "Value"
          },
          "dataBar": {
            "alternateColor": "Alternate Color",
            "color": "Color",
            "maximum": "Maximum",
            "minimum": "Minimum",
            "useAlternateColor": "Use Alternate Color",
            "useAlternateColor_help": {
              "text": "If enabled, 'Alternate Color' will be used when 'Value' is less than 'Zero Value'"
            },
            "value": "Value",
            "zeroValue": "Zero Value"
          },
          "gradient": {
            "color1": "Color 1",
            "color2": "Color 2",
            "gradientType": "Gradient Type"
          },
          "hatch": {
            "color1": "Color 1",
            "color2": "Color 2",
            "hatchStyle": "Hatch Style"
          },
          "iconSet": {
            "icon1Value": "Icon 1 Value",
            "icon2Value": "Icon 2 Value",
            "icon3Value": "Icon 3 Value",
            "icon4Value": "Icon 4 Value",
            "icon5Value": "Icon 5 Value",
            "iconSet": "Icon Set"
          },
          "rangeBar": {
            "color": "Color",
            "displayProgressIndicator": "Display Progress Indicator",
            "length": "Length",
            "maximum": "Maximum",
            "minimum": "Minimum",
            "progressIndicatorColor": "Progress Indicator Color",
            "progressIndicatorLength": "Progress Indicator Length",
            "startingValue": "Starting Value"
          },
          "visualizerType": "Visualizer Type"
        },
        "dimensions": {
          "bottom": "Bottom",
          "endPointX": "End Point X",
          "endPointY": "End Point Y",
          "fixedHeight": "Fixed Height",
          "fixedSize": "Fixed Size",
          "fixedWidth": "Fixed Width",
          "height": "Height",
          "left": "Left",
          "location": "Location",
          "right": "Right",
          "size": "Size",
          "startPointX": "Start Point X",
          "startPointY": "Start Point Y",
          "top": "Top",
          "width": "Width"
        },
        "dvchartAxis": {
          "axisType": "Axis Type",
          "dateMode": "Date Mode",
          "gridLinesStyle": "Grid Line Style",
          "height": "Height",
          "labelAngle": "Label Angle",
          "labelField": "Label Field",
          "lineStyle": "Line Style",
          "logBase": "Log Base",
          "majorInterval": "Major Interval",
          "max": "Max",
          "maxHeight": "Max Height",
          "maxWidth": "Max Width",
          "min": "Min",
          "minorInterval": "Minor Interval",
          "origin": "Origin",
          "overlappingLabels": "Overlapping Labels",
          "plots": "Plots",
          "position": "Position",
          "reversed": "Reversed",
          "scale": "Scale Type",
          "showGridLines": "Show Grid Lines",
          "showMajorGridLines": "Major Grid Lines",
          "showMinorGridLines": "Minor Grid Lines",
          "tickMarks": "Tick Marks",
          "tickSize": "Tick Size",
          "tickStyle": "Tick Style",
          "title": "Title",
          "visible": "Visible",
          "width": "Width"
        },
        "dvchartEncoding": {
          "aggregateType": "Aggregate",
          "excludeNulls": "Exclude Nulls",
          "fieldType": "Field Type",
          "fieldValue": "Value",
          "group": "Group",
          "sort": "Sort Direction",
          "sortingAggregate": "Sorting Aggregate",
          "sortingField": "Sort Expression",
          "target": "Target",
          "templateKey": "Template Key",
          "value": "Values"
        },
        "dvchartHeaderFooter": {
          "caption": "Caption",
          "height": "Height"
        },
        "dvchartLegend": {
          "hidden": "Hidden",
          "iconColor": "Icon Color",
          "maxHeight": "Max Height",
          "maxWidth": "Max Width",
          "orientation": "Orientation",
          "position": "Position",
          "ranges": "Ranges",
          "title": "Title"
        },
        "dvchartPlot": {
          "action": "Action Type",
          "axisMode": "Axis Mode",
          "bar": "Bar Lines",
          "category": "Category",
          "categorySort": "Category Sort Direction",
          "categorySortingAggregate": "Category Sorting Aggregate",
          "categorySortingField": "Category Sort Expression",
          "clippingMode": "Clipping Mode",
          "color": "Color",
          "colorAggregate": "Color Aggregate",
          "customLabels": "Gauge Labels",
          "details": "Details",
          "innerRadius": "Inner Radius",
          "lineAspect": "Line Aspect",
          "lineColor": "Line Color",
          "lineStyle": "Line Style",
          "lineWidth": "Line Width",
          "offset": "Offset",
          "opacity": "Opacity",
          "overlays": "Overlays",
          "plotStyle": "Plot Style",
          "pointers": "Gauge Pointers",
          "radial": "Radial",
          "rules": "Rules",
          "shape": "Shape",
          "shapeAggregate": "Shape Aggregate",
          "showNulls": "Show Nulls",
          "showValuesNamesInLegend": "Show Values Names In Legend",
          "size": "Size",
          "sizeAggregate": "Size Aggregate",
          "startAngle": "Start Angle",
          "swapAxes": "Swap Axes",
          "sweep": "Sweep",
          "symbolBackgroundColor": "Background Color",
          "symbolOpacity": "Symbol Opacity",
          "symbolShape": "Symbol Shape",
          "symbolStyle": "Symbol Style",
          "symbols": "Show Symbols",
          "text": "Text",
          "textBackgroundColorStyle": "Background Color",
          "textConnectingLine": "Connecting Line",
          "textLinePosition": "Position",
          "textOffset": "Offset",
          "textOverlappingLabels": "Overlapping Labels",
          "textPosition": "Position",
          "texts": "Text Encodings",
          "textTemplate": "Template",
          "tooltip": "Tooltip",
          "tooltipTemplate": "Tooltip Template",
          "type": "Plot Type",
          "unpivotData": "Unpivot Data",
          "values": "Values",
          "gaugeRanges": "Gauge Ranges"
        },
        "dvchartPlotArea": {
          "axes": "Axes"
        },
        "dvchartValueEncoding": {
          "field": {
            "close": "Close",
            "high": "High",
            "key": "Key",
            "low": "Low",
            "lower": "Lower",
            "open": "Open",
            "upper": "Upper",
            "value": "Value",
            "caption": "Caption"
          }
        },
        "checkBox": {
          "checkAlignment": "Check Alignment",
          "checked": "Checked",
          "text": "Text"
        },
        "container": {
          "consumeWhiteSpace": "Consume White Space",
          "gridMode": "Grid Mode",
          "linkToChild": "Link To Child",
          "pageBreak": "Page Break",
          "newPage": "New Page",
          "overflow": "Overflow",
          "canGrow": "Can Grow"
        },
        "contentPlaceHolder": {
          "consumeWhiteSpace": "Consume White Space",
          "text": "Text"
        },
        "data": {
          "dataElementName": "Element Name",
          "dataElementOutput": "Element Output",
          "dataElementStyle": "Element Style"
        },
        "dataRegion": {
          "dataSetName": "Data Set Name",
          "dataSetParameters": "Data Set Parameters",
          "dataSetParameters_help": {
            "text": "Setting a parameter in the DataSetParameters property allows adding relationships for displaying data in nested data regions that are bound to different datasets."
          },
          "filters": "Filters",
          "newSection": "New Section",
          "noRowsMessage": "Message",
          "overflowName": "Overflow Name",
          "pageBreak": "Page Break",
          "newPage": "New Page",
          "repeatToFill": "Repeat To Fill",
          "sortExpressions": "Sort Expressions",
          "throwIfPlaceHoldersEmpty": "Throw If Placeholders Empty"
        },
        "dataSet": {
          "accentSensitivity": "Accent Sensitivity",
          "boundFields": "Bound Fields",
          "calculatedFields": "Calculated Fields",
          "caseSensitivity": "Case Sensitivity",
          "collation": "Collation",
          "commandType": "Command Type",
          "fields": "Fields",
          "filters": "Filters",
          "kanatypeSensitivity": "Kanatype Sensitivity",
          "name": "Name",
          "parameters": "Parameters",
          "query": "Query",
          "widthSensitivity": "Width Sensitivity"
        },
        "dataSetParameter": {
          "name": "Name",
          "value": "Value"
        },
        "bullet": {
          "bestValue": "Best Value",
          "interval": "Interval",
          "labelFontColor": "Font Color",
          "labelFontFamily": "Font Family",
          "labelFontSize": "Font Size",
          "labelFontStyle": "Font Style",
          "labelFormat": "Label Format",
          "orientation": "Orientation",
          "range1Boundary": "Range1 Boundary",
          "range2Boundary": "Range2 Boundary",
          "showLabels": "Show Labels",
          "targetLineColor": "Color",
          "targetLineWidth": "Line Width",
          "targetShape": "Shape",
          "targetValue": "Target Value",
          "tickMarks": "Marks",
          "ticksLineColor": "Color",
          "ticksLineWidth": "Line Width",
          "value": "Value",
          "valueColor": "Value Color",
          "worstValue": "Worst Value"
        },
        "barcode": {
          "barHeight": "Bar Height",
          "captionGrouping": "Caption Grouping",
          "captionLocation": "Caption Location",
          "checksum": "Checksum",
          "aztecOptions": {
            "errorCorrection": "Error Correction",
            "layers": "Layers",
            "encoding": "Encoding"
          },
          "code49Options": {
            "groupNumber": "Group Number",
            "grouping": "Grouping"
          },
          "dataMatrixOptions": {
            "ecc000_140SymbolSize": "Ecc000_140 Symbol Size",
            "ecc200EncodingMode": "Ecc200 Encoding Mode",
            "ecc200SymbolSize": "Ecc200 Symbol Size",
            "encodingMode": "Encoding Mode",
            "symbolSize": "Symbol Size",
            "eccMode": "Ecc Mode",
            "encoding": "Encoding",
            "fileIdentifier": "File Identifier",
            "structureNumber": "Structure Number",
            "structuredAppend": "Structured Append"
          },
          "ean128Fnc1Options": {
            "barAdjust": "Bar Adjust",
            "moduleSize": "Module Size",
            "resolution": "Dpi"
          },
          "gs1CompositeOptions": {
            "type": "Composite Type",
            "value": "Composite Value"
          },
          "gs1QrCodeOptions": {
            "encoding": "Encoding",
            "errorLevel": "Error Level",
            "mask": "Mask",
            "version": "Version"
          },
          "invalidBarcodeText": "Invalid Barcode Text",
          "maxiCodeOptions": {
            "mode": "Mode"
          },
          "microPdf417Options": {
            "compactionMode": "Compaction Mode",
            "fileId": "File ID",
            "segmentCount": "Segment Count",
            "segmentIndex": "Segment Index",
            "version": "Version"
          },
          "microQrCodeOptions": {
            "encoding": "Encoding",
            "errorLevel": "Error Level",
            "mask": "Mask",
            "version": "Version"
          },
          "narrowBarWidth": "Narrow Bar Width",
          "nwRatio": "NW Ratio",
          "nwRatio_help": {
            "text": "Also known as the N dimension, this is a value defining the multiple of the ratio between the narrow and wide bars in symbologies that contain bars in only two widths."
          },
          "pdf417Options": {
            "columns": "Columns",
            "errorCorrectionLevel": "Error Correction Level",
            "rows": "Rows",
            "type": "PDF417 Type"
          },
          "qrCodeOptions": {
            "connection": "Connection",
            "connectionNumber": "Connection Number",
            "encoding": "Encoding",
            "errorLevel": "Error Level",
            "mask": "Mask",
            "model": "Model",
            "version": "Version"
          },
          "quietZone": "Quiet Zone",
          "rotation": "Rotation",
          "rssExpandedStacked": {
            "rowCount": "Row Count"
          },
          "supplementOptions": {
            "barHeight": "Supplement Bar Height",
            "captionLocation": "Supplement Caption Location",
            "spacing": "Supplement Spacing",
            "value": "Supplement Value"
          },
          "symbology": "Type",
          "value": "Value"
        },
        "bandedList": {
          "canGrow": "Can Grow",
          "canShrink": "Can Shrink",
          "consumeWhiteSpace": "Consume White Space",
          "preventOrphanedFooter": "Prevent Orphaned Footer",
          "preventOrphanedHeader": "Prevent Orphaned Header",
          "printAtBottom": "Print At Bottom",
          "repeatOnNewPage": "Repeat On New Page"
        },
        "action": {
          "applyParameters": "Apply Parameters",
          "jumpToBookmark": "Jump to Bookmark",
          "jumpToReport": "Jump to Report",
          "jumpToUrl": "Jump to URL",
          "parameters": "Parameters",
          "slice": "Slicers"
        },
        "image": {
          "backgroundRepeat": "Repeat",
          "horizontalAlignment": "Horizontal Alignment",
          "imageLabel": "Image",
          "mimeType": "MIME Type",
          "sizing": "Image Sizing",
          "source": "Source",
          "value": "Value",
          "verticalAlignment": "Vertical Alignment"
        },
        "fplPage": {
          "orientation": "Orientation",
          "size": "Size"
        },
        "dashboardSection": {
          "displayName": "Display Name"
        }
      },
      "categories": {
        "action": "Action",
        "appearance": "Appearance",
        "availableValues": "Available Values",
        "background": "Background",
        "backgroundAndBorders": "Background & Borders",
        "bar": "Bar Settings",
        "border": "Border",
        "borderColor": "Border Color",
        "borderRoundingRadius": "Border Rounding Radius",
        "borderStyle": "Border Style",
        "borderWidth": "Border Width",
        "borders": "Borders",
        "column": "Column",
        "common": "Common",
        "configurations": "Configurations",
        "content": "Content",
        "data": "Data",
        "dataLabel": "Data Label",
        "dataLabelText": "Data Label Text",
        "defaultValue": "Default Value",
        "dimensions": "Dimensions",
        "documentMap": "Document Map",
        "dvchartLabelBorder": "Label Border",
        "dvchartLabelLine": "Label Line",
        "dvchartLabelText": "Label Text",
        "dvchartLegend": "Legend",
        "dvchartLegendBackground": "Legend Background",
        "dvchartLegendBorder": "Legend Border",
        "dvchartLegendText": "Legend Text",
        "dvchartLegendTitle": "Legend Title",
        "dvchartPlotConfig": "Config",
        "dvchartPlotEncodings": "Encodings - Common",
        "dvchartPlotColorEncodings": "Encoding - Color",
        "dvchartPlotShapeEncodings": "Encoding - Shape",
        "dvchartPlotSizeEncodings": "Encoding - Size",
        "dvchartPlotStyle": "Style",
        "dvchartPlotSymbols": "Symbols",
        "fields": "Fields",
        "fillStyle": "Fill Style",
        "font": "Font",
        "general": "General",
        "grid": "Grid Lines",
        "group": "Group",
        "input": "Input",
        "international": "International",
        "labelStyle": "Label Style",
        "labels": "Labels",
        "layout": "Layout",
        "line": "Line",
        "majorGrid": "Major Grid",
        "majorTicks": "Major Ticks",
        "margins": "Margins",
        "marker": "Marker",
        "minorGrid": "Minor Grid",
        "minorTicks": "Minor Ticks",
        "misc": "Misc",
        "noData": "No Data",
        "options": "Options",
        "pageSize": "Page Size",
        "preview": "Preview",
        "range": "Range",
        "referenceLine": "Reference Line",
        "scale": "Scale",
        "seriesLineStyle": "Series Line Style",
        "settings": "Settings",
        "staticMembers": "Static Members",
        "symbology": "Symbology",
        "tableFooter": "Footer",
        "tableHeader": "Header",
        "targetDevice": "Target Device",
        "targetStyle": "Target Style",
        "text": "Text",
        "threeDProperties": "3D properties",
        "tickStyle": "Tick Style",
        "title": "Title",
        "userSort": "User Sort",
        "valueStyle": "Value Style",
        "visibility": "Visibility"
      }
    }
  },
  {
    "ns": "propertyEditors-RPX",
    "lng": "en",
    "resources": {
      "image": {
        "textChange": "Change...",
        "textPick": "Pick..."
      },
      "statusWrapper": {
        "titleModified": "Modified",
        "titleError": "Invalid",
        "titleInherited": "Inherited from Parent Style",
        "titleDefault": "",
        "btnReset": "Reset"
      },
      "style": {
        "textEdit": "Edit",
        "drillCaptionStyle": "Style"
      }
    }
  },
  {
    "ns": "propertyEditors",
    "lng": "en",
    "resources": {
      "picker": {
        "btnReset": "Reset",
        "btnExpression": "Expression...",
        "btnDataVisualizer": "Data Visualizer...",
        "warnings": {
          "groupingByAggregate": "grouping by this attribute is discouraged",
          "groupingIsDiscouraged": "grouping by aggregate attributes is discouraged"
        },
        "textSpecifyDataSet": "Specify DataSet to see the list of available attributes",
        "btnPickData": "Pick Data...",
        "headingParameters": "Parameters",
        "titleDataBinding": "Data Binding"
      },
      "boolean": {
        "textTrue": "True",
        "textFalse": "False",
        "textUndefined": "Undefined"
      },
      "colorDropdown": {
        "headingStandard": "Standard Colors",
        "btnPalettes": "Palettes",
        "btnColorPicker": "Other Colors",
        "btnWebColors": "Web Colors",
        "labelHue": "Hue",
        "labelSaturation": "Saturation",
        "labelLightness": "Lightness",
        "labelHex": "Hex",
        "themeColors": {
          "titleBase": "{{colorKey}}",
          "titleDarker25": "{{colorKey}} - 25% darker",
          "titleDarker50": "{{colorKey}} - 50% darker",
          "titleLighter25": "{{colorKey}} - 25% lighter",
          "titleLighter50": "{{colorKey}} - 50% lighter",
          "titleLighter75": "{{colorKey}} - 75% lighter"
        },
        "headingTheme": "Theme Colors"
      },
      "common": {
        "textMultipleValues": "<Multiple Values>",
        "textEmpty": "<Empty>",
        "titleCollapse": "Collapse",
        "titleExpand": "Expand",
        "textExpression": "<Expression>",
        "textNone": "<None>"
      },
      "toggleState": {
        "textExpanded": "Expanded",
        "textCollapsed": "Collapsed"
      },
      "collection": {
        "textItemsCount": "{{count}} item",
        "textItemsCount_plural": "{{count}} items",
        "btnAdd": "Add",
        "titleAdd": "Add Item",
        "titleDelete": "Delete",
        "titleShowItems": "Show Items",
        "titleClose": "Close",
        "textEmpty": "Collection is empty"
      },
      "dataSetQuery": {
        "placeholder": "enter query here..."
      },
      "dvchartEncodingCollection": {
        "color": {
          "valuesName": "Show Values Names In Legend"
        },
        "value": {
          "prefix": "Value",
          "propertiesTitle": "Value Properties"
        },
        "details": {
          "prefix": "Details",
          "propertiesTitle": "Details Properties"
        },
        "text": {
          "prefix": "Text",
          "propertiesTitle": "Text Properties"
        },
        "aggregate": {
          "prefix": "Aggregate",
          "propertiesTitle": "Aggregate Properties"
        },
        "fieldPlaceholder": "<Key>",
        "valuePlaceholder": "<Value>"
      },
      "chartComplexEncodingFieldCollectionEditor": {
        "prefix": "Field"
      },
      "chartSimpleEncodingFieldCollectionEditor": {
        "keyHeader": "Key",
        "valueHeader": "Value",
        "captionHeader": "Caption"
      },
      "dvchartPlotTemplate": {
        "textSelect": "Select..."
      },
      "dvchartRuleProperties": {
        "headingTargetProperty": "Target Property",
        "headingValueProperty": "Value"
      },
      "dvchartTemplate": {
        "custom": "<Custom>"
      },
      "format": {
        "$locale": "en-US",
        "$localeCurrency": "USD",
        "digitsLabel": "Digits",
        "customFormatMask": "(###) ###-####",
        "default": "<Default>",
        "currency": "Currency",
        "decimal": "Decimal",
        "scientific": "Scientific",
        "fixedPoint": "Fixed-point",
        "general": "General",
        "number": "Number",
        "percent": "Percent",
        "hexadecimal": "Hexadecimal",
        "shortDate": "Short date",
        "longDate": "Long date",
        "fullDateShortTime": "Full date/short time",
        "generalDateShortTime": "General date/short time",
        "generalDateLongTime": "General date/long time",
        "shortTime": "Short time",
        "longTime": "Long time",
        "monthDay": "Month day",
        "yearMonth": "Year month",
        "custom": "(Custom)"
      },
      "image": {
        "textNoDataFieldsFound": "No data fields found",
        "btnShared": "Shared",
        "btnEmbedded": "Embedded",
        "btnDatabase": "Database",
        "titleRemove": "Remove '{{name}}'...",
        "textLoad": "Load...",
        "textNoImagesFound": "No images found"
      },
      "dataSetFieldCollection": {
        "fieldHeader": "Field Name",
        "valueHeader": "Value",
        "fieldPlaceholder": "<Name>",
        "valuePlaceholder": "<Value>",
        "dataFieldHeader": "Data Field",
        "dataFieldPlaceholder": "<Data Field>"
      },
      "dataSetParameterCollection": {
        "nameHeader": "Parameter Name",
        "valueHeader": "Value",
        "namePlaceholder": "<Name>",
        "valuePlaceholder": "<Value>"
      },
      "subreport": {
        "parameter": "Parameter",
        "parameterNamePlaceholder": "<Name>",
        "parameterValuePlaceholder": "<Value>",
        "parameterNameHeader": "Name",
        "parameterValueHeader": "Value"
      },
      "mailMergeFieldsCollection": {
        "nameHeader": "Field Name",
        "valueHeader": "Value",
        "namePlaceholder": "<Name>",
        "valuePlaceholder": "<Value>"
      },
      "dvcartLegendRangeOptionsCollection": {
        "titleHeader": "Title",
        "toHeader": "To",
        "titlePlaceholder": "<Title>"
      },
      "layerCollection": {
        "propertiesTitle": "Layer properties: {{layerName}}"
      },
      "marginsSizes": {
        "custom": "(Custom)"
      },
      "pageSize": {
        "custom": "(Custom)"
      },
      "palette": {
        "customPaletteLabel": "<Custom>",
        "extraPalettesHeader": "Theme Palettes",
        "standardPalettesHeader": "Standard Palettes"
      },
      "reportParameter": {
        "placeholderEmpty": "<Empty>",
        "placeholderValue": "Value",
        "placeholderLabel": "Label",
        "labelSource": "Source",
        "labelFromQuery": "From Query",
        "labelNonQueried": "Non-Queried"
      },
      "parameterValuesOrder": {
        "ascending": "Ascending",
        "descending": "Descending"
      },
      "parameterCollection": {
        "titleProperties": "Parameter properties"
      },
      "reports": {
        "textLoadingError": "Error {{status}}: {{statusText}}",
        "textLoading": "Loading..."
      },
      "reportPartPropertiesCollection": {
        "propertiesTitle": "Property: {{reportPartName}}"
      },
      "reportPartsCollection": {
        "propertiesTitle": "Report Part: {{reportPartName}}"
      },
      "simple": {
        "backgroundColor": {
          "label": "Color",
          "title": "Background Color"
        },
        "borders": {
          "borderColor": {
            "label": "Color",
            "title": "Border Color"
          },
          "borderStyle": {
            "label": "Style",
            "title": "Border Style"
          },
          "borderWidth": {
            "label": "Width",
            "title": "Border Width"
          },
          "sides": {
            "all": "All",
            "left": "Left",
            "top": "Top",
            "right": "Right",
            "bottom": "Bottom",
            "reset": "Reset"
          },
          "borders": "Borders"
        },
        "common": {
          "textExpressionCompact": "<𝑓>"
        },
        "font": {
          "fontFamily": {
            "label": "Font",
            "title": "Font Family"
          },
          "fontSize": {
            "label": "Size",
            "title": "Font Size"
          },
          "fontStyle": {
            "label": "Style",
            "title": "Font Style"
          },
          "fontWeight": {
            "label": "Weight",
            "title": "Font Weight"
          },
          "textColor": {
            "label": "Color",
            "title": "Text Color"
          },
          "textDecoration": {
            "label": "Decoration",
            "title": "Text Decoration"
          }
        }
      },
      "validationErrors": {
        "expression": {
          "unknownFunction": "Warning: unknown function name '{{token}}' {{positionInfo}}",
          "disabledReportItems": "Warning: It is forbidden to use the 'ReportItems' token type in this expression (in '{{token}}' {{positionInfo}})",
          "disabledFields": "Warning: It is forbidden to use the 'Fields' token type in this expression (in '{{token}}' {{positionInfo}})",
          "parseError": "Syntax error: It is not possible to convert this interpolation syntax expression to rdl syntax",
          "unknownThemeImage": "Warning: unknown theme image name in '{{token}}' {{positionInfo}}",
          "unknownReportItem": "Warning: unknown report item name in '{{token}}' {{positionInfo}}",
          "unknownParameter": "Warning: unknown parameter name in '{{token}}' {{positionInfo}}",
          "unknownField": "Warning: unknown field name in '{{token}}' {{positionInfo}}",
          "syntaxError": "Syntax error: unexpected token '{{token}}' {{positionInfo}}",
          "warning": "Warning: unknown token '{{token}}' {{positionInfo}}",
          "unknown": "Unknown error '{{positionInfo}}'",
          "errorPosition": "at line {{line}}, column {{column}}"
        }
      }
    }
  },
  {
    "ns": "reportItems",
    "lng": "en",
    "resources": {
      "dvchartHeader": "Header",
      "dvchartPlotArea": "Plot Area",
      "dvchartGlobalLegend": "Global Legend",
      "dvchartFooter": "Footer",
      "dvchartPlot": "Plot",
      "dvchartXAxis": "X Axis",
      "dvchartYAxis": "Y Axis",
      "dvchartColorLegend": "Legend - Color",
      "dvchartShapeLegend": "Legend - Shape",
      "dvchartSizeLegend": "Legend - Size",
      "Page": "Page",
      "Report": "Report",
      "dashboard": "Dashboard",
      "body": "Body",
      "dashboardPageHeader": "Header",
      "pageHeader": "Page Header",
      "dashboardPageFooter": "Footer",
      "pageFooter": "Page Footer",
      "bandedListDetails": "Details",
      "bandedListFooter": "Footer",
      "bandedListGroup": "Group",
      "bandedListHeader": "Header",
      "bandedList": "Banded List",
      "barcode": "Barcode",
      "bullet": "Bullet",
      "dvchartAxis": "Axis",
      "dvchartValueAggregateEncoding": "Value Aggregate Encoding",
      "dvchartAggregateEncoding": "Aggregate Encoding",
      "dvchartDetailsEncoding": "Details Encoding",
      "dvchartTextEncoding": "Text Encoding",
      "dvchartCategoryEncoding": "Category Encoding",
      "dvchartEncodingValue": "Encoding Value",
      "dvchart": "Chart",
      "dvchartLegend": "Legend",
      "dvchartPlotCustomLabel": "Gauge Label",
      "dvchartPlotPointer": "Gauge Pointer",
      "checkbox": "CheckBox",
      "contentplaceholder": "Content Placeholder",
      "dashboardSection": "Section",
      "unknown": "Unknown Item",
      "report": "Report",
      "page": "Page",
      "formattedText": "Formatted Text",
      "image": "Image",
      "inputField": "Input Field",
      "layer": "Layer",
      "line": "Line",
      "listRow": "Row",
      "listColumn": "Column",
      "listRowsStacked": "Rows 2-{{rowCount}}",
      "listColumnsStacked": "Columns 2-{{columnCount}}",
      "list": "List",
      "continuousSection": "Continuous Section",
      "fixedPageSection": "Fixed Page Section",
      "reportPart": "Report Part",
      "reportPartProperty": "Property",
      "overflowPlaceholder": "Overflow Placeholder",
      "pageSection": "Page Header/Footer",
      "partItem": "PartItem",
      "container": "Container",
      "richtext": "Rich Text",
      "shape": "Shape",
      "sparkline": "Sparkline",
      "subreport": "Subreport",
      "tableColumn": "Column",
      "tableDetails": "Details",
      "tableFooter": "Footer",
      "tableHeader": "Header",
      "table": "Table",
      "tableRow": "Row",
      "tableGroup": "Group",
      "tablix": "Tablix",
      "tablixMember": "Tablix Member",
      "tablixRow": "Row",
      "tablixColumn": "Column",
      "textbox": "TextBox",
      "tableOfContents": "Table Of Contents",
      "tableOfContentsLevel": "Level"
    }
  },
  {
    "ns": "romLabels",
    "lng": "en",
    "resources": {
      "chart": "Chart",
      "dvchart": "DV.Chart",
      "matrix": "Matrix",
      "table": "Table",
      "tablix": "Tablix"
    }
  },
  {
    "ns": "tablixWizard",
    "lng": "en",
    "resources": {
      "textNoValues": "There are no values specified.",
      "textAddValue": "Please add at least a single value to create a Tablix.",
      "aggregates": {
        "avg": "Avg",
        "count": "Count",
        "max": "Max",
        "min": "Min",
        "none": "None",
        "sum": "Sum"
      },
      "titleAggregate": "Aggregate",
      "displayAsOptions": {
        "default": "Default",
        "percentColumnGroupTotal": "% Column Group Total",
        "percentGrandTotal": "% Grand Total",
        "percentParentColumnGroupTotal": "% Parent Column Group Total",
        "percentParentRowGroupTotal": "% Parent Row Group Total",
        "percentRowGroupTotal": "% Row Group Total"
      },
      "titleDisplayAs": "Display As",
      "placeholderNoField": "no field",
      "titleDelete": "Delete",
      "textNoDataSets": "Report has no data sets.",
      "textAddDataSet": "Please add a data set to your report at first.",
      "formats": {
        "currency": "Currency",
        "decimal": "Decimal",
        "default": "Default",
        "general": "General",
        "number": "Number",
        "percent": "Percent"
      },
      "titleFormat": "Format",
      "sortings": {
        "Ascending": "Ascending",
        "Descending": "Descending",
        "None": "None"
      },
      "titleSorting": "Sorting: {{sorting}}",
      "filters": {
        "titleEditGroupFilters": "Edit Group Filters...",
        "textFilters": "Filters",
        "titleEditTablixFilters": "Edit Tablix Filters...",
        "headingTablixFilters": "Tablix Filters",
        "headingGroupFilters": "Group Filters – {{groupLabel}}"
      },
      "textSwap": "Swap",
      "titleSwapRowColumnGroups": "Swap Row/Column Groups",
      "textAsRows": "As Rows",
      "textShowValuesAsRows": "Show Values as Rows",
      "textLayoutOptions": "Layout Options",
      "textRowGroups": "Row Groups",
      "textColumns": "Column Groups",
      "textValues": "Values",
      "btnTotals": "Totals",
      "btnStyling": "Styling",
      "btnOrganization": "Organization",
      "labelExpandCollapse": "Expand/Collapse Groups",
      "labelCollapsedGroups": "Collapsed Groups",
      "labelUserSortEnabled": "Enable User Sort",
      "labelSteppedRowGroups": "Stepped Row Groups",
      "labelFrozenRows": "Frozen Rows",
      "labelFrozenColumns": "Frozen Columns",
      "labelNone": "None",
      "labelTotalsForRows": "Totals for Row Groups",
      "labelSubTotalsForRows": "Subtotals for Row Groups",
      "labelTotalsForColumns": "Totals for Column Groups",
      "labelSubTotalsForColumns": "Subtotals for Column Groups",
      "labelShowTotalsBeforeGroup": "Show Totals before Groups",
      "warning": {
        "btnRevert": "Revert",
        "btnQuit": "Quit",
        "headingWarning": "Warning",
        "textChangedStructure": "Tablix Wizard cannot edit the Tablix as its structure has been changed.",
        "textConfirmReverting": "Please confirm reverting to the previous Tablix state editable by Wizard.",
        "textOtherwiseCannotEdit": "Otherwise, it will not be possible to continue editing within Tablix Wizard."
      },
      "headingTablixWizard": "Tablix Wizard",
      "headingLayoutDesign": "Layout Design",
      "headingDataSets": "Data Sets",
      "makeTablix": {
        "textValues": "Values",
        "textTotal": "Total"
      },
      "textOpenWizard": "Open Tablix Wizard...",
      "textCannotEditInWizard": "Tablix has complex structure and cannot be edited in Wizard. Please use Group Editor instead."
    }
  },
  {
    "ns": "validationErrors",
    "lng": "en",
    "resources": {
      "unknown": {
        "unknown": "Unknown type '{{type}}'"
      },
      "enum": {
        "incorrect": "Enum value of type '{{enumType}}' should be one of the following: {{enumValues}}"
      },
      "length": {
        "negative": "Value should be greater than zero",
        "tooLarge": "Value should be lower than {{max}}",
        "tooSmall": "Value should be greater than {{min}}",
        "unit": "Valid units are 'cm', 'mm', 'in', 'pt', and 'pc'"
      },
      "mime_type": {
        "incorrect": "Image MIME Type is expected to match {{wildcard}}"
      },
      "number": {
        "nan": "Value is not a number",
        "tooLarge": "Value should be lower than {{max}}",
        "tooSmall": "Value should be greater than {{min}}",
        "empty": "Value is empty",
        "outOfInterval": "Value is out of interval",
        "outOfRange": "Value is too big or too small"
      },
      "pattern": "Invalid expression. Literal expressions for this property must be of type '{{type}}'. {{info}}",
      "errorPosition": "at line {{line}}, column {{column}}",
      "expression": {
        "unknownFunction": "Warning: unknown function name '{{token}}' {{positionInfo}}",
        "disabledReportItems": "Warning: It is forbidden to use the 'ReportItems' token type in this expression (in '{{token}}' {{positionInfo}})",
        "disabledFields": "Warning: It is forbidden to use the 'Fields' token type in this expression (in '{{token}}' {{positionInfo}})",
        "parseError": "Syntax error: It is not possible to convert this interpolation syntax expression to rdl syntax",
        "unknownThemeImage": "Warning: unknown theme image name in '{{token}}' {{positionInfo}}",
        "unknownReportItem": "Warning: unknown report item name in '{{token}}' {{positionInfo}}",
        "unknownParameter": "Warning: unknown parameter name in '{{token}}' {{positionInfo}}",
        "unknownField": "Warning: unknown field name in '{{token}}' {{positionInfo}}",
        "syntaxError": "Syntax error: unexpected token '{{token}}' {{positionInfo}}",
        "warning": "Warning: unknown token '{{token}}' {{positionInfo}}",
        "unknown": "Unknown error '{{positionInfo}}'",
        "errorPosition": "at line {{line}}, column {{column}}"
      }
    }
  },
  {
    "ns": "warning",
    "lng": "en",
    "resources": {
      "embeddedImage": {
        "badImageFile": "Selected image file '{{name}}' is invalid.",
        "badFileType": "Selected file '{{name}}' ({{type}}) is not supported.",
        "badFile": "Selected file '{{name}}' is not an image.",
        "badImageSize": "Selected image file '{{name}}' exceeds limit of {{limit}} MB."
      },
      "pageSize": {
        "caption": "The specified page size cannot be set",
        "info": "- '{{name}}' cannot be less than {{value}}.",
        "labels": {
          "height": "Page Height",
          "width": "Page Width"
        }
      },
      "margins": {
        "caption": "The specified margins cannot be set",
        "labels": {
          "top": "Top Margin",
          "right": "Right Margin",
          "bottom": "Bottom Margin",
          "left": "Left Margin"
        },
        "info": "- '{{name}}' cannot be greater than {{value}}."
      }
    }
  },
  {
    "ns": "app-dataSources-RPX",
    "lng": "en",
    "resources": {
      "properties": {
        "connectionString": "Connection String",
        "query": "Query",
        "json": {
          "jsonPath": "JSON Path"
        },
        "nonSerializable": {
          "name": "Name"
        },
        "xml": {
          "fileUrl": "File URL",
          "pattern": "Pattern"
        },
        "dataProvider": "Provider"
      },
      "providers": {
        "csv": {
          "textProviderName": "CSV Provider"
        },
        "json": {
          "textProviderName": "JSON Provider"
        },
        "odbc": {
          "textProviderName": "Microsoft ODBC Provider"
        },
        "oledb": {
          "textProviderName": "Microsoft OLE DB Provider"
        },
        "sql": {
          "textProviderName": "Microsoft SQL Client Provider"
        },
        "xml": {
          "textProviderName": "XML Provider"
        },
        "sqlite": {
          "textProviderName": "SQLite Provider"
        }
      },
      "textTestConnectionFailed": "Connection test failed!",
      "textTestConnectionSucceededLabel": "Connection test succeeded!",
      "titleShowDetails": "Show Details",
      "titleHideDetails": "Hide Details",
      "btnValidating": "Validating...",
      "btnTestConnection": "Test Connection",
      "btnBack": "Back",
      "btnConnString": "Connection String",
      "titleExpressionInConnectionString": "Expression connection string can be edited in connection string mode only",
      "btnAdd": "Add",
      "btnSaveChanges": "Save Changes",
      "btnCancel": "Cancel",
      "headingNewDataSource": "New Data Source",
      "headingDataSourceEditor": "{{dataProvider}} · Data Source Editor"
    }
  },
  {
    "ns": "app-errorHandling",
    "lng": "en",
    "resources": {
      "errors": {
        "connectionPropertiesNotSpecified": "Connection properties are not specified.",
        "connectionStringError": "Connection string format error.",
        "invalidDataProvider": "Invalid data provider {{dataProvider}}.",
        "invalidExpressionInConnectionString": "Invalid expression in connection string.",
        "openError": "Data source connection couldn't be opened.",
        "unexpectedError": "Unexpected error occurred."
      },
      "dataSetDialog": {
        "duplicateFields": "Query has duplicate fields: {{fieldNames}}",
        "validationTimeout": "Query validation timed out",
        "unexpectedError": "Unexpected error"
      }
    }
  },
  {
    "ns": "app",
    "lng": "en",
    "resources": {
      "dialogs": {
        "datasetEditor": {
          "properties": {
            "categories": {
              "connectionParameters": "Testing Parameter Values",
              "fields": "Fields",
              "general": "General",
              "options": "Options",
              "settings": "Settings"
            },
            "labels": {
              "connectionParameter": "Parameter \"{{paramName}}\"",
              "name": "Name",
              "query": "Query",
              "commandType": "Command Type",
              "boundFields": "Bound Fields",
              "calculatedFields": "Calculated Fields",
              "nestedDataSets": "Nested Datasets",
              "parameters": "Parameters",
              "filters": "Filters",
              "caseSensitivity": "Case Sensitivity",
              "collation": "Collation",
              "kanatypeSensitivity": "Kanatype Sensitivity",
              "widthSensitivity": "Width Sensitivity",
              "accentSensitivity": "Accent Sensitivity"
            }
          },
          "new": {
            "title": "New Data Set",
            "subtitle": "Based on \"{{dataSourceName}}\""
          },
          "edit": {
            "subtitle": "Data Set Editor • Based on \"{{dataSourceName}}\""
          },
          "validate": "Validate",
          "validating": "Validating..."
        },
        "file": {
          "textDocumentName": "Name",
          "placeholderSearch": "Enter report name...",
          "textGettingReports": "Getting Reports..."
        },
        "open": {
          "btnOpenReport": "Open Document",
          "textProcessing": "Opening Document...",
          "headingOpen": "Open"
        },
        "common": {
          "btnCancel": "Cancel"
        },
        "saveAs": {
          "textWillBeOverwritten": "Document will be overwritten.",
          "textInvalidName": "Document name is not valid.",
          "titleInvalidName": "Please do not use restricted symbols \"<\", \">\", \"\\\", \":\", \"?\", \"*\", \"/\", \"|\", \"\"\" and do not use \".\" as the first symbol.",
          "btnSave": "Save Document",
          "textProcessing": "Saving Document...",
          "headingSaveAs": "Save As"
        },
        "confirmSavingChanges": {
          "wantSaveChanges": "Do you want to save changes to {{reportName}}?",
          "btnSave": "Save",
          "btnDoNotSave": "Don't save"
        },
        "confirmReplacement": {
          "conflictMessage": "There is a conflict between the current report and the selected master report:",
          "confirmationMessage": "Would you like to continue and apply the changes above?",
          "duplicatedDataNamesError": "Data sources or sets in the current report conflict with those in the master report and will be renamed: {{dataSourceNames}}, {{dataSetNames}}.",
          "duplicatedParamsNamesError": "Parameters in the current report share names with those in the master report and will be renamed: {{parameterNames}}.",
          "contentMismatchError": "The content placeholders in the new master report do not match those in the current report, and content will be lost in unmatched placeholders.",
          "sectionsHaveItemsError": "The content of the current report is not empty and will be lost.",
          "title": "Continue replacement?"
        },
        "restoreUnsavedReport": {
          "textUnsavedReportDetected": "Unsaved report is detected. Would you like to restore it?",
          "btnRestore": "Restore",
          "btnDeleteUnsavedReport": "Delete unsaved report"
        }
      },
      "common": {
        "btnOk": "OK",
        "btnCancel": "Cancel",
        "btnContinue": "Continue"
      },
      "dataTab": {
        "nameTemplateDataSet": "DataSet",
        "nameTemplateReportParameter": "Parameter",
        "titleData": "Data",
        "titleStylesheet": "Style Sheet"
      },
      "dataTab-RPX": {
        "btnAdd": "Add",
        "headingEditCalcField": "Edit Calculated Field",
        "nameTemplateCalculatedField": "Field",
        "nameTemplateParameter": "Parameter",
        "textFieldsCount": "{{count}} field",
        "textFieldsCount_plural": "{{count}} field",
        "headingDataSource": "Data Source",
        "headingFields": "Bound Fields",
        "headingCalculatedFields": "Calculated Fields",
        "headingParameters": "Parameters",
        "textNoDataSource": "Report has no data source",
        "textNoCalcFields": "Report has no calculated fields",
        "textNoParameters": "Report has no parameters",
        "headingEditParameter": "Edit Parameter",
        "headingEditStyle": "Edit Style"
      },
      "dataTab-RDLX": {
        "headingDataSources": "Data Sources",
        "headingDataSets": "Data Sets",
        "textNoDataSets": "Report has no data sets",
        "headingParameters": "Parameters",
        "headingCommonValues": "Common Values",
        "textNoDataSource": "Report has no data sources",
        "textNoParameters": "Report has no parameters",
        "headingEditParameter": "Edit Parameter"
      },
      "fileView": {
        "builtInTemplates": {
          "FPL": "Blank Page Report",
          "MSL": "Blank RDLX Report",
          "DBL": "Blank RDLX Dashboard",
          "RPX": "Blank Section Report"
        },
        "btnBack": "Back",
        "titleBack": "Back",
        "tabs": {
          "newTab": {
            "btnNew": "New",
            "creatingReport": "Creating Report...",
            "noTemplatesMatchingFilter": "No report templates found matching the specified filter",
            "noDataSetsMatchingFilter": "No data sets found matching the specified filter",
            "noMasterReportsMatchingFilter": "No master reports found matching the specified filter",
            "btnCreate": "Create",
            "btnChangeTemplate": "Change Template",
            "chooseData": "Choose Data",
            "noDataSetsAvailable": "No data sets available",
            "placeholderSearch": "Search Templates",
            "headingSearch": "Search Results",
            "headingNew": "New Document",
            "sections": {
              "serverDatasets": {
                "headingBasedOn": "Select Required Data Sets"
              },
              "templates": {
                "headingFromTemplate": "From Template",
                "headingFromMasterReport": "From Master Report"
              }
            },
            "gettingTemplates": "Getting Templates...",
            "gettingDataSets": "Getting Data Sets...",
            "gettingMasterReports": "Getting Master Reports..."
          },
          "openTab": {
            "btnOpen": "Open",
            "report": {
              "opening": "Opening report \"{{reportName}}\"...",
              "gettingInfo": "Getting Reports..."
            },
            "textNoDocumentsFound": "No documents found matching the specified filter",
            "placeholderSearch": "Search Documents",
            "headingSearch": "Search Results",
            "headingOpen": "Open Document",
            "headingFolders": "Folders",
            "headingDocuments": "Documents"
          },
          "saveAsTab": {
            "btnSaveAs": "Save",
            "report": {
              "saving": "Saving report \"{{reportName}}\"...",
              "namePlaceholder": "enter report name here..."
            },
            "btnSave": "Save",
            "placeholderSearch": "Search Documents",
            "headingSearch": "Search Results",
            "headingSaveAs": "Save Document",
            "textOverwriteWarning": "Document will be overwritten.",
            "tooltipInvalidName": "Please do not use restricted symbols \"<\", \">\", \"\\\", \":\", \"?\", \"*\", \"/\", \"|\", \"\"\" and do not use \".\" as the first symbol.",
            "headingFolders": "Folders",
            "headingDocuments": "Documents"
          },
          "searchPlaceholder": "Search",
          "common": {
            "btnCancel": "Cancel"
          },
          "listView": "List",
          "galleryView": "Gallery",
          "folder": {
            "rootFolderTooltip": "Root Folder",
            "goBack": "Back"
          }
        },
        "btnClose": "Close"
      },
      "notificationsPanel": {
        "btnShowDetails": "Show Details",
        "btnDismissAll": "Dismiss All",
        "btnDismiss": "Dismiss",
        "titleExpand": "Expand",
        "titleCollapse": "Collapse",
        "textError": "Error",
        "textError_plural": "Errors",
        "textWarning": "Warning",
        "textWarning_plural": "Warnings",
        "textNotification": "Notification",
        "textNotification_plural": "Notifications"
      },
      "dataSetPicker": {
        "btnAdd": "Add",
        "btnCancel": "Cancel",
        "textGettingDataResources": "Getting the list of available data resources...",
        "textNoDataResourcesAvailable": "No data resources available",
        "textGettingContent": "Getting the resource content...",
        "headingPickDataSet": "Pick a Data Set",
        "placeholderSearch": "enter data resource name here..."
      },
      "stylesTab-RPX": {
        "headingStyles": "Styles",
        "textNoStyles": "Report has no styles"
      },
      "sidebar": {
        "titleCollapse": "Collapse",
        "titleExpand": "Expand",
        "titleProperties": "Properties"
      },
      "about": {
        "urlSupportedControls": "https://developer.mescius.com/activereportsnet/docs/latest/online/report-controls.html",
        "textAppTitle": "ActiveReports Web Designer",
        "textAppTitleCompact": "AR Web Designer"
      },
      "errors": {
        "textErrorCode": "Error code: {{code}}",
        "textLoadReportError": "The report \"{{reportName}}\" could not be opened.",
        "textSetMasterReportError": {
          "DecodingError": "The report \"{{reportName}}\" cannot be a master-report.",
          "ReportTypeError": "The report \"{{reportName}}\" cannot be a master-report."
        }
      },
      "textUntitledReportName": "Untitled",
      "overlay": {
        "textCreatingReport": "Creating report...",
        "textPreparingReportPreview": "Preparing report preview...",
        "textGettingReportParameters": "Getting \"{{reportName}}\" report parameters..."
      },
      "warnings": {
        "textReportParameters": "Could not load report parameters."
      }
    }
  },
  {
    "ns": "dataSourceEditor",
    "lng": "en",
    "resources": {
      "providers": {
        "csv": {
          "labelYes": "Yes",
          "labelNo": "No",
          "delimiters": {
            "comma": "Comma",
            "semicolon": "Semicolon",
            "tab": "Tab",
            "space": "Space",
            "crlf": "New Line (CRLF)",
            "cr": "New Line (CR)",
            "lf": "New Line (LF)",
            "quotes": "Quotes",
            "single-quotes": "Single Quotes"
          },
          "categories": {
            "source": "Source",
            "delimiters": "Delimiters"
          },
          "properties": {
            "path": "Path",
            "encoding": "Encoding",
            "locale": "Locale",
            "dataStartLine": "Starting Row",
            "hasHeaders": "Columns Have Headers",
            "fixed": "Fixed File",
            "columnsSeparator": "Columns Separator",
            "joinColumnsSeparators": "Treat consecutive columns separators as one",
            "rowsSeparator": "Rows Separator",
            "joinRowsSeparators": "Treat consecutive rows separators as one",
            "textQualifier": "Text Qualifier"
          },
          "textProviderName": "CSV Provider"
        },
        "json": {
          "headers": {
            "headerName": "Name",
            "headerValue": "Value"
          },
          "collection": {
            "btnAdd": "Add",
            "titleAdd": "Add Item",
            "titleDelete": "Delete",
            "titleShowItems": "Show Items",
            "titleClose": "Close",
            "textEmpty": "No headers",
            "textItemsCount": "{{count}} header",
            "textItemsCount_plural": "{{count}} headers"
          },
          "properties": {
            "headers": "Request Headers",
            "type": "Type",
            "path": "Path",
            "method": "Request Method",
            "body": "Request Body",
            "jsonData": "JSON Data",
            "jsonExpression": "JSON Expression",
            "schemaType": "JSON Schema Type",
            "schemaDoc": "Schema Document",
            "schemaData": "Schema Data"
          },
          "dataTypes": {
            "doc": "External",
            "data": "Embedded",
            "expression": "Expression",
            "auto": "Auto"
          },
          "requestMethod": {
            "get": "GET",
            "post": "POST"
          },
          "placeholderRequestBody": "Request body content in JSON format",
          "placeholderJsonExpressionI11n": "Enter an expression using the interpolation syntax",
          "placeholderJsonExpression": "Enter an expression starting with the \"=\"",
          "categories": {
            "content": "Content",
            "schema": "Schema"
          },
          "textProviderName": "JSON Provider"
        },
        "oledb": {
          "labelYes": "Yes",
          "labelNo": "No",
          "categories": {
            "connection": "Connection",
            "authentication": "Authentication"
          },
          "properties": {
            "provider": "Provider",
            "server": "Server or File Name",
            "database": "Database",
            "useIntegratedSecurity": "Use Integrated Security",
            "username": "Username",
            "password": "Password"
          },
          "textProviderName": "Microsoft OLE DB Provider"
        },
        "shared": {
          "labelUnknownDataSourceRef": "Unknown data source reference",
          "labelFileNotFound": "Reference '{{name}}' was not found in the system",
          "textLabelReference": "Reference",
          "textLabelEmptyReference": "<Empty>",
          "textProviderName": "Shared Reference"
        },
        "sql": {
          "labelYes": "Yes",
          "labelNo": "No",
          "categories": {
            "connection": "Connection",
            "authentication": "Authentication"
          },
          "properties": {
            "server": "Server",
            "database": "Database",
            "useIntegratedSecurity": "Use Integrated Security",
            "username": "Username",
            "password": "Password"
          },
          "textProviderName": "Microsoft SQL Client Provider"
        },
        "xml": {
          "dataTypes": {
            "doc": "External File or URL",
            "data": "Embedded",
            "expression": "Expression"
          },
          "placeholderXmlExpressionI11n": "Enter an expression using the interpolation syntax",
          "placeholderXmlExpression": "Enter an expression starting with the \"=\"",
          "categories": {
            "source": "Source"
          },
          "properties": {
            "type": "XML Data Type",
            "xmlDoc": "XML Document",
            "xmlData": "XML Data",
            "xmlExpression": "XML Expression",
            "transformationDoc": "XSLT Transformation File"
          },
          "textProviderName": "XML Provider"
        },
        "odbc": {
          "textProviderName": "Microsoft ODBC Provider"
        },
        "sqlite": {
          "textProviderName": "SQLite Provider"
        }
      },
      "properties": {
        "connectionString": "Connection String",
        "name": "Name",
        "dataProvider": "Provider"
      },
      "textDataSourceNameTemplate": "DataSource",
      "textTestConnectionSucceededLabel": "Connection test succeeded!",
      "textTestConnectionFailed": "Connection test failed!",
      "btnValidating": "Validating...",
      "btnTestConnection": "Test Connection",
      "btnBack": "Back",
      "btnConnString": "Connection String",
      "titleExpressionInConnectionString": "Expression connection string can be edited in connection string mode only",
      "btnAdd": "Add",
      "btnSaveChanges": "Save Changes",
      "btnCancel": "Cancel",
      "headingNewDataSource": "New Data Source",
      "headingDataSourceEditor": "{{dataProvider}} · Data Source Editor",
      "titleShowDetails": "Show Details",
      "titleHideDetails": "Hide Details",
      "titleClose": "Close"
    }
  }
]